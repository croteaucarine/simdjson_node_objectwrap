[
  {
    "id": "11454101495",
    "type": "PullRequestReviewCommentEvent",
    "actor": {
      "id": 11567269,
      "login": "gatorsmile",
      "display_login": "gatorsmile",
      "gravatar_id": "",
      "url": "https://api.github.com/users/gatorsmile",
      "avatar_url": "https://avatars.githubusercontent.com/u/11567269?"
    },
    "repo": {
      "id": 17165658,
      "name": "apache/spark",
      "url": "https://api.github.com/repos/apache/spark"
    },
    "payload": {
      "action": "created",
      "comment": {
        "url": "https://api.github.com/repos/apache/spark/pulls/comments/375942145",
        "pull_request_review_id": 354591753,
        "id": 375942145,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NTk0MjE0NQ==",
        "diff_hunk": "@@ -40,49 +40,60 @@ case class InsertAdaptiveSparkPlan(\n \n   private val conf = adaptiveExecutionContext.session.sessionState.conf\n \n-  def containShuffle(plan: SparkPlan): Boolean = {\n-    plan.find {\n-      case _: Exchange => true\n-      case s: SparkPlan => !s.requiredChildDistribution.forall(_ == UnspecifiedDistribution)\n-    }.isDefined\n-  }\n-\n-  def containSubQuery(plan: SparkPlan): Boolean = {\n-    plan.find(_.expressions.exists(_.find {\n-      case _: SubqueryExpression => true\n-      case _ => false\n-    }.isDefined)).isDefined\n-  }\n-\n   override def apply(plan: SparkPlan): SparkPlan = applyInternal(plan, false)\n \n   private def applyInternal(plan: SparkPlan, isSubquery: Boolean): SparkPlan = plan match {\n+    case _ if !conf.adaptiveExecutionEnabled => plan\n     case _: ExecutedCommandExec => plan\n-    case _ if conf.adaptiveExecutionEnabled && supportAdaptive(plan)\n-      && (isSubquery || containShuffle(plan) || containSubQuery(plan)) =>\n-      try {\n-        // Plan sub-queries recursively and pass in the shared stage cache for exchange reuse. Fall\n-        // back to non-adaptive mode if adaptive execution is supported in any of the sub-queries.\n-        val subqueryMap = buildSubqueryMap(plan)\n-        val planSubqueriesRule = PlanAdaptiveSubqueries(subqueryMap)\n-        val preprocessingRules = Seq(\n-          planSubqueriesRule)\n-        // Run pre-processing rules.\n-        val newPlan = AdaptiveSparkPlanExec.applyPhysicalRules(plan, preprocessingRules)\n-        logDebug(s\"Adaptive execution enabled for plan: $plan\")\n-        AdaptiveSparkPlanExec(newPlan, adaptiveExecutionContext, preprocessingRules, isSubquery)\n-      } catch {\n-        case SubqueryAdaptiveNotSupportedException(subquery) =>\n-          logWarning(s\"${SQLConf.ADAPTIVE_EXECUTION_ENABLED.key} is enabled \" +\n-            s\"but is not supported for sub-query: $subquery.\")\n-          plan\n-      }\n-    case _ =>\n-      if (conf.adaptiveExecutionEnabled) {\n+    case _ if shouldApplyAQE(plan, isSubquery) =>\n+      if (supportAdaptive(plan)) {\n+        try {\n+          // Plan sub-queries recursively and pass in the shared stage cache for exchange reuse.\n+          // Fall back to non-AQE mode if AQE is not supported in any of the sub-queries.\n+          val subqueryMap = buildSubqueryMap(plan)\n+          val planSubqueriesRule = PlanAdaptiveSubqueries(subqueryMap)\n+          val preprocessingRules = Seq(\n+            planSubqueriesRule)\n+          // Run pre-processing rules.\n+          val newPlan = AdaptiveSparkPlanExec.applyPhysicalRules(plan, preprocessingRules)\n+          logDebug(s\"Adaptive execution enabled for plan: $plan\")\n+          AdaptiveSparkPlanExec(newPlan, adaptiveExecutionContext, preprocessingRules, isSubquery)\n+        } catch {\n+          case SubqueryAdaptiveNotSupportedException(subquery) =>\n+            logWarning(s\"${SQLConf.ADAPTIVE_EXECUTION_ENABLED.key} is enabled \" +\n+              s\"but is not supported for sub-query: $subquery.\")\n+            plan\n+        }\n+      } else {\n         logWarning(s\"${SQLConf.ADAPTIVE_EXECUTION_ENABLED.key} is enabled \" +\n           s\"but is not supported for query: $plan.\")\n+        plan\n       }\n-      plan\n+\n+    case _ => plan\n+  }\n+\n+  // AQE is only useful when the query has exchanges or sub-queries. This method returns true if\n+  // one of the following conditions is satisfied:\n+  //   - The config ADAPTIVE_EXECUTION_FORCE_APPLY is true.\n+  //   - The input query is from a sub-query. When this happens, it means we've already decided to\n+  //     apply AQE for the main query and we must continue to do it.\n+  //   - The query contains exchanges.\n+  //   - The query may need to add exchanges. It's an overkill to run `EnsureRequirements` here, so\n+  //     we just check `SparkPlan.requiredChildDistribution` and see if it's possible that the\n+  //     the query needs to add exchanges later.\n+  //   - The query contains sub-query.",
        "path": "sql/core/src/main/scala/org/apache/spark/sql/execution/adaptive/InsertAdaptiveSparkPlan.scala",
        "position": 82,
        "original_position": 82,
        "commit_id": "a796d191013a1dee296b92539e489c8ab471b21d",
        "original_commit_id": "a796d191013a1dee296b92539e489c8ab471b21d",
        "user": {
          "login": "gatorsmile",
          "id": 11567269,
          "node_id": "MDQ6VXNlcjExNTY3MjY5",
          "avatar_url": "https://avatars1.githubusercontent.com/u/11567269?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/gatorsmile",
          "html_url": "https://github.com/gatorsmile",
          "followers_url": "https://api.github.com/users/gatorsmile/followers",
          "following_url": "https://api.github.com/users/gatorsmile/following{/other_user}",
          "gists_url": "https://api.github.com/users/gatorsmile/gists{/gist_id}",
          "starred_url": "https://api.github.com/users/gatorsmile/starred{/owner}{/repo}",
          "subscriptions_url": "https://api.github.com/users/gatorsmile/subscriptions",
          "organizations_url": "https://api.github.com/users/gatorsmile/orgs",
          "repos_url": "https://api.github.com/users/gatorsmile/repos",
          "events_url": "https://api.github.com/users/gatorsmile/events{/privacy}",
          "received_events_url": "https://api.github.com/users/gatorsmile/received_events",
          "type": "User",
          "site_admin": false
        },
        "body": "This is much clear than the original code. ",
        "created_at": "2020-02-06T16:29:20Z",
        "updated_at": "2020-02-06T16:29:21Z",
        "html_url": "https://github.com/apache/spark/pull/27452#discussion_r375942145",
        "pull_request_url": "https://api.github.com/repos/apache/spark/pulls/27452",
        "author_association": "MEMBER",
        "_links": {
          "self": {
            "href": "https://api.github.com/repos/apache/spark/pulls/comments/375942145"
          },
          "html": {
            "href": "https://github.com/apache/spark/pull/27452#discussion_r375942145"
          },
          "pull_request": {
            "href": "https://api.github.com/repos/apache/spark/pulls/27452"
          }
        }
      },
      "pull_request": {
        "url": "https://api.github.com/repos/apache/spark/pulls/27452",
        "id": 370800123,
        "node_id": "MDExOlB1bGxSZXF1ZXN0MzcwODAwMTIz",
        "html_url": "https://github.com/apache/spark/pull/27452",
        "diff_url": "https://github.com/apache/spark/pull/27452.diff",
        "patch_url": "https://github.com/apache/spark/pull/27452.patch",
        "issue_url": "https://api.github.com/repos/apache/spark/issues/27452",
        "number": 27452,
        "state": "open",
        "locked": false,
        "title": "[SPARK-30719][SQL] do not log warning if AQE is intentionally skipped and add a config to force apply",
        "user": {
          "login": "cloud-fan",
          "id": 3182036,
          "node_id": "MDQ6VXNlcjMxODIwMzY=",
          "avatar_url": "https://avatars3.githubusercontent.com/u/3182036?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/cloud-fan",
          "html_url": "https://github.com/cloud-fan",
          "followers_url": "https://api.github.com/users/cloud-fan/followers",
          "following_url": "https://api.github.com/users/cloud-fan/following{/other_user}",
          "gists_url": "https://api.github.com/users/cloud-fan/gists{/gist_id}",
          "starred_url": "https://api.github.com/users/cloud-fan/starred{/owner}{/repo}",
          "subscriptions_url": "https://api.github.com/users/cloud-fan/subscriptions",
          "organizations_url": "https://api.github.com/users/cloud-fan/orgs",
          "repos_url": "https://api.github.com/users/cloud-fan/repos",
          "events_url": "https://api.github.com/users/cloud-fan/events{/privacy}",
          "received_events_url": "https://api.github.com/users/cloud-fan/received_events",
          "type": "User",
          "site_admin": false
        },
        "body": "<!--\r\nThanks for sending a pull request!  Here are some tips for you:\r\n  1. If this is your first time, please read our contributor guidelines: https://spark.apache.org/contributing.html\r\n  2. Ensure you have added or run the appropriate tests for your PR: https://spark.apache.org/developer-tools.html\r\n  3. If the PR is unfinished, add '[WIP]' in your PR title, e.g., '[WIP][SPARK-XXXX] Your PR title ...'.\r\n  4. Be sure to keep the PR description updated to reflect all changes.\r\n  5. Please write your PR title to summarize what this PR proposes.\r\n  6. If possible, provide a concise example to reproduce the issue for a faster review.\r\n-->\r\n\r\n### What changes were proposed in this pull request?\r\n<!--\r\nPlease clarify what changes you are proposing. The purpose of this section is to outline the changes and how this PR fixes the issue. \r\nIf possible, please consider writing useful notes for better and faster reviews in your PR. See the examples below.\r\n  1. If you refactor some codes with changing classes, showing the class hierarchy will help reviewers.\r\n  2. If you fix some SQL features, you can provide some references of other DBMSes.\r\n  3. If there is design documentation, please add the link.\r\n  4. If there is a discussion in the mailing list, please add the link.\r\n-->\r\nUpdate `InsertAdaptiveSparkPlan` to not log warning if AQE is skipped intentionally.\r\n\r\nThis PR also add a config to not skip AQE.\r\n\r\n### Why are the changes needed?\r\n<!--\r\nPlease clarify why the changes are needed. For instance,\r\n  1. If you propose a new API, clarify the use case for a new API.\r\n  2. If you fix a bug, you can clarify why it is a bug.\r\n-->\r\nIt's not a warning at all if we intentionally skip AQE.\r\n\r\n### Does this PR introduce any user-facing change?\r\n<!--\r\nIf yes, please clarify the previous behavior and the change this PR proposes - provide the console output, description and/or an example to show the behavior difference if possible.\r\nIf no, write 'No'.\r\n-->\r\nno\r\n\r\n### How was this patch tested?\r\n<!--\r\nIf tests were added, say they were added here. Please make sure to add some test cases that check the changes thoroughly including negative and positive cases if possible.\r\nIf it was tested in a way different from regular unit tests, please clarify how you tested step by step, ideally copy and paste-able, so that other reviewers can test and check, and descendants can verify in the future.\r\nIf tests were not added, please describe why they were not added and/or why it was difficult to add.\r\n-->\r\nrun `AdaptiveQueryExecSuite` locally and verify that there is no warning logs.",
        "created_at": "2020-02-04T12:04:02Z",
        "updated_at": "2020-02-06T16:29:21Z",
        "closed_at": null,
        "merged_at": null,
        "merge_commit_sha": "0c65f720dc97bb466bf556f68807e0001dca44ed",
        "assignee": null,
        "assignees": [

        ],
        "requested_reviewers": [

        ],
        "requested_teams": [

        ],
        "labels": [
          {
            "id": 1405794576,
            "node_id": "MDU6TGFiZWwxNDA1Nzk0NTc2",
            "url": "https://api.github.com/repos/apache/spark/labels/SQL",
            "name": "SQL",
            "color": "ededed",
            "default": false,
            "description": null
          }
        ],
        "milestone": null,
        "commits_url": "https://api.github.com/repos/apache/spark/pulls/27452/commits",
        "review_comments_url": "https://api.github.com/repos/apache/spark/pulls/27452/comments",
        "review_comment_url": "https://api.github.com/repos/apache/spark/pulls/comments{/number}",
        "comments_url": "https://api.github.com/repos/apache/spark/issues/27452/comments",
        "statuses_url": "https://api.github.com/repos/apache/spark/statuses/a796d191013a1dee296b92539e489c8ab471b21d",
        "head": {
          "label": "cloud-fan:aqe",
          "ref": "aqe",
          "sha": "a796d191013a1dee296b92539e489c8ab471b21d",
          "user": {
            "login": "cloud-fan",
            "id": 3182036,
            "node_id": "MDQ6VXNlcjMxODIwMzY=",
            "avatar_url": "https://avatars3.githubusercontent.com/u/3182036?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/cloud-fan",
            "html_url": "https://github.com/cloud-fan",
            "followers_url": "https://api.github.com/users/cloud-fan/followers",
            "following_url": "https://api.github.com/users/cloud-fan/following{/other_user}",
            "gists_url": "https://api.github.com/users/cloud-fan/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/cloud-fan/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/cloud-fan/subscriptions",
            "organizations_url": "https://api.github.com/users/cloud-fan/orgs",
            "repos_url": "https://api.github.com/users/cloud-fan/repos",
            "events_url": "https://api.github.com/users/cloud-fan/events{/privacy}",
            "received_events_url": "https://api.github.com/users/cloud-fan/received_events",
            "type": "User",
            "site_admin": false
          },
          "repo": {
            "id": 19689699,
            "node_id": "MDEwOlJlcG9zaXRvcnkxOTY4OTY5OQ==",
            "name": "spark",
            "full_name": "cloud-fan/spark",
            "private": false,
            "owner": {
              "login": "cloud-fan",
              "id": 3182036,
              "node_id": "MDQ6VXNlcjMxODIwMzY=",
              "avatar_url": "https://avatars3.githubusercontent.com/u/3182036?v=4",
              "gravatar_id": "",
              "url": "https://api.github.com/users/cloud-fan",
              "html_url": "https://github.com/cloud-fan",
              "followers_url": "https://api.github.com/users/cloud-fan/followers",
              "following_url": "https://api.github.com/users/cloud-fan/following{/other_user}",
              "gists_url": "https://api.github.com/users/cloud-fan/gists{/gist_id}",
              "starred_url": "https://api.github.com/users/cloud-fan/starred{/owner}{/repo}",
              "subscriptions_url": "https://api.github.com/users/cloud-fan/subscriptions",
              "organizations_url": "https://api.github.com/users/cloud-fan/orgs",
              "repos_url": "https://api.github.com/users/cloud-fan/repos",
              "events_url": "https://api.github.com/users/cloud-fan/events{/privacy}",
              "received_events_url": "https://api.github.com/users/cloud-fan/received_events",
              "type": "User",
              "site_admin": false
            },
            "html_url": "https://github.com/cloud-fan/spark",
            "description": "Mirror of Apache Spark",
            "fork": true,
            "url": "https://api.github.com/repos/cloud-fan/spark",
            "forks_url": "https://api.github.com/repos/cloud-fan/spark/forks",
            "keys_url": "https://api.github.com/repos/cloud-fan/spark/keys{/key_id}",
            "collaborators_url": "https://api.github.com/repos/cloud-fan/spark/collaborators{/collaborator}",
            "teams_url": "https://api.github.com/repos/cloud-fan/spark/teams",
            "hooks_url": "https://api.github.com/repos/cloud-fan/spark/hooks",
            "issue_events_url": "https://api.github.com/repos/cloud-fan/spark/issues/events{/number}",
            "events_url": "https://api.github.com/repos/cloud-fan/spark/events",
            "assignees_url": "https://api.github.com/repos/cloud-fan/spark/assignees{/user}",
            "branches_url": "https://api.github.com/repos/cloud-fan/spark/branches{/branch}",
            "tags_url": "https://api.github.com/repos/cloud-fan/spark/tags",
            "blobs_url": "https://api.github.com/repos/cloud-fan/spark/git/blobs{/sha}",
            "git_tags_url": "https://api.github.com/repos/cloud-fan/spark/git/tags{/sha}",
            "git_refs_url": "https://api.github.com/repos/cloud-fan/spark/git/refs{/sha}",
            "trees_url": "https://api.github.com/repos/cloud-fan/spark/git/trees{/sha}",
            "statuses_url": "https://api.github.com/repos/cloud-fan/spark/statuses/{sha}",
            "languages_url": "https://api.github.com/repos/cloud-fan/spark/languages",
            "stargazers_url": "https://api.github.com/repos/cloud-fan/spark/stargazers",
            "contributors_url": "https://api.github.com/repos/cloud-fan/spark/contributors",
            "subscribers_url": "https://api.github.com/repos/cloud-fan/spark/subscribers",
            "subscription_url": "https://api.github.com/repos/cloud-fan/spark/subscription",
            "commits_url": "https://api.github.com/repos/cloud-fan/spark/commits{/sha}",
            "git_commits_url": "https://api.github.com/repos/cloud-fan/spark/git/commits{/sha}",
            "comments_url": "https://api.github.com/repos/cloud-fan/spark/comments{/number}",
            "issue_comment_url": "https://api.github.com/repos/cloud-fan/spark/issues/comments{/number}",
            "contents_url": "https://api.github.com/repos/cloud-fan/spark/contents/{+path}",
            "compare_url": "https://api.github.com/repos/cloud-fan/spark/compare/{base}...{head}",
            "merges_url": "https://api.github.com/repos/cloud-fan/spark/merges",
            "archive_url": "https://api.github.com/repos/cloud-fan/spark/{archive_format}{/ref}",
            "downloads_url": "https://api.github.com/repos/cloud-fan/spark/downloads",
            "issues_url": "https://api.github.com/repos/cloud-fan/spark/issues{/number}",
            "pulls_url": "https://api.github.com/repos/cloud-fan/spark/pulls{/number}",
            "milestones_url": "https://api.github.com/repos/cloud-fan/spark/milestones{/number}",
            "notifications_url": "https://api.github.com/repos/cloud-fan/spark/notifications{?since,all,participating}",
            "labels_url": "https://api.github.com/repos/cloud-fan/spark/labels{/name}",
            "releases_url": "https://api.github.com/repos/cloud-fan/spark/releases{/id}",
            "deployments_url": "https://api.github.com/repos/cloud-fan/spark/deployments",
            "created_at": "2014-05-12T07:32:26Z",
            "updated_at": "2017-06-22T06:57:26Z",
            "pushed_at": "2020-02-06T11:47:34Z",
            "git_url": "git://github.com/cloud-fan/spark.git",
            "ssh_url": "git@github.com:cloud-fan/spark.git",
            "clone_url": "https://github.com/cloud-fan/spark.git",
            "svn_url": "https://github.com/cloud-fan/spark",
            "homepage": null,
            "size": 312940,
            "stargazers_count": 1,
            "watchers_count": 1,
            "language": "Scala",
            "has_issues": false,
            "has_projects": true,
            "has_downloads": true,
            "has_wiki": false,
            "has_pages": false,
            "forks_count": 1,
            "mirror_url": null,
            "archived": false,
            "disabled": false,
            "open_issues_count": 1,
            "license": {
              "key": "apache-2.0",
              "name": "Apache License 2.0",
              "spdx_id": "Apache-2.0",
              "url": "https://api.github.com/licenses/apache-2.0",
              "node_id": "MDc6TGljZW5zZTI="
            },
            "forks": 1,
            "open_issues": 1,
            "watchers": 1,
            "default_branch": "master"
          }
        },
        "base": {
          "label": "apache:master",
          "ref": "master",
          "sha": "692e3ddb4e517638156f7427ade8b62fb37634a7",
          "user": {
            "login": "apache",
            "id": 47359,
            "node_id": "MDEyOk9yZ2FuaXphdGlvbjQ3MzU5",
            "avatar_url": "https://avatars0.githubusercontent.com/u/47359?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/apache",
            "html_url": "https://github.com/apache",
            "followers_url": "https://api.github.com/users/apache/followers",
            "following_url": "https://api.github.com/users/apache/following{/other_user}",
            "gists_url": "https://api.github.com/users/apache/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/apache/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/apache/subscriptions",
            "organizations_url": "https://api.github.com/users/apache/orgs",
            "repos_url": "https://api.github.com/users/apache/repos",
            "events_url": "https://api.github.com/users/apache/events{/privacy}",
            "received_events_url": "https://api.github.com/users/apache/received_events",
            "type": "Organization",
            "site_admin": false
          },
          "repo": {
            "id": 17165658,
            "node_id": "MDEwOlJlcG9zaXRvcnkxNzE2NTY1OA==",
            "name": "spark",
            "full_name": "apache/spark",
            "private": false,
            "owner": {
              "login": "apache",
              "id": 47359,
              "node_id": "MDEyOk9yZ2FuaXphdGlvbjQ3MzU5",
              "avatar_url": "https://avatars0.githubusercontent.com/u/47359?v=4",
              "gravatar_id": "",
              "url": "https://api.github.com/users/apache",
              "html_url": "https://github.com/apache",
              "followers_url": "https://api.github.com/users/apache/followers",
              "following_url": "https://api.github.com/users/apache/following{/other_user}",
              "gists_url": "https://api.github.com/users/apache/gists{/gist_id}",
              "starred_url": "https://api.github.com/users/apache/starred{/owner}{/repo}",
              "subscriptions_url": "https://api.github.com/users/apache/subscriptions",
              "organizations_url": "https://api.github.com/users/apache/orgs",
              "repos_url": "https://api.github.com/users/apache/repos",
              "events_url": "https://api.github.com/users/apache/events{/privacy}",
              "received_events_url": "https://api.github.com/users/apache/received_events",
              "type": "Organization",
              "site_admin": false
            },
            "html_url": "https://github.com/apache/spark",
            "description": "Apache Spark",
            "fork": false,
            "url": "https://api.github.com/repos/apache/spark",
            "forks_url": "https://api.github.com/repos/apache/spark/forks",
            "keys_url": "https://api.github.com/repos/apache/spark/keys{/key_id}",
            "collaborators_url": "https://api.github.com/repos/apache/spark/collaborators{/collaborator}",
            "teams_url": "https://api.github.com/repos/apache/spark/teams",
            "hooks_url": "https://api.github.com/repos/apache/spark/hooks",
            "issue_events_url": "https://api.github.com/repos/apache/spark/issues/events{/number}",
            "events_url": "https://api.github.com/repos/apache/spark/events",
            "assignees_url": "https://api.github.com/repos/apache/spark/assignees{/user}",
            "branches_url": "https://api.github.com/repos/apache/spark/branches{/branch}",
            "tags_url": "https://api.github.com/repos/apache/spark/tags",
            "blobs_url": "https://api.github.com/repos/apache/spark/git/blobs{/sha}",
            "git_tags_url": "https://api.github.com/repos/apache/spark/git/tags{/sha}",
            "git_refs_url": "https://api.github.com/repos/apache/spark/git/refs{/sha}",
            "trees_url": "https://api.github.com/repos/apache/spark/git/trees{/sha}",
            "statuses_url": "https://api.github.com/repos/apache/spark/statuses/{sha}",
            "languages_url": "https://api.github.com/repos/apache/spark/languages",
            "stargazers_url": "https://api.github.com/repos/apache/spark/stargazers",
            "contributors_url": "https://api.github.com/repos/apache/spark/contributors",
            "subscribers_url": "https://api.github.com/repos/apache/spark/subscribers",
            "subscription_url": "https://api.github.com/repos/apache/spark/subscription",
            "commits_url": "https://api.github.com/repos/apache/spark/commits{/sha}",
            "git_commits_url": "https://api.github.com/repos/apache/spark/git/commits{/sha}",
            "comments_url": "https://api.github.com/repos/apache/spark/comments{/number}",
            "issue_comment_url": "https://api.github.com/repos/apache/spark/issues/comments{/number}",
            "contents_url": "https://api.github.com/repos/apache/spark/contents/{+path}",
            "compare_url": "https://api.github.com/repos/apache/spark/compare/{base}...{head}",
            "merges_url": "https://api.github.com/repos/apache/spark/merges",
            "archive_url": "https://api.github.com/repos/apache/spark/{archive_format}{/ref}",
            "downloads_url": "https://api.github.com/repos/apache/spark/downloads",
            "issues_url": "https://api.github.com/repos/apache/spark/issues{/number}",
            "pulls_url": "https://api.github.com/repos/apache/spark/pulls{/number}",
            "milestones_url": "https://api.github.com/repos/apache/spark/milestones{/number}",
            "notifications_url": "https://api.github.com/repos/apache/spark/notifications{?since,all,participating}",
            "labels_url": "https://api.github.com/repos/apache/spark/labels{/name}",
            "releases_url": "https://api.github.com/repos/apache/spark/releases{/id}",
            "deployments_url": "https://api.github.com/repos/apache/spark/deployments",
            "created_at": "2014-02-25T08:00:08Z",
            "updated_at": "2020-02-06T12:54:19Z",
            "pushed_at": "2020-02-06T15:43:10Z",
            "git_url": "git://github.com/apache/spark.git",
            "ssh_url": "git@github.com:apache/spark.git",
            "clone_url": "https://github.com/apache/spark.git",
            "svn_url": "https://github.com/apache/spark",
            "homepage": "",
            "size": 320147,
            "stargazers_count": 25062,
            "watchers_count": 25062,
            "language": "Scala",
            "has_issues": false,
            "has_projects": true,
            "has_downloads": true,
            "has_wiki": false,
            "has_pages": false,
            "forks_count": 21084,
            "mirror_url": null,
            "archived": false,
            "disabled": false,
            "open_issues_count": 277,
            "license": {
              "key": "apache-2.0",
              "name": "Apache License 2.0",
              "spdx_id": "Apache-2.0",
              "url": "https://api.github.com/licenses/apache-2.0",
              "node_id": "MDc6TGljZW5zZTI="
            },
            "forks": 21084,
            "open_issues": 277,
            "watchers": 25062,
            "default_branch": "master"
          }
        },
        "_links": {
          "self": {
            "href": "https://api.github.com/repos/apache/spark/pulls/27452"
          },
          "html": {
            "href": "https://github.com/apache/spark/pull/27452"
          },
          "issue": {
            "href": "https://api.github.com/repos/apache/spark/issues/27452"
          },
          "comments": {
            "href": "https://api.github.com/repos/apache/spark/issues/27452/comments"
          },
          "review_comments": {
            "href": "https://api.github.com/repos/apache/spark/pulls/27452/comments"
          },
          "review_comment": {
            "href": "https://api.github.com/repos/apache/spark/pulls/comments{/number}"
          },
          "commits": {
            "href": "https://api.github.com/repos/apache/spark/pulls/27452/commits"
          },
          "statuses": {
            "href": "https://api.github.com/repos/apache/spark/statuses/a796d191013a1dee296b92539e489c8ab471b21d"
          }
        },
        "author_association": "CONTRIBUTOR"
      }
    },
    "public": true,
    "created_at": "2020-02-06T16:29:20Z",
    "org": {
      "id": 47359,
      "login": "apache",
      "gravatar_id": "",
      "url": "https://api.github.com/orgs/apache",
      "avatar_url": "https://avatars.githubusercontent.com/u/47359?"
    }
  },
  {
    "id": "11454092790",
    "type": "PullRequestReviewCommentEvent",
    "actor": {
      "id": 4563792,
      "login": "tgravescs",
      "display_login": "tgravescs",
      "gravatar_id": "",
      "url": "https://api.github.com/users/tgravescs",
      "avatar_url": "https://avatars.githubusercontent.com/u/4563792?"
    },
    "repo": {
      "id": 17165658,
      "name": "apache/spark",
      "url": "https://api.github.com/repos/apache/spark"
    },
    "payload": {
      "action": "created",
      "comment": {
        "url": "https://api.github.com/repos/apache/spark/pulls/comments/375941603",
        "pull_request_review_id": 354591065,
        "id": 375941603,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NTk0MTYwMw==",
        "diff_hunk": "@@ -493,7 +590,7 @@ private[spark] class ExecutorAllocationManager(\n   private def onSchedulerQueueEmpty(): Unit = synchronized {\n     logDebug(\"Clearing timer to add executors because there are no more pending tasks\")\n     addTime = NOT_SET\n-    numExecutorsToAdd = 1\n+    numExecutorsToAddPerResourceProfileId.keys.foreach(numExecutorsToAddPerResourceProfileId(_) = 1)",
        "path": "core/src/main/scala/org/apache/spark/ExecutorAllocationManager.scala",
        "position": 484,
        "original_position": 484,
        "commit_id": "87aab301d533e4766149f340f92c1e28cfad046c",
        "original_commit_id": "87aab301d533e4766149f340f92c1e28cfad046c",
        "user": {
          "login": "tgravescs",
          "id": 4563792,
          "node_id": "MDQ6VXNlcjQ1NjM3OTI=",
          "avatar_url": "https://avatars2.githubusercontent.com/u/4563792?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/tgravescs",
          "html_url": "https://github.com/tgravescs",
          "followers_url": "https://api.github.com/users/tgravescs/followers",
          "following_url": "https://api.github.com/users/tgravescs/following{/other_user}",
          "gists_url": "https://api.github.com/users/tgravescs/gists{/gist_id}",
          "starred_url": "https://api.github.com/users/tgravescs/starred{/owner}{/repo}",
          "subscriptions_url": "https://api.github.com/users/tgravescs/subscriptions",
          "organizations_url": "https://api.github.com/users/tgravescs/orgs",
          "repos_url": "https://api.github.com/users/tgravescs/repos",
          "events_url": "https://api.github.com/users/tgravescs/events{/privacy}",
          "received_events_url": "https://api.github.com/users/tgravescs/received_events",
          "type": "User",
          "site_admin": false
        },
        "body": "transform will work",
        "created_at": "2020-02-06T16:28:26Z",
        "updated_at": "2020-02-06T16:28:27Z",
        "html_url": "https://github.com/apache/spark/pull/27313#discussion_r375941603",
        "pull_request_url": "https://api.github.com/repos/apache/spark/pulls/27313",
        "author_association": "CONTRIBUTOR",
        "_links": {
          "self": {
            "href": "https://api.github.com/repos/apache/spark/pulls/comments/375941603"
          },
          "html": {
            "href": "https://github.com/apache/spark/pull/27313#discussion_r375941603"
          },
          "pull_request": {
            "href": "https://api.github.com/repos/apache/spark/pulls/27313"
          }
        },
        "in_reply_to_id": 375110554
      },
      "pull_request": {
        "url": "https://api.github.com/repos/apache/spark/pulls/27313",
        "id": 365492867,
        "node_id": "MDExOlB1bGxSZXF1ZXN0MzY1NDkyODY3",
        "html_url": "https://github.com/apache/spark/pull/27313",
        "diff_url": "https://github.com/apache/spark/pull/27313.diff",
        "patch_url": "https://github.com/apache/spark/pull/27313.patch",
        "issue_url": "https://api.github.com/repos/apache/spark/issues/27313",
        "number": 27313,
        "state": "open",
        "locked": false,
        "title": "[SPARK-29148][CORE] Add stage level scheduling dynamic allocation and scheduler backend changes",
        "user": {
          "login": "tgravescs",
          "id": 4563792,
          "node_id": "MDQ6VXNlcjQ1NjM3OTI=",
          "avatar_url": "https://avatars2.githubusercontent.com/u/4563792?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/tgravescs",
          "html_url": "https://github.com/tgravescs",
          "followers_url": "https://api.github.com/users/tgravescs/followers",
          "following_url": "https://api.github.com/users/tgravescs/following{/other_user}",
          "gists_url": "https://api.github.com/users/tgravescs/gists{/gist_id}",
          "starred_url": "https://api.github.com/users/tgravescs/starred{/owner}{/repo}",
          "subscriptions_url": "https://api.github.com/users/tgravescs/subscriptions",
          "organizations_url": "https://api.github.com/users/tgravescs/orgs",
          "repos_url": "https://api.github.com/users/tgravescs/repos",
          "events_url": "https://api.github.com/users/tgravescs/events{/privacy}",
          "received_events_url": "https://api.github.com/users/tgravescs/received_events",
          "type": "User",
          "site_admin": false
        },
        "body": "<!--\r\nThanks for sending a pull request!  Here are some tips for you:\r\n  1. If this is your first time, please read our contributor guidelines: https://spark.apache.org/contributing.html\r\n  2. Ensure you have added or run the appropriate tests for your PR: https://spark.apache.org/developer-tools.html\r\n  3. If the PR is unfinished, add '[WIP]' in your PR title, e.g., '[WIP][SPARK-XXXX] Your PR title ...'.\r\n  4. Be sure to keep the PR description updated to reflect all changes.\r\n  5. Please write your PR title to summarize what this PR proposes.\r\n  6. If possible, provide a concise example to reproduce the issue for a faster review.\r\n-->\r\n\r\n### What changes were proposed in this pull request?\r\n<!--\r\nPlease clarify what changes you are proposing. The purpose of this section is to outline the changes and how this PR fixes the issue. \r\nIf possible, please consider writing useful notes for better and faster reviews in your PR. See the examples below.\r\n  1. If you refactor some codes with changing classes, showing the class hierarchy will help reviewers.\r\n  2. If you fix some SQL features, you can provide some references of other DBMSes.\r\n  3. If there is design documentation, please add the link.\r\n  4. If there is a discussion in the mailing list, please add the link.\r\n-->\r\n\r\nThis is another PR for stage level scheduling. In particular this adds changes to the dynamic allocation manager and the scheduler backend to be able to track what executors are needed per ResourceProfile.  Note the api is still private to Spark until the entire feature gets in, so this functionality will be there but only usable by tests for profiles other then the DefaultProfile.\r\n\r\nThe main changes here are simply tracking things on a ResourceProfile basis as well as sending the executor requests to the scheduler backend for all ResourceProfiles. \r\n\r\nI introduce a ResourceProfileManager in this PR that will track all the actual ResourceProfile objects so that we can keep them all in a single place and just pass around and use in datastructures the resource profile id. The resource profile id can be used with the ResourceProfileManager to get the actual ResourceProfile contents. \r\n\r\nThere are various places in the code that use executor \"slots\" for things.  The ResourceProfile adds functionality to keep that calculation in it.   This logic is more complex then it should due to standalone mode and mesos coarse grained not setting the executor cores config. They default to all cores on the worker, so calculating slots is harder there.  \r\nThis PR keeps the functionality to make the cores the limiting resource because the scheduler still uses that for \"slots\" for a few things.\r\n\r\nThis PR does also add the resource profile id to the Stage and stage info classes to be able to test things easier.   That full set of changes will come with the scheduler PR that will be after this one.\r\n\r\nThe PR stops at the scheduler backend pieces for the cluster manager and the real YARN support hasn't been added in this PR, that again will be in a separate PR, so this has a few of the API changes up to the cluster manager and then just uses the default profile requests to continue.\r\n\r\nThe code for the entire feature is here for reference: https://github.com/apache/spark/pull/27053/files although it needs to be upmerged again as well.\r\n\r\n### Why are the changes needed?\r\n<!--\r\nPlease clarify why the changes are needed. For instance,\r\n  1. If you propose a new API, clarify the use case for a new API.\r\n  2. If you fix a bug, you can clarify why it is a bug.\r\n-->\r\n\r\nNeeded for stage level scheduling feature.  \r\n\r\n### Does this PR introduce any user-facing change?\r\n<!--\r\nIf yes, please clarify the previous behavior and the change this PR proposes - provide the console output, description and/or an example to show the behavior difference if possible.\r\nIf no, write 'No'.\r\n-->\r\n\r\nNo user facing api changes added here.\r\n\r\n### How was this patch tested?\r\n<!--\r\nIf tests were added, say they were added here. Please make sure to add some test cases that check the changes thoroughly including negative and positive cases if possible.\r\nIf it was tested in a way different from regular unit tests, please clarify how you tested step by step, ideally copy and paste-able, so that other reviewers can test and check, and descendants can verify in the future.\r\nIf tests were not added, please describe why they were not added and/or why it was difficult to add.\r\n-->\r\n\r\nLots of unit tests and manually testing. I tested on yarn, k8s, standalone, local modes. Ran both failure and success cases.",
        "created_at": "2020-01-21T20:20:14Z",
        "updated_at": "2020-02-06T16:28:27Z",
        "closed_at": null,
        "merged_at": null,
        "merge_commit_sha": "d6d3d02941415f527b0e4b27c853837e4bbc722b",
        "assignee": null,
        "assignees": [

        ],
        "requested_reviewers": [

        ],
        "requested_teams": [

        ],
        "labels": [
          {
            "id": 1406606875,
            "node_id": "MDU6TGFiZWwxNDA2NjA2ODc1",
            "url": "https://api.github.com/repos/apache/spark/labels/SCHEDULER",
            "name": "SCHEDULER",
            "color": "ededed",
            "default": false,
            "description": null
          }
        ],
        "milestone": null,
        "commits_url": "https://api.github.com/repos/apache/spark/pulls/27313/commits",
        "review_comments_url": "https://api.github.com/repos/apache/spark/pulls/27313/comments",
        "review_comment_url": "https://api.github.com/repos/apache/spark/pulls/comments{/number}",
        "comments_url": "https://api.github.com/repos/apache/spark/issues/27313/comments",
        "statuses_url": "https://api.github.com/repos/apache/spark/statuses/87aab301d533e4766149f340f92c1e28cfad046c",
        "head": {
          "label": "tgravescs:SPARK-29148",
          "ref": "SPARK-29148",
          "sha": "87aab301d533e4766149f340f92c1e28cfad046c",
          "user": {
            "login": "tgravescs",
            "id": 4563792,
            "node_id": "MDQ6VXNlcjQ1NjM3OTI=",
            "avatar_url": "https://avatars2.githubusercontent.com/u/4563792?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/tgravescs",
            "html_url": "https://github.com/tgravescs",
            "followers_url": "https://api.github.com/users/tgravescs/followers",
            "following_url": "https://api.github.com/users/tgravescs/following{/other_user}",
            "gists_url": "https://api.github.com/users/tgravescs/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/tgravescs/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/tgravescs/subscriptions",
            "organizations_url": "https://api.github.com/users/tgravescs/orgs",
            "repos_url": "https://api.github.com/users/tgravescs/repos",
            "events_url": "https://api.github.com/users/tgravescs/events{/privacy}",
            "received_events_url": "https://api.github.com/users/tgravescs/received_events",
            "type": "User",
            "site_admin": false
          },
          "repo": {
            "id": 17249522,
            "node_id": "MDEwOlJlcG9zaXRvcnkxNzI0OTUyMg==",
            "name": "spark",
            "full_name": "tgravescs/spark",
            "private": false,
            "owner": {
              "login": "tgravescs",
              "id": 4563792,
              "node_id": "MDQ6VXNlcjQ1NjM3OTI=",
              "avatar_url": "https://avatars2.githubusercontent.com/u/4563792?v=4",
              "gravatar_id": "",
              "url": "https://api.github.com/users/tgravescs",
              "html_url": "https://github.com/tgravescs",
              "followers_url": "https://api.github.com/users/tgravescs/followers",
              "following_url": "https://api.github.com/users/tgravescs/following{/other_user}",
              "gists_url": "https://api.github.com/users/tgravescs/gists{/gist_id}",
              "starred_url": "https://api.github.com/users/tgravescs/starred{/owner}{/repo}",
              "subscriptions_url": "https://api.github.com/users/tgravescs/subscriptions",
              "organizations_url": "https://api.github.com/users/tgravescs/orgs",
              "repos_url": "https://api.github.com/users/tgravescs/repos",
              "events_url": "https://api.github.com/users/tgravescs/events{/privacy}",
              "received_events_url": "https://api.github.com/users/tgravescs/received_events",
              "type": "User",
              "site_admin": false
            },
            "html_url": "https://github.com/tgravescs/spark",
            "description": "Mirror of Apache Spark",
            "fork": true,
            "url": "https://api.github.com/repos/tgravescs/spark",
            "forks_url": "https://api.github.com/repos/tgravescs/spark/forks",
            "keys_url": "https://api.github.com/repos/tgravescs/spark/keys{/key_id}",
            "collaborators_url": "https://api.github.com/repos/tgravescs/spark/collaborators{/collaborator}",
            "teams_url": "https://api.github.com/repos/tgravescs/spark/teams",
            "hooks_url": "https://api.github.com/repos/tgravescs/spark/hooks",
            "issue_events_url": "https://api.github.com/repos/tgravescs/spark/issues/events{/number}",
            "events_url": "https://api.github.com/repos/tgravescs/spark/events",
            "assignees_url": "https://api.github.com/repos/tgravescs/spark/assignees{/user}",
            "branches_url": "https://api.github.com/repos/tgravescs/spark/branches{/branch}",
            "tags_url": "https://api.github.com/repos/tgravescs/spark/tags",
            "blobs_url": "https://api.github.com/repos/tgravescs/spark/git/blobs{/sha}",
            "git_tags_url": "https://api.github.com/repos/tgravescs/spark/git/tags{/sha}",
            "git_refs_url": "https://api.github.com/repos/tgravescs/spark/git/refs{/sha}",
            "trees_url": "https://api.github.com/repos/tgravescs/spark/git/trees{/sha}",
            "statuses_url": "https://api.github.com/repos/tgravescs/spark/statuses/{sha}",
            "languages_url": "https://api.github.com/repos/tgravescs/spark/languages",
            "stargazers_url": "https://api.github.com/repos/tgravescs/spark/stargazers",
            "contributors_url": "https://api.github.com/repos/tgravescs/spark/contributors",
            "subscribers_url": "https://api.github.com/repos/tgravescs/spark/subscribers",
            "subscription_url": "https://api.github.com/repos/tgravescs/spark/subscription",
            "commits_url": "https://api.github.com/repos/tgravescs/spark/commits{/sha}",
            "git_commits_url": "https://api.github.com/repos/tgravescs/spark/git/commits{/sha}",
            "comments_url": "https://api.github.com/repos/tgravescs/spark/comments{/number}",
            "issue_comment_url": "https://api.github.com/repos/tgravescs/spark/issues/comments{/number}",
            "contents_url": "https://api.github.com/repos/tgravescs/spark/contents/{+path}",
            "compare_url": "https://api.github.com/repos/tgravescs/spark/compare/{base}...{head}",
            "merges_url": "https://api.github.com/repos/tgravescs/spark/merges",
            "archive_url": "https://api.github.com/repos/tgravescs/spark/{archive_format}{/ref}",
            "downloads_url": "https://api.github.com/repos/tgravescs/spark/downloads",
            "issues_url": "https://api.github.com/repos/tgravescs/spark/issues{/number}",
            "pulls_url": "https://api.github.com/repos/tgravescs/spark/pulls{/number}",
            "milestones_url": "https://api.github.com/repos/tgravescs/spark/milestones{/number}",
            "notifications_url": "https://api.github.com/repos/tgravescs/spark/notifications{?since,all,participating}",
            "labels_url": "https://api.github.com/repos/tgravescs/spark/labels{/name}",
            "releases_url": "https://api.github.com/repos/tgravescs/spark/releases{/id}",
            "deployments_url": "https://api.github.com/repos/tgravescs/spark/deployments",
            "created_at": "2014-02-27T13:26:24Z",
            "updated_at": "2019-12-12T03:01:23Z",
            "pushed_at": "2020-02-04T15:26:23Z",
            "git_url": "git://github.com/tgravescs/spark.git",
            "ssh_url": "git@github.com:tgravescs/spark.git",
            "clone_url": "https://github.com/tgravescs/spark.git",
            "svn_url": "https://github.com/tgravescs/spark",
            "homepage": null,
            "size": 296948,
            "stargazers_count": 1,
            "watchers_count": 1,
            "language": "Scala",
            "has_issues": false,
            "has_projects": true,
            "has_downloads": true,
            "has_wiki": false,
            "has_pages": false,
            "forks_count": 0,
            "mirror_url": null,
            "archived": false,
            "disabled": false,
            "open_issues_count": 2,
            "license": {
              "key": "apache-2.0",
              "name": "Apache License 2.0",
              "spdx_id": "Apache-2.0",
              "url": "https://api.github.com/licenses/apache-2.0",
              "node_id": "MDc6TGljZW5zZTI="
            },
            "forks": 0,
            "open_issues": 2,
            "watchers": 1,
            "default_branch": "master"
          }
        },
        "base": {
          "label": "apache:master",
          "ref": "master",
          "sha": "a4912cee615314e9578e6ab4eae25f147feacbd5",
          "user": {
            "login": "apache",
            "id": 47359,
            "node_id": "MDEyOk9yZ2FuaXphdGlvbjQ3MzU5",
            "avatar_url": "https://avatars0.githubusercontent.com/u/47359?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/apache",
            "html_url": "https://github.com/apache",
            "followers_url": "https://api.github.com/users/apache/followers",
            "following_url": "https://api.github.com/users/apache/following{/other_user}",
            "gists_url": "https://api.github.com/users/apache/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/apache/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/apache/subscriptions",
            "organizations_url": "https://api.github.com/users/apache/orgs",
            "repos_url": "https://api.github.com/users/apache/repos",
            "events_url": "https://api.github.com/users/apache/events{/privacy}",
            "received_events_url": "https://api.github.com/users/apache/received_events",
            "type": "Organization",
            "site_admin": false
          },
          "repo": {
            "id": 17165658,
            "node_id": "MDEwOlJlcG9zaXRvcnkxNzE2NTY1OA==",
            "name": "spark",
            "full_name": "apache/spark",
            "private": false,
            "owner": {
              "login": "apache",
              "id": 47359,
              "node_id": "MDEyOk9yZ2FuaXphdGlvbjQ3MzU5",
              "avatar_url": "https://avatars0.githubusercontent.com/u/47359?v=4",
              "gravatar_id": "",
              "url": "https://api.github.com/users/apache",
              "html_url": "https://github.com/apache",
              "followers_url": "https://api.github.com/users/apache/followers",
              "following_url": "https://api.github.com/users/apache/following{/other_user}",
              "gists_url": "https://api.github.com/users/apache/gists{/gist_id}",
              "starred_url": "https://api.github.com/users/apache/starred{/owner}{/repo}",
              "subscriptions_url": "https://api.github.com/users/apache/subscriptions",
              "organizations_url": "https://api.github.com/users/apache/orgs",
              "repos_url": "https://api.github.com/users/apache/repos",
              "events_url": "https://api.github.com/users/apache/events{/privacy}",
              "received_events_url": "https://api.github.com/users/apache/received_events",
              "type": "Organization",
              "site_admin": false
            },
            "html_url": "https://github.com/apache/spark",
            "description": "Apache Spark",
            "fork": false,
            "url": "https://api.github.com/repos/apache/spark",
            "forks_url": "https://api.github.com/repos/apache/spark/forks",
            "keys_url": "https://api.github.com/repos/apache/spark/keys{/key_id}",
            "collaborators_url": "https://api.github.com/repos/apache/spark/collaborators{/collaborator}",
            "teams_url": "https://api.github.com/repos/apache/spark/teams",
            "hooks_url": "https://api.github.com/repos/apache/spark/hooks",
            "issue_events_url": "https://api.github.com/repos/apache/spark/issues/events{/number}",
            "events_url": "https://api.github.com/repos/apache/spark/events",
            "assignees_url": "https://api.github.com/repos/apache/spark/assignees{/user}",
            "branches_url": "https://api.github.com/repos/apache/spark/branches{/branch}",
            "tags_url": "https://api.github.com/repos/apache/spark/tags",
            "blobs_url": "https://api.github.com/repos/apache/spark/git/blobs{/sha}",
            "git_tags_url": "https://api.github.com/repos/apache/spark/git/tags{/sha}",
            "git_refs_url": "https://api.github.com/repos/apache/spark/git/refs{/sha}",
            "trees_url": "https://api.github.com/repos/apache/spark/git/trees{/sha}",
            "statuses_url": "https://api.github.com/repos/apache/spark/statuses/{sha}",
            "languages_url": "https://api.github.com/repos/apache/spark/languages",
            "stargazers_url": "https://api.github.com/repos/apache/spark/stargazers",
            "contributors_url": "https://api.github.com/repos/apache/spark/contributors",
            "subscribers_url": "https://api.github.com/repos/apache/spark/subscribers",
            "subscription_url": "https://api.github.com/repos/apache/spark/subscription",
            "commits_url": "https://api.github.com/repos/apache/spark/commits{/sha}",
            "git_commits_url": "https://api.github.com/repos/apache/spark/git/commits{/sha}",
            "comments_url": "https://api.github.com/repos/apache/spark/comments{/number}",
            "issue_comment_url": "https://api.github.com/repos/apache/spark/issues/comments{/number}",
            "contents_url": "https://api.github.com/repos/apache/spark/contents/{+path}",
            "compare_url": "https://api.github.com/repos/apache/spark/compare/{base}...{head}",
            "merges_url": "https://api.github.com/repos/apache/spark/merges",
            "archive_url": "https://api.github.com/repos/apache/spark/{archive_format}{/ref}",
            "downloads_url": "https://api.github.com/repos/apache/spark/downloads",
            "issues_url": "https://api.github.com/repos/apache/spark/issues{/number}",
            "pulls_url": "https://api.github.com/repos/apache/spark/pulls{/number}",
            "milestones_url": "https://api.github.com/repos/apache/spark/milestones{/number}",
            "notifications_url": "https://api.github.com/repos/apache/spark/notifications{?since,all,participating}",
            "labels_url": "https://api.github.com/repos/apache/spark/labels{/name}",
            "releases_url": "https://api.github.com/repos/apache/spark/releases{/id}",
            "deployments_url": "https://api.github.com/repos/apache/spark/deployments",
            "created_at": "2014-02-25T08:00:08Z",
            "updated_at": "2020-02-06T12:54:19Z",
            "pushed_at": "2020-02-06T15:43:10Z",
            "git_url": "git://github.com/apache/spark.git",
            "ssh_url": "git@github.com:apache/spark.git",
            "clone_url": "https://github.com/apache/spark.git",
            "svn_url": "https://github.com/apache/spark",
            "homepage": "",
            "size": 320147,
            "stargazers_count": 25062,
            "watchers_count": 25062,
            "language": "Scala",
            "has_issues": false,
            "has_projects": true,
            "has_downloads": true,
            "has_wiki": false,
            "has_pages": false,
            "forks_count": 21084,
            "mirror_url": null,
            "archived": false,
            "disabled": false,
            "open_issues_count": 277,
            "license": {
              "key": "apache-2.0",
              "name": "Apache License 2.0",
              "spdx_id": "Apache-2.0",
              "url": "https://api.github.com/licenses/apache-2.0",
              "node_id": "MDc6TGljZW5zZTI="
            },
            "forks": 21084,
            "open_issues": 277,
            "watchers": 25062,
            "default_branch": "master"
          }
        },
        "_links": {
          "self": {
            "href": "https://api.github.com/repos/apache/spark/pulls/27313"
          },
          "html": {
            "href": "https://github.com/apache/spark/pull/27313"
          },
          "issue": {
            "href": "https://api.github.com/repos/apache/spark/issues/27313"
          },
          "comments": {
            "href": "https://api.github.com/repos/apache/spark/issues/27313/comments"
          },
          "review_comments": {
            "href": "https://api.github.com/repos/apache/spark/pulls/27313/comments"
          },
          "review_comment": {
            "href": "https://api.github.com/repos/apache/spark/pulls/comments{/number}"
          },
          "commits": {
            "href": "https://api.github.com/repos/apache/spark/pulls/27313/commits"
          },
          "statuses": {
            "href": "https://api.github.com/repos/apache/spark/statuses/87aab301d533e4766149f340f92c1e28cfad046c"
          }
        },
        "author_association": "CONTRIBUTOR"
      }
    },
    "public": true,
    "created_at": "2020-02-06T16:28:26Z",
    "org": {
      "id": 47359,
      "login": "apache",
      "gravatar_id": "",
      "url": "https://api.github.com/orgs/apache",
      "avatar_url": "https://avatars.githubusercontent.com/u/47359?"
    }
  },
  {
    "id": "11453932024",
    "type": "IssueCommentEvent",
    "actor": {
      "id": 365366,
      "login": "jaltekruse",
      "display_login": "jaltekruse",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jaltekruse",
      "avatar_url": "https://avatars.githubusercontent.com/u/365366?"
    },
    "repo": {
      "id": 17165658,
      "name": "apache/spark",
      "url": "https://api.github.com/repos/apache/spark"
    },
    "payload": {
      "action": "created",
      "issue": {
        "url": "https://api.github.com/repos/apache/spark/issues/27224",
        "repository_url": "https://api.github.com/repos/apache/spark",
        "labels_url": "https://api.github.com/repos/apache/spark/issues/27224/labels{/name}",
        "comments_url": "https://api.github.com/repos/apache/spark/issues/27224/comments",
        "events_url": "https://api.github.com/repos/apache/spark/issues/27224/events",
        "html_url": "https://github.com/apache/spark/pull/27224",
        "id": 550473905,
        "node_id": "MDExOlB1bGxSZXF1ZXN0MzYzMzc0NjU4",
        "number": 27224,
        "title": "[SPARK-30523][SQL] - Collapse nested aggregates",
        "user": {
          "login": "jaltekruse",
          "id": 365366,
          "node_id": "MDQ6VXNlcjM2NTM2Ng==",
          "avatar_url": "https://avatars2.githubusercontent.com/u/365366?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/jaltekruse",
          "html_url": "https://github.com/jaltekruse",
          "followers_url": "https://api.github.com/users/jaltekruse/followers",
          "following_url": "https://api.github.com/users/jaltekruse/following{/other_user}",
          "gists_url": "https://api.github.com/users/jaltekruse/gists{/gist_id}",
          "starred_url": "https://api.github.com/users/jaltekruse/starred{/owner}{/repo}",
          "subscriptions_url": "https://api.github.com/users/jaltekruse/subscriptions",
          "organizations_url": "https://api.github.com/users/jaltekruse/orgs",
          "repos_url": "https://api.github.com/users/jaltekruse/repos",
          "events_url": "https://api.github.com/users/jaltekruse/events{/privacy}",
          "received_events_url": "https://api.github.com/users/jaltekruse/received_events",
          "type": "User",
          "site_admin": false
        },
        "labels": [
          {
            "id": 1405794576,
            "node_id": "MDU6TGFiZWwxNDA1Nzk0NTc2",
            "url": "https://api.github.com/repos/apache/spark/labels/SQL",
            "name": "SQL",
            "color": "ededed",
            "default": false,
            "description": null
          }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [

        ],
        "milestone": null,
        "comments": 3,
        "created_at": "2020-01-15T22:51:53Z",
        "updated_at": "2020-02-06T16:12:16Z",
        "closed_at": null,
        "author_association": "NONE",
        "pull_request": {
          "url": "https://api.github.com/repos/apache/spark/pulls/27224",
          "html_url": "https://github.com/apache/spark/pull/27224",
          "diff_url": "https://github.com/apache/spark/pull/27224.diff",
          "patch_url": "https://github.com/apache/spark/pull/27224.patch"
        },
        "body": "~~Note to reviewers - I'm fixing some issues after moving this onto the master branch, it was developed on the 2.4 branch and some issues weren't caught during merge resolution.~~\r\nReady for review, the one automated lint check failure appears to be on other PRs, and I believe is unrelated to this changeset.\r\n\r\n### What changes were proposed in this pull request?\r\nCombines two adjacent Aggregate operators into one, if the first one is not necessary.\r\n\r\nIf we are referencing the outputs of aggregate functions in the inner aggregate from the outer\r\none, check if they are being used in outer aggregates in a way that can be collapsed into a\r\nsingle aggregate. A sum of sums, or a max of max, or min of min are all collapsible.\r\navg over avg will not be collapsible because different number of raw rows will have contributed\r\nto the partial averages of the inner aggregate.\r\n\r\nMin an Max can be folded in the case described above, or if they are referencing\r\nthe group by columns from the inner aggregate, as they can safely be computed just\r\nusing the set of unique values.\r\n```\r\nSELECT sum(sumAgg) as a, year from (\r\n      select sum(1) as sumAgg, course, year FROM courseSales GROUP BY course, year\r\n) group by year\r\n\r\n// can be collapsed to\r\nSELECT sum(1) as `a`, year from courseSales group by year\r\n```\r\n```\r\nSELECT sum(agg), min(a), b from (\r\n     select sum(1) as agg, a, b FROM testData2 GROUP BY a, b\r\n     ) group by b\r\n\r\n// can be collapsed to\r\nSELECT sum(1) as `sum(agg)`, min(a) as `min(a)`, b from testData2 group by b\r\n```\r\n\r\n### Why are the changes needed?\r\nImprove performance of nested aggregation queries.\r\n\r\n\r\n### Does this PR introduce any user-facing change?\r\nNo\r\n\r\n\r\n### How was this patch tested?\r\nLot's of tests added with the changeset.\r\n"
      },
      "comment": {
        "url": "https://api.github.com/repos/apache/spark/issues/comments/582980381",
        "html_url": "https://github.com/apache/spark/pull/27224#issuecomment-582980381",
        "issue_url": "https://api.github.com/repos/apache/spark/issues/27224",
        "id": 582980381,
        "node_id": "MDEyOklzc3VlQ29tbWVudDU4Mjk4MDM4MQ==",
        "user": {
          "login": "jaltekruse",
          "id": 365366,
          "node_id": "MDQ6VXNlcjM2NTM2Ng==",
          "avatar_url": "https://avatars2.githubusercontent.com/u/365366?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/jaltekruse",
          "html_url": "https://github.com/jaltekruse",
          "followers_url": "https://api.github.com/users/jaltekruse/followers",
          "following_url": "https://api.github.com/users/jaltekruse/following{/other_user}",
          "gists_url": "https://api.github.com/users/jaltekruse/gists{/gist_id}",
          "starred_url": "https://api.github.com/users/jaltekruse/starred{/owner}{/repo}",
          "subscriptions_url": "https://api.github.com/users/jaltekruse/subscriptions",
          "organizations_url": "https://api.github.com/users/jaltekruse/orgs",
          "repos_url": "https://api.github.com/users/jaltekruse/repos",
          "events_url": "https://api.github.com/users/jaltekruse/events{/privacy}",
          "received_events_url": "https://api.github.com/users/jaltekruse/received_events",
          "type": "User",
          "site_admin": false
        },
        "created_at": "2020-02-06T16:12:15Z",
        "updated_at": "2020-02-06T16:12:15Z",
        "author_association": "NONE",
        "body": "@viirya do you have some time to take another look at this?"
      }
    },
    "public": true,
    "created_at": "2020-02-06T16:12:16Z",
    "org": {
      "id": 47359,
      "login": "apache",
      "gravatar_id": "",
      "url": "https://api.github.com/orgs/apache",
      "avatar_url": "https://avatars.githubusercontent.com/u/47359?"
    }
  },
  {
    "id": "11453819481",
    "type": "PullRequestReviewCommentEvent",
    "actor": {
      "id": 4563792,
      "login": "tgravescs",
      "display_login": "tgravescs",
      "gravatar_id": "",
      "url": "https://api.github.com/users/tgravescs",
      "avatar_url": "https://avatars.githubusercontent.com/u/4563792?"
    },
    "repo": {
      "id": 17165658,
      "name": "apache/spark",
      "url": "https://api.github.com/repos/apache/spark"
    },
    "payload": {
      "action": "created",
      "comment": {
        "url": "https://api.github.com/repos/apache/spark/pulls/comments/375924289",
        "pull_request_review_id": 354568798,
        "id": 375924289,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NTkyNDI4OQ==",
        "diff_hunk": "@@ -423,21 +510,30 @@ private[spark] class ExecutorAllocationManager(\n    */\n   private def removeExecutors(executors: Seq[String]): Seq[String] = synchronized {\n     val executorIdsToBeRemoved = new ArrayBuffer[String]\n-\n     logDebug(s\"Request to remove executorIds: ${executors.mkString(\", \")}\")\n-    val numExistingExecutors = executorMonitor.executorCount - executorMonitor.pendingRemovalCount\n-\n-    var newExecutorTotal = numExistingExecutors\n+    val numExecutorsTotalPerRpId = mutable.Map[Int, Int]()\n     executors.foreach { executorIdToBeRemoved =>\n-      if (newExecutorTotal - 1 < minNumExecutors) {\n-        logDebug(s\"Not removing idle executor $executorIdToBeRemoved because there are only \" +\n-          s\"$newExecutorTotal executor(s) left (minimum number of executor limit $minNumExecutors)\")\n-      } else if (newExecutorTotal - 1 < numExecutorsTarget) {\n-        logDebug(s\"Not removing idle executor $executorIdToBeRemoved because there are only \" +\n-          s\"$newExecutorTotal executor(s) left (number of executor target $numExecutorsTarget)\")\n+      val rpId = getResourceProfileIdOfExecutor(executorIdToBeRemoved)\n+      if (rpId == UNKNOWN_RESOURCE_PROFILE_ID) {\n+        logWarning(s\"Not removing executor $executorIdsToBeRemoved because couldn't find \" +\n+          \"ResourceProfile for it!\")",
        "path": "core/src/main/scala/org/apache/spark/ExecutorAllocationManager.scala",
        "position": 435,
        "original_position": 435,
        "commit_id": "87aab301d533e4766149f340f92c1e28cfad046c",
        "original_commit_id": "87aab301d533e4766149f340f92c1e28cfad046c",
        "user": {
          "login": "tgravescs",
          "id": 4563792,
          "node_id": "MDQ6VXNlcjQ1NjM3OTI=",
          "avatar_url": "https://avatars2.githubusercontent.com/u/4563792?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/tgravescs",
          "html_url": "https://github.com/tgravescs",
          "followers_url": "https://api.github.com/users/tgravescs/followers",
          "following_url": "https://api.github.com/users/tgravescs/following{/other_user}",
          "gists_url": "https://api.github.com/users/tgravescs/gists{/gist_id}",
          "starred_url": "https://api.github.com/users/tgravescs/starred{/owner}{/repo}",
          "subscriptions_url": "https://api.github.com/users/tgravescs/subscriptions",
          "organizations_url": "https://api.github.com/users/tgravescs/orgs",
          "repos_url": "https://api.github.com/users/tgravescs/repos",
          "events_url": "https://api.github.com/users/tgravescs/events{/privacy}",
          "received_events_url": "https://api.github.com/users/tgravescs/received_events",
          "type": "User",
          "site_admin": false
        },
        "body": "so if events come out of order in the ExecutorMonitor we aren't sure what resource profile they are for, or if the executor monitor just doesn't know about the executor, in both of those cases its returns the UNKNOWN. When I wrote this code I was not expecting it to normally happen but actually now that I look more  I think there is a possible race where the remove event could come at the same time as we calculate the timed out executors. The remove event would cause executor monitor to remove it from the list and then you would get UNKNOWN back.  The calculation of timed out executors which calls into this removeExecutors takes a snapshot of the executors so it could return one that has later been removed.  I think I'll modify this to pass the ResourceProfile in with the list of executors to remove, then we don't have to worry about that race.  thanks for bringing this up\r\n\r\nSo currently we are not cleaning up if all resource profiles have been gc'ed. The executors will idle timeout - down to the minimum set. note I think you saw that discussion but we also want to make the initial, minimum, max configs settable per resource profile - but was going to do that in followon as well.\r\nAnd many of the datastructures do not remove resource profiles because its not completely obvious when they are done being used. My  thought was the number of ResourceProfiles is expected to be small, I tried to keep the datastructures memory usage small, and was thinking we can make this better in follow on jiras.\r\n\r\nI was thinking the main initial use case was the ETL -> ML type case so was thinking you would only have a couple ResourceProfiles. \r\n\r\nIf you think its needed now, I can definitely start looking more into this. Just let me know your thoughts.\r\nI filed https://issues.apache.org/jira/browse/SPARK-30749 and https://issues.apache.org/jira/browse/SPARK-30750 to specifically track doing that.",
        "created_at": "2020-02-06T16:01:20Z",
        "updated_at": "2020-02-06T16:01:21Z",
        "html_url": "https://github.com/apache/spark/pull/27313#discussion_r375924289",
        "pull_request_url": "https://api.github.com/repos/apache/spark/pulls/27313",
        "author_association": "CONTRIBUTOR",
        "_links": {
          "self": {
            "href": "https://api.github.com/repos/apache/spark/pulls/comments/375924289"
          },
          "html": {
            "href": "https://github.com/apache/spark/pull/27313#discussion_r375924289"
          },
          "pull_request": {
            "href": "https://api.github.com/repos/apache/spark/pulls/27313"
          }
        },
        "in_reply_to_id": 375106596
      },
      "pull_request": {
        "url": "https://api.github.com/repos/apache/spark/pulls/27313",
        "id": 365492867,
        "node_id": "MDExOlB1bGxSZXF1ZXN0MzY1NDkyODY3",
        "html_url": "https://github.com/apache/spark/pull/27313",
        "diff_url": "https://github.com/apache/spark/pull/27313.diff",
        "patch_url": "https://github.com/apache/spark/pull/27313.patch",
        "issue_url": "https://api.github.com/repos/apache/spark/issues/27313",
        "number": 27313,
        "state": "open",
        "locked": false,
        "title": "[SPARK-29148][CORE] Add stage level scheduling dynamic allocation and scheduler backend changes",
        "user": {
          "login": "tgravescs",
          "id": 4563792,
          "node_id": "MDQ6VXNlcjQ1NjM3OTI=",
          "avatar_url": "https://avatars2.githubusercontent.com/u/4563792?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/tgravescs",
          "html_url": "https://github.com/tgravescs",
          "followers_url": "https://api.github.com/users/tgravescs/followers",
          "following_url": "https://api.github.com/users/tgravescs/following{/other_user}",
          "gists_url": "https://api.github.com/users/tgravescs/gists{/gist_id}",
          "starred_url": "https://api.github.com/users/tgravescs/starred{/owner}{/repo}",
          "subscriptions_url": "https://api.github.com/users/tgravescs/subscriptions",
          "organizations_url": "https://api.github.com/users/tgravescs/orgs",
          "repos_url": "https://api.github.com/users/tgravescs/repos",
          "events_url": "https://api.github.com/users/tgravescs/events{/privacy}",
          "received_events_url": "https://api.github.com/users/tgravescs/received_events",
          "type": "User",
          "site_admin": false
        },
        "body": "<!--\r\nThanks for sending a pull request!  Here are some tips for you:\r\n  1. If this is your first time, please read our contributor guidelines: https://spark.apache.org/contributing.html\r\n  2. Ensure you have added or run the appropriate tests for your PR: https://spark.apache.org/developer-tools.html\r\n  3. If the PR is unfinished, add '[WIP]' in your PR title, e.g., '[WIP][SPARK-XXXX] Your PR title ...'.\r\n  4. Be sure to keep the PR description updated to reflect all changes.\r\n  5. Please write your PR title to summarize what this PR proposes.\r\n  6. If possible, provide a concise example to reproduce the issue for a faster review.\r\n-->\r\n\r\n### What changes were proposed in this pull request?\r\n<!--\r\nPlease clarify what changes you are proposing. The purpose of this section is to outline the changes and how this PR fixes the issue. \r\nIf possible, please consider writing useful notes for better and faster reviews in your PR. See the examples below.\r\n  1. If you refactor some codes with changing classes, showing the class hierarchy will help reviewers.\r\n  2. If you fix some SQL features, you can provide some references of other DBMSes.\r\n  3. If there is design documentation, please add the link.\r\n  4. If there is a discussion in the mailing list, please add the link.\r\n-->\r\n\r\nThis is another PR for stage level scheduling. In particular this adds changes to the dynamic allocation manager and the scheduler backend to be able to track what executors are needed per ResourceProfile.  Note the api is still private to Spark until the entire feature gets in, so this functionality will be there but only usable by tests for profiles other then the DefaultProfile.\r\n\r\nThe main changes here are simply tracking things on a ResourceProfile basis as well as sending the executor requests to the scheduler backend for all ResourceProfiles. \r\n\r\nI introduce a ResourceProfileManager in this PR that will track all the actual ResourceProfile objects so that we can keep them all in a single place and just pass around and use in datastructures the resource profile id. The resource profile id can be used with the ResourceProfileManager to get the actual ResourceProfile contents. \r\n\r\nThere are various places in the code that use executor \"slots\" for things.  The ResourceProfile adds functionality to keep that calculation in it.   This logic is more complex then it should due to standalone mode and mesos coarse grained not setting the executor cores config. They default to all cores on the worker, so calculating slots is harder there.  \r\nThis PR keeps the functionality to make the cores the limiting resource because the scheduler still uses that for \"slots\" for a few things.\r\n\r\nThis PR does also add the resource profile id to the Stage and stage info classes to be able to test things easier.   That full set of changes will come with the scheduler PR that will be after this one.\r\n\r\nThe PR stops at the scheduler backend pieces for the cluster manager and the real YARN support hasn't been added in this PR, that again will be in a separate PR, so this has a few of the API changes up to the cluster manager and then just uses the default profile requests to continue.\r\n\r\nThe code for the entire feature is here for reference: https://github.com/apache/spark/pull/27053/files although it needs to be upmerged again as well.\r\n\r\n### Why are the changes needed?\r\n<!--\r\nPlease clarify why the changes are needed. For instance,\r\n  1. If you propose a new API, clarify the use case for a new API.\r\n  2. If you fix a bug, you can clarify why it is a bug.\r\n-->\r\n\r\nNeeded for stage level scheduling feature.  \r\n\r\n### Does this PR introduce any user-facing change?\r\n<!--\r\nIf yes, please clarify the previous behavior and the change this PR proposes - provide the console output, description and/or an example to show the behavior difference if possible.\r\nIf no, write 'No'.\r\n-->\r\n\r\nNo user facing api changes added here.\r\n\r\n### How was this patch tested?\r\n<!--\r\nIf tests were added, say they were added here. Please make sure to add some test cases that check the changes thoroughly including negative and positive cases if possible.\r\nIf it was tested in a way different from regular unit tests, please clarify how you tested step by step, ideally copy and paste-able, so that other reviewers can test and check, and descendants can verify in the future.\r\nIf tests were not added, please describe why they were not added and/or why it was difficult to add.\r\n-->\r\n\r\nLots of unit tests and manually testing. I tested on yarn, k8s, standalone, local modes. Ran both failure and success cases.",
        "created_at": "2020-01-21T20:20:14Z",
        "updated_at": "2020-02-06T16:01:21Z",
        "closed_at": null,
        "merged_at": null,
        "merge_commit_sha": "d6d3d02941415f527b0e4b27c853837e4bbc722b",
        "assignee": null,
        "assignees": [

        ],
        "requested_reviewers": [

        ],
        "requested_teams": [

        ],
        "labels": [
          {
            "id": 1406606875,
            "node_id": "MDU6TGFiZWwxNDA2NjA2ODc1",
            "url": "https://api.github.com/repos/apache/spark/labels/SCHEDULER",
            "name": "SCHEDULER",
            "color": "ededed",
            "default": false,
            "description": null
          }
        ],
        "milestone": null,
        "commits_url": "https://api.github.com/repos/apache/spark/pulls/27313/commits",
        "review_comments_url": "https://api.github.com/repos/apache/spark/pulls/27313/comments",
        "review_comment_url": "https://api.github.com/repos/apache/spark/pulls/comments{/number}",
        "comments_url": "https://api.github.com/repos/apache/spark/issues/27313/comments",
        "statuses_url": "https://api.github.com/repos/apache/spark/statuses/87aab301d533e4766149f340f92c1e28cfad046c",
        "head": {
          "label": "tgravescs:SPARK-29148",
          "ref": "SPARK-29148",
          "sha": "87aab301d533e4766149f340f92c1e28cfad046c",
          "user": {
            "login": "tgravescs",
            "id": 4563792,
            "node_id": "MDQ6VXNlcjQ1NjM3OTI=",
            "avatar_url": "https://avatars2.githubusercontent.com/u/4563792?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/tgravescs",
            "html_url": "https://github.com/tgravescs",
            "followers_url": "https://api.github.com/users/tgravescs/followers",
            "following_url": "https://api.github.com/users/tgravescs/following{/other_user}",
            "gists_url": "https://api.github.com/users/tgravescs/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/tgravescs/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/tgravescs/subscriptions",
            "organizations_url": "https://api.github.com/users/tgravescs/orgs",
            "repos_url": "https://api.github.com/users/tgravescs/repos",
            "events_url": "https://api.github.com/users/tgravescs/events{/privacy}",
            "received_events_url": "https://api.github.com/users/tgravescs/received_events",
            "type": "User",
            "site_admin": false
          },
          "repo": {
            "id": 17249522,
            "node_id": "MDEwOlJlcG9zaXRvcnkxNzI0OTUyMg==",
            "name": "spark",
            "full_name": "tgravescs/spark",
            "private": false,
            "owner": {
              "login": "tgravescs",
              "id": 4563792,
              "node_id": "MDQ6VXNlcjQ1NjM3OTI=",
              "avatar_url": "https://avatars2.githubusercontent.com/u/4563792?v=4",
              "gravatar_id": "",
              "url": "https://api.github.com/users/tgravescs",
              "html_url": "https://github.com/tgravescs",
              "followers_url": "https://api.github.com/users/tgravescs/followers",
              "following_url": "https://api.github.com/users/tgravescs/following{/other_user}",
              "gists_url": "https://api.github.com/users/tgravescs/gists{/gist_id}",
              "starred_url": "https://api.github.com/users/tgravescs/starred{/owner}{/repo}",
              "subscriptions_url": "https://api.github.com/users/tgravescs/subscriptions",
              "organizations_url": "https://api.github.com/users/tgravescs/orgs",
              "repos_url": "https://api.github.com/users/tgravescs/repos",
              "events_url": "https://api.github.com/users/tgravescs/events{/privacy}",
              "received_events_url": "https://api.github.com/users/tgravescs/received_events",
              "type": "User",
              "site_admin": false
            },
            "html_url": "https://github.com/tgravescs/spark",
            "description": "Mirror of Apache Spark",
            "fork": true,
            "url": "https://api.github.com/repos/tgravescs/spark",
            "forks_url": "https://api.github.com/repos/tgravescs/spark/forks",
            "keys_url": "https://api.github.com/repos/tgravescs/spark/keys{/key_id}",
            "collaborators_url": "https://api.github.com/repos/tgravescs/spark/collaborators{/collaborator}",
            "teams_url": "https://api.github.com/repos/tgravescs/spark/teams",
            "hooks_url": "https://api.github.com/repos/tgravescs/spark/hooks",
            "issue_events_url": "https://api.github.com/repos/tgravescs/spark/issues/events{/number}",
            "events_url": "https://api.github.com/repos/tgravescs/spark/events",
            "assignees_url": "https://api.github.com/repos/tgravescs/spark/assignees{/user}",
            "branches_url": "https://api.github.com/repos/tgravescs/spark/branches{/branch}",
            "tags_url": "https://api.github.com/repos/tgravescs/spark/tags",
            "blobs_url": "https://api.github.com/repos/tgravescs/spark/git/blobs{/sha}",
            "git_tags_url": "https://api.github.com/repos/tgravescs/spark/git/tags{/sha}",
            "git_refs_url": "https://api.github.com/repos/tgravescs/spark/git/refs{/sha}",
            "trees_url": "https://api.github.com/repos/tgravescs/spark/git/trees{/sha}",
            "statuses_url": "https://api.github.com/repos/tgravescs/spark/statuses/{sha}",
            "languages_url": "https://api.github.com/repos/tgravescs/spark/languages",
            "stargazers_url": "https://api.github.com/repos/tgravescs/spark/stargazers",
            "contributors_url": "https://api.github.com/repos/tgravescs/spark/contributors",
            "subscribers_url": "https://api.github.com/repos/tgravescs/spark/subscribers",
            "subscription_url": "https://api.github.com/repos/tgravescs/spark/subscription",
            "commits_url": "https://api.github.com/repos/tgravescs/spark/commits{/sha}",
            "git_commits_url": "https://api.github.com/repos/tgravescs/spark/git/commits{/sha}",
            "comments_url": "https://api.github.com/repos/tgravescs/spark/comments{/number}",
            "issue_comment_url": "https://api.github.com/repos/tgravescs/spark/issues/comments{/number}",
            "contents_url": "https://api.github.com/repos/tgravescs/spark/contents/{+path}",
            "compare_url": "https://api.github.com/repos/tgravescs/spark/compare/{base}...{head}",
            "merges_url": "https://api.github.com/repos/tgravescs/spark/merges",
            "archive_url": "https://api.github.com/repos/tgravescs/spark/{archive_format}{/ref}",
            "downloads_url": "https://api.github.com/repos/tgravescs/spark/downloads",
            "issues_url": "https://api.github.com/repos/tgravescs/spark/issues{/number}",
            "pulls_url": "https://api.github.com/repos/tgravescs/spark/pulls{/number}",
            "milestones_url": "https://api.github.com/repos/tgravescs/spark/milestones{/number}",
            "notifications_url": "https://api.github.com/repos/tgravescs/spark/notifications{?since,all,participating}",
            "labels_url": "https://api.github.com/repos/tgravescs/spark/labels{/name}",
            "releases_url": "https://api.github.com/repos/tgravescs/spark/releases{/id}",
            "deployments_url": "https://api.github.com/repos/tgravescs/spark/deployments",
            "created_at": "2014-02-27T13:26:24Z",
            "updated_at": "2019-12-12T03:01:23Z",
            "pushed_at": "2020-02-04T15:26:23Z",
            "git_url": "git://github.com/tgravescs/spark.git",
            "ssh_url": "git@github.com:tgravescs/spark.git",
            "clone_url": "https://github.com/tgravescs/spark.git",
            "svn_url": "https://github.com/tgravescs/spark",
            "homepage": null,
            "size": 296948,
            "stargazers_count": 1,
            "watchers_count": 1,
            "language": "Scala",
            "has_issues": false,
            "has_projects": true,
            "has_downloads": true,
            "has_wiki": false,
            "has_pages": false,
            "forks_count": 0,
            "mirror_url": null,
            "archived": false,
            "disabled": false,
            "open_issues_count": 2,
            "license": {
              "key": "apache-2.0",
              "name": "Apache License 2.0",
              "spdx_id": "Apache-2.0",
              "url": "https://api.github.com/licenses/apache-2.0",
              "node_id": "MDc6TGljZW5zZTI="
            },
            "forks": 0,
            "open_issues": 2,
            "watchers": 1,
            "default_branch": "master"
          }
        },
        "base": {
          "label": "apache:master",
          "ref": "master",
          "sha": "a4912cee615314e9578e6ab4eae25f147feacbd5",
          "user": {
            "login": "apache",
            "id": 47359,
            "node_id": "MDEyOk9yZ2FuaXphdGlvbjQ3MzU5",
            "avatar_url": "https://avatars0.githubusercontent.com/u/47359?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/apache",
            "html_url": "https://github.com/apache",
            "followers_url": "https://api.github.com/users/apache/followers",
            "following_url": "https://api.github.com/users/apache/following{/other_user}",
            "gists_url": "https://api.github.com/users/apache/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/apache/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/apache/subscriptions",
            "organizations_url": "https://api.github.com/users/apache/orgs",
            "repos_url": "https://api.github.com/users/apache/repos",
            "events_url": "https://api.github.com/users/apache/events{/privacy}",
            "received_events_url": "https://api.github.com/users/apache/received_events",
            "type": "Organization",
            "site_admin": false
          },
          "repo": {
            "id": 17165658,
            "node_id": "MDEwOlJlcG9zaXRvcnkxNzE2NTY1OA==",
            "name": "spark",
            "full_name": "apache/spark",
            "private": false,
            "owner": {
              "login": "apache",
              "id": 47359,
              "node_id": "MDEyOk9yZ2FuaXphdGlvbjQ3MzU5",
              "avatar_url": "https://avatars0.githubusercontent.com/u/47359?v=4",
              "gravatar_id": "",
              "url": "https://api.github.com/users/apache",
              "html_url": "https://github.com/apache",
              "followers_url": "https://api.github.com/users/apache/followers",
              "following_url": "https://api.github.com/users/apache/following{/other_user}",
              "gists_url": "https://api.github.com/users/apache/gists{/gist_id}",
              "starred_url": "https://api.github.com/users/apache/starred{/owner}{/repo}",
              "subscriptions_url": "https://api.github.com/users/apache/subscriptions",
              "organizations_url": "https://api.github.com/users/apache/orgs",
              "repos_url": "https://api.github.com/users/apache/repos",
              "events_url": "https://api.github.com/users/apache/events{/privacy}",
              "received_events_url": "https://api.github.com/users/apache/received_events",
              "type": "Organization",
              "site_admin": false
            },
            "html_url": "https://github.com/apache/spark",
            "description": "Apache Spark",
            "fork": false,
            "url": "https://api.github.com/repos/apache/spark",
            "forks_url": "https://api.github.com/repos/apache/spark/forks",
            "keys_url": "https://api.github.com/repos/apache/spark/keys{/key_id}",
            "collaborators_url": "https://api.github.com/repos/apache/spark/collaborators{/collaborator}",
            "teams_url": "https://api.github.com/repos/apache/spark/teams",
            "hooks_url": "https://api.github.com/repos/apache/spark/hooks",
            "issue_events_url": "https://api.github.com/repos/apache/spark/issues/events{/number}",
            "events_url": "https://api.github.com/repos/apache/spark/events",
            "assignees_url": "https://api.github.com/repos/apache/spark/assignees{/user}",
            "branches_url": "https://api.github.com/repos/apache/spark/branches{/branch}",
            "tags_url": "https://api.github.com/repos/apache/spark/tags",
            "blobs_url": "https://api.github.com/repos/apache/spark/git/blobs{/sha}",
            "git_tags_url": "https://api.github.com/repos/apache/spark/git/tags{/sha}",
            "git_refs_url": "https://api.github.com/repos/apache/spark/git/refs{/sha}",
            "trees_url": "https://api.github.com/repos/apache/spark/git/trees{/sha}",
            "statuses_url": "https://api.github.com/repos/apache/spark/statuses/{sha}",
            "languages_url": "https://api.github.com/repos/apache/spark/languages",
            "stargazers_url": "https://api.github.com/repos/apache/spark/stargazers",
            "contributors_url": "https://api.github.com/repos/apache/spark/contributors",
            "subscribers_url": "https://api.github.com/repos/apache/spark/subscribers",
            "subscription_url": "https://api.github.com/repos/apache/spark/subscription",
            "commits_url": "https://api.github.com/repos/apache/spark/commits{/sha}",
            "git_commits_url": "https://api.github.com/repos/apache/spark/git/commits{/sha}",
            "comments_url": "https://api.github.com/repos/apache/spark/comments{/number}",
            "issue_comment_url": "https://api.github.com/repos/apache/spark/issues/comments{/number}",
            "contents_url": "https://api.github.com/repos/apache/spark/contents/{+path}",
            "compare_url": "https://api.github.com/repos/apache/spark/compare/{base}...{head}",
            "merges_url": "https://api.github.com/repos/apache/spark/merges",
            "archive_url": "https://api.github.com/repos/apache/spark/{archive_format}{/ref}",
            "downloads_url": "https://api.github.com/repos/apache/spark/downloads",
            "issues_url": "https://api.github.com/repos/apache/spark/issues{/number}",
            "pulls_url": "https://api.github.com/repos/apache/spark/pulls{/number}",
            "milestones_url": "https://api.github.com/repos/apache/spark/milestones{/number}",
            "notifications_url": "https://api.github.com/repos/apache/spark/notifications{?since,all,participating}",
            "labels_url": "https://api.github.com/repos/apache/spark/labels{/name}",
            "releases_url": "https://api.github.com/repos/apache/spark/releases{/id}",
            "deployments_url": "https://api.github.com/repos/apache/spark/deployments",
            "created_at": "2014-02-25T08:00:08Z",
            "updated_at": "2020-02-06T12:54:19Z",
            "pushed_at": "2020-02-06T15:43:10Z",
            "git_url": "git://github.com/apache/spark.git",
            "ssh_url": "git@github.com:apache/spark.git",
            "clone_url": "https://github.com/apache/spark.git",
            "svn_url": "https://github.com/apache/spark",
            "homepage": "",
            "size": 320147,
            "stargazers_count": 25062,
            "watchers_count": 25062,
            "language": "Scala",
            "has_issues": false,
            "has_projects": true,
            "has_downloads": true,
            "has_wiki": false,
            "has_pages": false,
            "forks_count": 21084,
            "mirror_url": null,
            "archived": false,
            "disabled": false,
            "open_issues_count": 277,
            "license": {
              "key": "apache-2.0",
              "name": "Apache License 2.0",
              "spdx_id": "Apache-2.0",
              "url": "https://api.github.com/licenses/apache-2.0",
              "node_id": "MDc6TGljZW5zZTI="
            },
            "forks": 21084,
            "open_issues": 277,
            "watchers": 25062,
            "default_branch": "master"
          }
        },
        "_links": {
          "self": {
            "href": "https://api.github.com/repos/apache/spark/pulls/27313"
          },
          "html": {
            "href": "https://github.com/apache/spark/pull/27313"
          },
          "issue": {
            "href": "https://api.github.com/repos/apache/spark/issues/27313"
          },
          "comments": {
            "href": "https://api.github.com/repos/apache/spark/issues/27313/comments"
          },
          "review_comments": {
            "href": "https://api.github.com/repos/apache/spark/pulls/27313/comments"
          },
          "review_comment": {
            "href": "https://api.github.com/repos/apache/spark/pulls/comments{/number}"
          },
          "commits": {
            "href": "https://api.github.com/repos/apache/spark/pulls/27313/commits"
          },
          "statuses": {
            "href": "https://api.github.com/repos/apache/spark/statuses/87aab301d533e4766149f340f92c1e28cfad046c"
          }
        },
        "author_association": "CONTRIBUTOR"
      }
    },
    "public": true,
    "created_at": "2020-02-06T16:01:20Z",
    "org": {
      "id": 47359,
      "login": "apache",
      "gravatar_id": "",
      "url": "https://api.github.com/orgs/apache",
      "avatar_url": "https://avatars.githubusercontent.com/u/47359?"
    }
  },
  {
    "id": "11453781236",
    "type": "IssueCommentEvent",
    "actor": {
      "id": 4031291,
      "login": "AmplabJenkins",
      "display_login": "AmplabJenkins",
      "gravatar_id": "",
      "url": "https://api.github.com/users/AmplabJenkins",
      "avatar_url": "https://avatars.githubusercontent.com/u/4031291?"
    },
    "repo": {
      "id": 17165658,
      "name": "apache/spark",
      "url": "https://api.github.com/repos/apache/spark"
    },
    "payload": {
      "action": "created",
      "issue": {
        "url": "https://api.github.com/repos/apache/spark/issues/27479",
        "repository_url": "https://api.github.com/repos/apache/spark",
        "labels_url": "https://api.github.com/repos/apache/spark/issues/27479/labels{/name}",
        "comments_url": "https://api.github.com/repos/apache/spark/issues/27479/comments",
        "events_url": "https://api.github.com/repos/apache/spark/issues/27479/events",
        "html_url": "https://github.com/apache/spark/pull/27479",
        "id": 561096462,
        "node_id": "MDExOlB1bGxSZXF1ZXN0MzcxOTY4OTI4",
        "number": 27479,
        "title": "[MINOR][DOC] Fix document UI left menu broken",
        "user": {
          "login": "xuanyuanking",
          "id": 4833765,
          "node_id": "MDQ6VXNlcjQ4MzM3NjU=",
          "avatar_url": "https://avatars0.githubusercontent.com/u/4833765?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/xuanyuanking",
          "html_url": "https://github.com/xuanyuanking",
          "followers_url": "https://api.github.com/users/xuanyuanking/followers",
          "following_url": "https://api.github.com/users/xuanyuanking/following{/other_user}",
          "gists_url": "https://api.github.com/users/xuanyuanking/gists{/gist_id}",
          "starred_url": "https://api.github.com/users/xuanyuanking/starred{/owner}{/repo}",
          "subscriptions_url": "https://api.github.com/users/xuanyuanking/subscriptions",
          "organizations_url": "https://api.github.com/users/xuanyuanking/orgs",
          "repos_url": "https://api.github.com/users/xuanyuanking/repos",
          "events_url": "https://api.github.com/users/xuanyuanking/events{/privacy}",
          "received_events_url": "https://api.github.com/users/xuanyuanking/received_events",
          "type": "User",
          "site_admin": false
        },
        "labels": [

        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [

        ],
        "milestone": null,
        "comments": 4,
        "created_at": "2020-02-06T15:43:09Z",
        "updated_at": "2020-02-06T15:57:43Z",
        "closed_at": null,
        "author_association": "CONTRIBUTOR",
        "pull_request": {
          "url": "https://api.github.com/repos/apache/spark/pulls/27479",
          "html_url": "https://github.com/apache/spark/pull/27479",
          "diff_url": "https://github.com/apache/spark/pull/27479.diff",
          "patch_url": "https://github.com/apache/spark/pull/27479.patch"
        },
        "body": "### What changes were proposed in this pull request?\r\nFix the left menu broken introduced in #25459.\r\n\r\n\r\n### Why are the changes needed?\r\nThe `left-menu-wrapper` CSS reused for both ml-guide and sql-programming-guide, the before changes will break the UI.\r\n\r\nBefore:\r\n![image](https://user-images.githubusercontent.com/4833765/73952563-1061d800-493a-11ea-8a75-d802a1534a44.png)\r\n![image](https://user-images.githubusercontent.com/4833765/73952584-18217c80-493a-11ea-85a3-ce5f9875545f.png)\r\n![image](https://user-images.githubusercontent.com/4833765/73952605-21124e00-493a-11ea-8d79-24f4dfec73d9.png)\r\n\r\n\r\nAfter:\r\n![image](https://user-images.githubusercontent.com/4833765/73952630-2a031f80-493a-11ea-80ff-4630801cfaf4.png)\r\n![image](https://user-images.githubusercontent.com/4833765/73952652-30919700-493a-11ea-9db1-8bb4a3f913b4.png)\r\n![image](https://user-images.githubusercontent.com/4833765/73952671-35eee180-493a-11ea-801b-d50c4397adf2.png)\r\n\r\n### Does this PR introduce any user-facing change?\r\nDocument UI change only.\r\n\r\n\r\n### How was this patch tested?\r\nLocal test, screenshot attached below.\r\n"
      },
      "comment": {
        "url": "https://api.github.com/repos/apache/spark/issues/comments/582973278",
        "html_url": "https://github.com/apache/spark/pull/27479#issuecomment-582973278",
        "issue_url": "https://api.github.com/repos/apache/spark/issues/27479",
        "id": 582973278,
        "node_id": "MDEyOklzc3VlQ29tbWVudDU4Mjk3MzI3OA==",
        "user": {
          "login": "AmplabJenkins",
          "id": 4031291,
          "node_id": "MDQ6VXNlcjQwMzEyOTE=",
          "avatar_url": "https://avatars3.githubusercontent.com/u/4031291?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/AmplabJenkins",
          "html_url": "https://github.com/AmplabJenkins",
          "followers_url": "https://api.github.com/users/AmplabJenkins/followers",
          "following_url": "https://api.github.com/users/AmplabJenkins/following{/other_user}",
          "gists_url": "https://api.github.com/users/AmplabJenkins/gists{/gist_id}",
          "starred_url": "https://api.github.com/users/AmplabJenkins/starred{/owner}{/repo}",
          "subscriptions_url": "https://api.github.com/users/AmplabJenkins/subscriptions",
          "organizations_url": "https://api.github.com/users/AmplabJenkins/orgs",
          "repos_url": "https://api.github.com/users/AmplabJenkins/repos",
          "events_url": "https://api.github.com/users/AmplabJenkins/events{/privacy}",
          "received_events_url": "https://api.github.com/users/AmplabJenkins/received_events",
          "type": "User",
          "site_admin": false
        },
        "created_at": "2020-02-06T15:57:43Z",
        "updated_at": "2020-02-06T15:57:43Z",
        "author_association": "NONE",
        "body": "Test PASSed.\nRefer to this link for build results (access rights to CI server needed): \nhttps://amplab.cs.berkeley.edu/jenkins//job/SparkPullRequestBuilder/117999/\nTest PASSed."
      }
    },
    "public": true,
    "created_at": "2020-02-06T15:57:43Z",
    "org": {
      "id": 47359,
      "login": "apache",
      "gravatar_id": "",
      "url": "https://api.github.com/orgs/apache",
      "avatar_url": "https://avatars.githubusercontent.com/u/47359?"
    }
  },
  {
    "id": "11453780982",
    "type": "IssueCommentEvent",
    "actor": {
      "id": 4031291,
      "login": "AmplabJenkins",
      "display_login": "AmplabJenkins",
      "gravatar_id": "",
      "url": "https://api.github.com/users/AmplabJenkins",
      "avatar_url": "https://avatars.githubusercontent.com/u/4031291?"
    },
    "repo": {
      "id": 17165658,
      "name": "apache/spark",
      "url": "https://api.github.com/repos/apache/spark"
    },
    "payload": {
      "action": "created",
      "issue": {
        "url": "https://api.github.com/repos/apache/spark/issues/27479",
        "repository_url": "https://api.github.com/repos/apache/spark",
        "labels_url": "https://api.github.com/repos/apache/spark/issues/27479/labels{/name}",
        "comments_url": "https://api.github.com/repos/apache/spark/issues/27479/comments",
        "events_url": "https://api.github.com/repos/apache/spark/issues/27479/events",
        "html_url": "https://github.com/apache/spark/pull/27479",
        "id": 561096462,
        "node_id": "MDExOlB1bGxSZXF1ZXN0MzcxOTY4OTI4",
        "number": 27479,
        "title": "[MINOR][DOC] Fix document UI left menu broken",
        "user": {
          "login": "xuanyuanking",
          "id": 4833765,
          "node_id": "MDQ6VXNlcjQ4MzM3NjU=",
          "avatar_url": "https://avatars0.githubusercontent.com/u/4833765?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/xuanyuanking",
          "html_url": "https://github.com/xuanyuanking",
          "followers_url": "https://api.github.com/users/xuanyuanking/followers",
          "following_url": "https://api.github.com/users/xuanyuanking/following{/other_user}",
          "gists_url": "https://api.github.com/users/xuanyuanking/gists{/gist_id}",
          "starred_url": "https://api.github.com/users/xuanyuanking/starred{/owner}{/repo}",
          "subscriptions_url": "https://api.github.com/users/xuanyuanking/subscriptions",
          "organizations_url": "https://api.github.com/users/xuanyuanking/orgs",
          "repos_url": "https://api.github.com/users/xuanyuanking/repos",
          "events_url": "https://api.github.com/users/xuanyuanking/events{/privacy}",
          "received_events_url": "https://api.github.com/users/xuanyuanking/received_events",
          "type": "User",
          "site_admin": false
        },
        "labels": [

        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [

        ],
        "milestone": null,
        "comments": 4,
        "created_at": "2020-02-06T15:43:09Z",
        "updated_at": "2020-02-06T15:57:41Z",
        "closed_at": null,
        "author_association": "CONTRIBUTOR",
        "pull_request": {
          "url": "https://api.github.com/repos/apache/spark/pulls/27479",
          "html_url": "https://github.com/apache/spark/pull/27479",
          "diff_url": "https://github.com/apache/spark/pull/27479.diff",
          "patch_url": "https://github.com/apache/spark/pull/27479.patch"
        },
        "body": "### What changes were proposed in this pull request?\r\nFix the left menu broken introduced in #25459.\r\n\r\n\r\n### Why are the changes needed?\r\nThe `left-menu-wrapper` CSS reused for both ml-guide and sql-programming-guide, the before changes will break the UI.\r\n\r\nBefore:\r\n![image](https://user-images.githubusercontent.com/4833765/73952563-1061d800-493a-11ea-8a75-d802a1534a44.png)\r\n![image](https://user-images.githubusercontent.com/4833765/73952584-18217c80-493a-11ea-85a3-ce5f9875545f.png)\r\n![image](https://user-images.githubusercontent.com/4833765/73952605-21124e00-493a-11ea-8d79-24f4dfec73d9.png)\r\n\r\n\r\nAfter:\r\n![image](https://user-images.githubusercontent.com/4833765/73952630-2a031f80-493a-11ea-80ff-4630801cfaf4.png)\r\n![image](https://user-images.githubusercontent.com/4833765/73952652-30919700-493a-11ea-9db1-8bb4a3f913b4.png)\r\n![image](https://user-images.githubusercontent.com/4833765/73952671-35eee180-493a-11ea-801b-d50c4397adf2.png)\r\n\r\n### Does this PR introduce any user-facing change?\r\nDocument UI change only.\r\n\r\n\r\n### How was this patch tested?\r\nLocal test, screenshot attached below.\r\n"
      },
      "comment": {
        "url": "https://api.github.com/repos/apache/spark/issues/comments/582973263",
        "html_url": "https://github.com/apache/spark/pull/27479#issuecomment-582973263",
        "issue_url": "https://api.github.com/repos/apache/spark/issues/27479",
        "id": 582973263,
        "node_id": "MDEyOklzc3VlQ29tbWVudDU4Mjk3MzI2Mw==",
        "user": {
          "login": "AmplabJenkins",
          "id": 4031291,
          "node_id": "MDQ6VXNlcjQwMzEyOTE=",
          "avatar_url": "https://avatars3.githubusercontent.com/u/4031291?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/AmplabJenkins",
          "html_url": "https://github.com/AmplabJenkins",
          "followers_url": "https://api.github.com/users/AmplabJenkins/followers",
          "following_url": "https://api.github.com/users/AmplabJenkins/following{/other_user}",
          "gists_url": "https://api.github.com/users/AmplabJenkins/gists{/gist_id}",
          "starred_url": "https://api.github.com/users/AmplabJenkins/starred{/owner}{/repo}",
          "subscriptions_url": "https://api.github.com/users/AmplabJenkins/subscriptions",
          "organizations_url": "https://api.github.com/users/AmplabJenkins/orgs",
          "repos_url": "https://api.github.com/users/AmplabJenkins/repos",
          "events_url": "https://api.github.com/users/AmplabJenkins/events{/privacy}",
          "received_events_url": "https://api.github.com/users/AmplabJenkins/received_events",
          "type": "User",
          "site_admin": false
        },
        "created_at": "2020-02-06T15:57:41Z",
        "updated_at": "2020-02-06T15:57:41Z",
        "author_association": "NONE",
        "body": "Merged build finished. Test PASSed."
      }
    },
    "public": true,
    "created_at": "2020-02-06T15:57:42Z",
    "org": {
      "id": 47359,
      "login": "apache",
      "gravatar_id": "",
      "url": "https://api.github.com/orgs/apache",
      "avatar_url": "https://avatars.githubusercontent.com/u/47359?"
    }
  },
  {
    "id": "11453777097",
    "type": "IssueCommentEvent",
    "actor": {
      "id": 8108735,
      "login": "SparkQA",
      "display_login": "SparkQA",
      "gravatar_id": "",
      "url": "https://api.github.com/users/SparkQA",
      "avatar_url": "https://avatars.githubusercontent.com/u/8108735?"
    },
    "repo": {
      "id": 17165658,
      "name": "apache/spark",
      "url": "https://api.github.com/repos/apache/spark"
    },
    "payload": {
      "action": "created",
      "issue": {
        "url": "https://api.github.com/repos/apache/spark/issues/27479",
        "repository_url": "https://api.github.com/repos/apache/spark",
        "labels_url": "https://api.github.com/repos/apache/spark/issues/27479/labels{/name}",
        "comments_url": "https://api.github.com/repos/apache/spark/issues/27479/comments",
        "events_url": "https://api.github.com/repos/apache/spark/issues/27479/events",
        "html_url": "https://github.com/apache/spark/pull/27479",
        "id": 561096462,
        "node_id": "MDExOlB1bGxSZXF1ZXN0MzcxOTY4OTI4",
        "number": 27479,
        "title": "[MINOR][DOC] Fix document UI left menu broken",
        "user": {
          "login": "xuanyuanking",
          "id": 4833765,
          "node_id": "MDQ6VXNlcjQ4MzM3NjU=",
          "avatar_url": "https://avatars0.githubusercontent.com/u/4833765?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/xuanyuanking",
          "html_url": "https://github.com/xuanyuanking",
          "followers_url": "https://api.github.com/users/xuanyuanking/followers",
          "following_url": "https://api.github.com/users/xuanyuanking/following{/other_user}",
          "gists_url": "https://api.github.com/users/xuanyuanking/gists{/gist_id}",
          "starred_url": "https://api.github.com/users/xuanyuanking/starred{/owner}{/repo}",
          "subscriptions_url": "https://api.github.com/users/xuanyuanking/subscriptions",
          "organizations_url": "https://api.github.com/users/xuanyuanking/orgs",
          "repos_url": "https://api.github.com/users/xuanyuanking/repos",
          "events_url": "https://api.github.com/users/xuanyuanking/events{/privacy}",
          "received_events_url": "https://api.github.com/users/xuanyuanking/received_events",
          "type": "User",
          "site_admin": false
        },
        "labels": [

        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [

        ],
        "milestone": null,
        "comments": 3,
        "created_at": "2020-02-06T15:43:09Z",
        "updated_at": "2020-02-06T15:57:18Z",
        "closed_at": null,
        "author_association": "CONTRIBUTOR",
        "pull_request": {
          "url": "https://api.github.com/repos/apache/spark/pulls/27479",
          "html_url": "https://github.com/apache/spark/pull/27479",
          "diff_url": "https://github.com/apache/spark/pull/27479.diff",
          "patch_url": "https://github.com/apache/spark/pull/27479.patch"
        },
        "body": "### What changes were proposed in this pull request?\r\nFix the left menu broken introduced in #25459.\r\n\r\n\r\n### Why are the changes needed?\r\nThe `left-menu-wrapper` CSS reused for both ml-guide and sql-programming-guide, the before changes will break the UI.\r\n\r\nBefore:\r\n![image](https://user-images.githubusercontent.com/4833765/73952563-1061d800-493a-11ea-8a75-d802a1534a44.png)\r\n![image](https://user-images.githubusercontent.com/4833765/73952584-18217c80-493a-11ea-85a3-ce5f9875545f.png)\r\n![image](https://user-images.githubusercontent.com/4833765/73952605-21124e00-493a-11ea-8d79-24f4dfec73d9.png)\r\n\r\n\r\nAfter:\r\n![image](https://user-images.githubusercontent.com/4833765/73952630-2a031f80-493a-11ea-80ff-4630801cfaf4.png)\r\n![image](https://user-images.githubusercontent.com/4833765/73952652-30919700-493a-11ea-9db1-8bb4a3f913b4.png)\r\n![image](https://user-images.githubusercontent.com/4833765/73952671-35eee180-493a-11ea-801b-d50c4397adf2.png)\r\n\r\n### Does this PR introduce any user-facing change?\r\nDocument UI change only.\r\n\r\n\r\n### How was this patch tested?\r\nLocal test, screenshot attached below.\r\n"
      },
      "comment": {
        "url": "https://api.github.com/repos/apache/spark/issues/comments/582973040",
        "html_url": "https://github.com/apache/spark/pull/27479#issuecomment-582973040",
        "issue_url": "https://api.github.com/repos/apache/spark/issues/27479",
        "id": 582973040,
        "node_id": "MDEyOklzc3VlQ29tbWVudDU4Mjk3MzA0MA==",
        "user": {
          "login": "SparkQA",
          "id": 8108735,
          "node_id": "MDQ6VXNlcjgxMDg3MzU=",
          "avatar_url": "https://avatars1.githubusercontent.com/u/8108735?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/SparkQA",
          "html_url": "https://github.com/SparkQA",
          "followers_url": "https://api.github.com/users/SparkQA/followers",
          "following_url": "https://api.github.com/users/SparkQA/following{/other_user}",
          "gists_url": "https://api.github.com/users/SparkQA/gists{/gist_id}",
          "starred_url": "https://api.github.com/users/SparkQA/starred{/owner}{/repo}",
          "subscriptions_url": "https://api.github.com/users/SparkQA/subscriptions",
          "organizations_url": "https://api.github.com/users/SparkQA/orgs",
          "repos_url": "https://api.github.com/users/SparkQA/repos",
          "events_url": "https://api.github.com/users/SparkQA/events{/privacy}",
          "received_events_url": "https://api.github.com/users/SparkQA/received_events",
          "type": "User",
          "site_admin": false
        },
        "created_at": "2020-02-06T15:57:18Z",
        "updated_at": "2020-02-06T15:57:18Z",
        "author_association": "NONE",
        "body": "**[Test build #117999 has finished](https://amplab.cs.berkeley.edu/jenkins/job/SparkPullRequestBuilder/117999/testReport)** for PR 27479 at commit [`e79e5db`](https://github.com/apache/spark/commit/e79e5db05e3404ec323525f2fb9248c11cdc12ea).\n * This patch passes all tests.\n * This patch merges cleanly.\n * This patch adds no public classes."
      }
    },
    "public": true,
    "created_at": "2020-02-06T15:57:19Z",
    "org": {
      "id": 47359,
      "login": "apache",
      "gravatar_id": "",
      "url": "https://api.github.com/orgs/apache",
      "avatar_url": "https://avatars.githubusercontent.com/u/47359?"
    }
  },
  {
    "id": "11453707137",
    "type": "IssueCommentEvent",
    "actor": {
      "id": 12696156,
      "login": "PedroRossi",
      "display_login": "PedroRossi",
      "gravatar_id": "",
      "url": "https://api.github.com/users/PedroRossi",
      "avatar_url": "https://avatars.githubusercontent.com/u/12696156?"
    },
    "repo": {
      "id": 17165658,
      "name": "apache/spark",
      "url": "https://api.github.com/repos/apache/spark"
    },
    "payload": {
      "action": "created",
      "issue": {
        "url": "https://api.github.com/repos/apache/spark/issues/27422",
        "repository_url": "https://api.github.com/repos/apache/spark",
        "labels_url": "https://api.github.com/repos/apache/spark/issues/27422/labels{/name}",
        "comments_url": "https://api.github.com/repos/apache/spark/issues/27422/comments",
        "events_url": "https://api.github.com/repos/apache/spark/issues/27422/events",
        "html_url": "https://github.com/apache/spark/pull/27422",
        "id": 558333185,
        "node_id": "MDExOlB1bGxSZXF1ZXN0MzY5NzQxMTUw",
        "number": 27422,
        "title": "[SPARK-25355][K8S] Add proxy user to driver if present on spark-submit",
        "user": {
          "login": "PedroRossi",
          "id": 12696156,
          "node_id": "MDQ6VXNlcjEyNjk2MTU2",
          "avatar_url": "https://avatars2.githubusercontent.com/u/12696156?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/PedroRossi",
          "html_url": "https://github.com/PedroRossi",
          "followers_url": "https://api.github.com/users/PedroRossi/followers",
          "following_url": "https://api.github.com/users/PedroRossi/following{/other_user}",
          "gists_url": "https://api.github.com/users/PedroRossi/gists{/gist_id}",
          "starred_url": "https://api.github.com/users/PedroRossi/starred{/owner}{/repo}",
          "subscriptions_url": "https://api.github.com/users/PedroRossi/subscriptions",
          "organizations_url": "https://api.github.com/users/PedroRossi/orgs",
          "repos_url": "https://api.github.com/users/PedroRossi/repos",
          "events_url": "https://api.github.com/users/PedroRossi/events{/privacy}",
          "received_events_url": "https://api.github.com/users/PedroRossi/received_events",
          "type": "User",
          "site_admin": false
        },
        "labels": [
          {
            "id": 1406605057,
            "node_id": "MDU6TGFiZWwxNDA2NjA1MDU3",
            "url": "https://api.github.com/repos/apache/spark/labels/KUBERNETES",
            "name": "KUBERNETES",
            "color": "ededed",
            "default": false,
            "description": null
          }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [

        ],
        "milestone": null,
        "comments": 14,
        "created_at": "2020-01-31T19:40:30Z",
        "updated_at": "2020-02-06T15:50:38Z",
        "closed_at": null,
        "author_association": "NONE",
        "pull_request": {
          "url": "https://api.github.com/repos/apache/spark/pulls/27422",
          "html_url": "https://github.com/apache/spark/pull/27422",
          "diff_url": "https://github.com/apache/spark/pull/27422.diff",
          "patch_url": "https://github.com/apache/spark/pull/27422.patch"
        },
        "body": "### What changes were proposed in this pull request?\r\n\r\nThis PR adds the proxy user on the spark-submit command to the childArgs, so the proxy user can be retrieved and used in the KubernetesAplication to add the proxy user in the driver container args\r\n\r\n### Why are the changes needed?\r\n\r\nThe proxy user when used on the spark submit doesn't work on the Kubernetes environment since it doesn't add the `--proxy-user` argument on the driver container and when I added it manually to the Pod definition it worked just fine.\r\n\r\n### Does this PR introduce any user-facing change?\r\n\r\nNo.\r\n\r\n### How was this patch tested?\r\n\r\nTests were added"
      },
      "comment": {
        "url": "https://api.github.com/repos/apache/spark/issues/comments/582969650",
        "html_url": "https://github.com/apache/spark/pull/27422#issuecomment-582969650",
        "issue_url": "https://api.github.com/repos/apache/spark/issues/27422",
        "id": 582969650,
        "node_id": "MDEyOklzc3VlQ29tbWVudDU4Mjk2OTY1MA==",
        "user": {
          "login": "PedroRossi",
          "id": 12696156,
          "node_id": "MDQ6VXNlcjEyNjk2MTU2",
          "avatar_url": "https://avatars2.githubusercontent.com/u/12696156?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/PedroRossi",
          "html_url": "https://github.com/PedroRossi",
          "followers_url": "https://api.github.com/users/PedroRossi/followers",
          "following_url": "https://api.github.com/users/PedroRossi/following{/other_user}",
          "gists_url": "https://api.github.com/users/PedroRossi/gists{/gist_id}",
          "starred_url": "https://api.github.com/users/PedroRossi/starred{/owner}{/repo}",
          "subscriptions_url": "https://api.github.com/users/PedroRossi/subscriptions",
          "organizations_url": "https://api.github.com/users/PedroRossi/orgs",
          "repos_url": "https://api.github.com/users/PedroRossi/repos",
          "events_url": "https://api.github.com/users/PedroRossi/events{/privacy}",
          "received_events_url": "https://api.github.com/users/PedroRossi/received_events",
          "type": "User",
          "site_admin": false
        },
        "created_at": "2020-02-06T15:50:38Z",
        "updated_at": "2020-02-06T15:50:38Z",
        "author_association": "NONE",
        "body": "@dongjoon-hyun I fixed this PR to get this change on https://github.com/apache/spark/pull/27465 and it fixed the kubernetes integration test"
      }
    },
    "public": true,
    "created_at": "2020-02-06T15:50:38Z",
    "org": {
      "id": 47359,
      "login": "apache",
      "gravatar_id": "",
      "url": "https://api.github.com/orgs/apache",
      "avatar_url": "https://avatars.githubusercontent.com/u/47359?"
    }
  },
  {
    "id": "11453660055",
    "type": "IssueCommentEvent",
    "actor": {
      "id": 4031291,
      "login": "AmplabJenkins",
      "display_login": "AmplabJenkins",
      "gravatar_id": "",
      "url": "https://api.github.com/users/AmplabJenkins",
      "avatar_url": "https://avatars.githubusercontent.com/u/4031291?"
    },
    "repo": {
      "id": 17165658,
      "name": "apache/spark",
      "url": "https://api.github.com/repos/apache/spark"
    },
    "payload": {
      "action": "created",
      "issue": {
        "url": "https://api.github.com/repos/apache/spark/issues/27476",
        "repository_url": "https://api.github.com/repos/apache/spark",
        "labels_url": "https://api.github.com/repos/apache/spark/issues/27476/labels{/name}",
        "comments_url": "https://api.github.com/repos/apache/spark/issues/27476/comments",
        "events_url": "https://api.github.com/repos/apache/spark/issues/27476/events",
        "html_url": "https://github.com/apache/spark/pull/27476",
        "id": 560953849,
        "node_id": "MDExOlB1bGxSZXF1ZXN0MzcxODUwNjgw",
        "number": 27476,
        "title": "[SPARK-27986][SQL][followup] window aggregate function with filter predicate is not supported",
        "user": {
          "login": "cloud-fan",
          "id": 3182036,
          "node_id": "MDQ6VXNlcjMxODIwMzY=",
          "avatar_url": "https://avatars3.githubusercontent.com/u/3182036?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/cloud-fan",
          "html_url": "https://github.com/cloud-fan",
          "followers_url": "https://api.github.com/users/cloud-fan/followers",
          "following_url": "https://api.github.com/users/cloud-fan/following{/other_user}",
          "gists_url": "https://api.github.com/users/cloud-fan/gists{/gist_id}",
          "starred_url": "https://api.github.com/users/cloud-fan/starred{/owner}{/repo}",
          "subscriptions_url": "https://api.github.com/users/cloud-fan/subscriptions",
          "organizations_url": "https://api.github.com/users/cloud-fan/orgs",
          "repos_url": "https://api.github.com/users/cloud-fan/repos",
          "events_url": "https://api.github.com/users/cloud-fan/events{/privacy}",
          "received_events_url": "https://api.github.com/users/cloud-fan/received_events",
          "type": "User",
          "site_admin": false
        },
        "labels": [

        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [

        ],
        "milestone": null,
        "comments": 6,
        "created_at": "2020-02-06T11:32:59Z",
        "updated_at": "2020-02-06T15:46:05Z",
        "closed_at": null,
        "author_association": "CONTRIBUTOR",
        "pull_request": {
          "url": "https://api.github.com/repos/apache/spark/pulls/27476",
          "html_url": "https://github.com/apache/spark/pull/27476",
          "diff_url": "https://github.com/apache/spark/pull/27476.diff",
          "patch_url": "https://github.com/apache/spark/pull/27476.patch"
        },
        "body": "<!--\r\nThanks for sending a pull request!  Here are some tips for you:\r\n  1. If this is your first time, please read our contributor guidelines: https://spark.apache.org/contributing.html\r\n  2. Ensure you have added or run the appropriate tests for your PR: https://spark.apache.org/developer-tools.html\r\n  3. If the PR is unfinished, add '[WIP]' in your PR title, e.g., '[WIP][SPARK-XXXX] Your PR title ...'.\r\n  4. Be sure to keep the PR description updated to reflect all changes.\r\n  5. Please write your PR title to summarize what this PR proposes.\r\n  6. If possible, provide a concise example to reproduce the issue for a faster review.\r\n-->\r\n\r\n### What changes were proposed in this pull request?\r\n<!--\r\nPlease clarify what changes you are proposing. The purpose of this section is to outline the changes and how this PR fixes the issue. \r\nIf possible, please consider writing useful notes for better and faster reviews in your PR. See the examples below.\r\n  1. If you refactor some codes with changing classes, showing the class hierarchy will help reviewers.\r\n  2. If you fix some SQL features, you can provide some references of other DBMSes.\r\n  3. If there is design documentation, please add the link.\r\n  4. If there is a discussion in the mailing list, please add the link.\r\n-->\r\nThis is a followup of https://github.com/apache/spark/pull/26656.\r\n\r\nWe don't support window aggregate function with filter predicate yet and we should fail explicitly.\r\n\r\nObservable metrics has the same issue. This PR fixes it as well.\r\n\r\n### Why are the changes needed?\r\n<!--\r\nPlease clarify why the changes are needed. For instance,\r\n  1. If you propose a new API, clarify the use case for a new API.\r\n  2. If you fix a bug, you can clarify why it is a bug.\r\n-->\r\nIf we simply ignore filter predicate when we don't support it, the result is wrong.\r\n\r\n### Does this PR introduce any user-facing change?\r\n<!--\r\nIf yes, please clarify the previous behavior and the change this PR proposes - provide the console output, description and/or an example to show the behavior difference if possible.\r\nIf no, write 'No'.\r\n-->\r\nyea, fix the query result.\r\n\r\n### How was this patch tested?\r\n<!--\r\nIf tests were added, say they were added here. Please make sure to add some test cases that check the changes thoroughly including negative and positive cases if possible.\r\nIf it was tested in a way different from regular unit tests, please clarify how you tested step by step, ideally copy and paste-able, so that other reviewers can test and check, and descendants can verify in the future.\r\nIf tests were not added, please describe why they were not added and/or why it was difficult to add.\r\n-->\r\nnew tests"
      },
      "comment": {
        "url": "https://api.github.com/repos/apache/spark/issues/comments/582967436",
        "html_url": "https://github.com/apache/spark/pull/27476#issuecomment-582967436",
        "issue_url": "https://api.github.com/repos/apache/spark/issues/27476",
        "id": 582967436,
        "node_id": "MDEyOklzc3VlQ29tbWVudDU4Mjk2NzQzNg==",
        "user": {
          "login": "AmplabJenkins",
          "id": 4031291,
          "node_id": "MDQ6VXNlcjQwMzEyOTE=",
          "avatar_url": "https://avatars3.githubusercontent.com/u/4031291?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/AmplabJenkins",
          "html_url": "https://github.com/AmplabJenkins",
          "followers_url": "https://api.github.com/users/AmplabJenkins/followers",
          "following_url": "https://api.github.com/users/AmplabJenkins/following{/other_user}",
          "gists_url": "https://api.github.com/users/AmplabJenkins/gists{/gist_id}",
          "starred_url": "https://api.github.com/users/AmplabJenkins/starred{/owner}{/repo}",
          "subscriptions_url": "https://api.github.com/users/AmplabJenkins/subscriptions",
          "organizations_url": "https://api.github.com/users/AmplabJenkins/orgs",
          "repos_url": "https://api.github.com/users/AmplabJenkins/repos",
          "events_url": "https://api.github.com/users/AmplabJenkins/events{/privacy}",
          "received_events_url": "https://api.github.com/users/AmplabJenkins/received_events",
          "type": "User",
          "site_admin": false
        },
        "created_at": "2020-02-06T15:46:05Z",
        "updated_at": "2020-02-06T15:46:05Z",
        "author_association": "NONE",
        "body": "Test PASSed.\nRefer to this link for build results (access rights to CI server needed): \nhttps://amplab.cs.berkeley.edu/jenkins//job/SparkPullRequestBuilder/117990/\nTest PASSed."
      }
    },
    "public": true,
    "created_at": "2020-02-06T15:46:05Z",
    "org": {
      "id": 47359,
      "login": "apache",
      "gravatar_id": "",
      "url": "https://api.github.com/orgs/apache",
      "avatar_url": "https://avatars.githubusercontent.com/u/47359?"
    }
  },
  {
    "id": "11453659771",
    "type": "IssueCommentEvent",
    "actor": {
      "id": 4031291,
      "login": "AmplabJenkins",
      "display_login": "AmplabJenkins",
      "gravatar_id": "",
      "url": "https://api.github.com/users/AmplabJenkins",
      "avatar_url": "https://avatars.githubusercontent.com/u/4031291?"
    },
    "repo": {
      "id": 17165658,
      "name": "apache/spark",
      "url": "https://api.github.com/repos/apache/spark"
    },
    "payload": {
      "action": "created",
      "issue": {
        "url": "https://api.github.com/repos/apache/spark/issues/27476",
        "repository_url": "https://api.github.com/repos/apache/spark",
        "labels_url": "https://api.github.com/repos/apache/spark/issues/27476/labels{/name}",
        "comments_url": "https://api.github.com/repos/apache/spark/issues/27476/comments",
        "events_url": "https://api.github.com/repos/apache/spark/issues/27476/events",
        "html_url": "https://github.com/apache/spark/pull/27476",
        "id": 560953849,
        "node_id": "MDExOlB1bGxSZXF1ZXN0MzcxODUwNjgw",
        "number": 27476,
        "title": "[SPARK-27986][SQL][followup] window aggregate function with filter predicate is not supported",
        "user": {
          "login": "cloud-fan",
          "id": 3182036,
          "node_id": "MDQ6VXNlcjMxODIwMzY=",
          "avatar_url": "https://avatars3.githubusercontent.com/u/3182036?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/cloud-fan",
          "html_url": "https://github.com/cloud-fan",
          "followers_url": "https://api.github.com/users/cloud-fan/followers",
          "following_url": "https://api.github.com/users/cloud-fan/following{/other_user}",
          "gists_url": "https://api.github.com/users/cloud-fan/gists{/gist_id}",
          "starred_url": "https://api.github.com/users/cloud-fan/starred{/owner}{/repo}",
          "subscriptions_url": "https://api.github.com/users/cloud-fan/subscriptions",
          "organizations_url": "https://api.github.com/users/cloud-fan/orgs",
          "repos_url": "https://api.github.com/users/cloud-fan/repos",
          "events_url": "https://api.github.com/users/cloud-fan/events{/privacy}",
          "received_events_url": "https://api.github.com/users/cloud-fan/received_events",
          "type": "User",
          "site_admin": false
        },
        "labels": [

        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [

        ],
        "milestone": null,
        "comments": 6,
        "created_at": "2020-02-06T11:32:59Z",
        "updated_at": "2020-02-06T15:46:03Z",
        "closed_at": null,
        "author_association": "CONTRIBUTOR",
        "pull_request": {
          "url": "https://api.github.com/repos/apache/spark/pulls/27476",
          "html_url": "https://github.com/apache/spark/pull/27476",
          "diff_url": "https://github.com/apache/spark/pull/27476.diff",
          "patch_url": "https://github.com/apache/spark/pull/27476.patch"
        },
        "body": "<!--\r\nThanks for sending a pull request!  Here are some tips for you:\r\n  1. If this is your first time, please read our contributor guidelines: https://spark.apache.org/contributing.html\r\n  2. Ensure you have added or run the appropriate tests for your PR: https://spark.apache.org/developer-tools.html\r\n  3. If the PR is unfinished, add '[WIP]' in your PR title, e.g., '[WIP][SPARK-XXXX] Your PR title ...'.\r\n  4. Be sure to keep the PR description updated to reflect all changes.\r\n  5. Please write your PR title to summarize what this PR proposes.\r\n  6. If possible, provide a concise example to reproduce the issue for a faster review.\r\n-->\r\n\r\n### What changes were proposed in this pull request?\r\n<!--\r\nPlease clarify what changes you are proposing. The purpose of this section is to outline the changes and how this PR fixes the issue. \r\nIf possible, please consider writing useful notes for better and faster reviews in your PR. See the examples below.\r\n  1. If you refactor some codes with changing classes, showing the class hierarchy will help reviewers.\r\n  2. If you fix some SQL features, you can provide some references of other DBMSes.\r\n  3. If there is design documentation, please add the link.\r\n  4. If there is a discussion in the mailing list, please add the link.\r\n-->\r\nThis is a followup of https://github.com/apache/spark/pull/26656.\r\n\r\nWe don't support window aggregate function with filter predicate yet and we should fail explicitly.\r\n\r\nObservable metrics has the same issue. This PR fixes it as well.\r\n\r\n### Why are the changes needed?\r\n<!--\r\nPlease clarify why the changes are needed. For instance,\r\n  1. If you propose a new API, clarify the use case for a new API.\r\n  2. If you fix a bug, you can clarify why it is a bug.\r\n-->\r\nIf we simply ignore filter predicate when we don't support it, the result is wrong.\r\n\r\n### Does this PR introduce any user-facing change?\r\n<!--\r\nIf yes, please clarify the previous behavior and the change this PR proposes - provide the console output, description and/or an example to show the behavior difference if possible.\r\nIf no, write 'No'.\r\n-->\r\nyea, fix the query result.\r\n\r\n### How was this patch tested?\r\n<!--\r\nIf tests were added, say they were added here. Please make sure to add some test cases that check the changes thoroughly including negative and positive cases if possible.\r\nIf it was tested in a way different from regular unit tests, please clarify how you tested step by step, ideally copy and paste-able, so that other reviewers can test and check, and descendants can verify in the future.\r\nIf tests were not added, please describe why they were not added and/or why it was difficult to add.\r\n-->\r\nnew tests"
      },
      "comment": {
        "url": "https://api.github.com/repos/apache/spark/issues/comments/582967423",
        "html_url": "https://github.com/apache/spark/pull/27476#issuecomment-582967423",
        "issue_url": "https://api.github.com/repos/apache/spark/issues/27476",
        "id": 582967423,
        "node_id": "MDEyOklzc3VlQ29tbWVudDU4Mjk2NzQyMw==",
        "user": {
          "login": "AmplabJenkins",
          "id": 4031291,
          "node_id": "MDQ6VXNlcjQwMzEyOTE=",
          "avatar_url": "https://avatars3.githubusercontent.com/u/4031291?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/AmplabJenkins",
          "html_url": "https://github.com/AmplabJenkins",
          "followers_url": "https://api.github.com/users/AmplabJenkins/followers",
          "following_url": "https://api.github.com/users/AmplabJenkins/following{/other_user}",
          "gists_url": "https://api.github.com/users/AmplabJenkins/gists{/gist_id}",
          "starred_url": "https://api.github.com/users/AmplabJenkins/starred{/owner}{/repo}",
          "subscriptions_url": "https://api.github.com/users/AmplabJenkins/subscriptions",
          "organizations_url": "https://api.github.com/users/AmplabJenkins/orgs",
          "repos_url": "https://api.github.com/users/AmplabJenkins/repos",
          "events_url": "https://api.github.com/users/AmplabJenkins/events{/privacy}",
          "received_events_url": "https://api.github.com/users/AmplabJenkins/received_events",
          "type": "User",
          "site_admin": false
        },
        "created_at": "2020-02-06T15:46:03Z",
        "updated_at": "2020-02-06T15:46:03Z",
        "author_association": "NONE",
        "body": "Merged build finished. Test PASSed."
      }
    },
    "public": true,
    "created_at": "2020-02-06T15:46:04Z",
    "org": {
      "id": 47359,
      "login": "apache",
      "gravatar_id": "",
      "url": "https://api.github.com/orgs/apache",
      "avatar_url": "https://avatars.githubusercontent.com/u/47359?"
    }
  },
  {
    "id": "11453655670",
    "type": "IssueCommentEvent",
    "actor": {
      "id": 4031291,
      "login": "AmplabJenkins",
      "display_login": "AmplabJenkins",
      "gravatar_id": "",
      "url": "https://api.github.com/users/AmplabJenkins",
      "avatar_url": "https://avatars.githubusercontent.com/u/4031291?"
    },
    "repo": {
      "id": 17165658,
      "name": "apache/spark",
      "url": "https://api.github.com/repos/apache/spark"
    },
    "payload": {
      "action": "created",
      "issue": {
        "url": "https://api.github.com/repos/apache/spark/issues/27479",
        "repository_url": "https://api.github.com/repos/apache/spark",
        "labels_url": "https://api.github.com/repos/apache/spark/issues/27479/labels{/name}",
        "comments_url": "https://api.github.com/repos/apache/spark/issues/27479/comments",
        "events_url": "https://api.github.com/repos/apache/spark/issues/27479/events",
        "html_url": "https://github.com/apache/spark/pull/27479",
        "id": 561096462,
        "node_id": "MDExOlB1bGxSZXF1ZXN0MzcxOTY4OTI4",
        "number": 27479,
        "title": "[MINOR][DOC] Fix document UI left menu broken",
        "user": {
          "login": "xuanyuanking",
          "id": 4833765,
          "node_id": "MDQ6VXNlcjQ4MzM3NjU=",
          "avatar_url": "https://avatars0.githubusercontent.com/u/4833765?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/xuanyuanking",
          "html_url": "https://github.com/xuanyuanking",
          "followers_url": "https://api.github.com/users/xuanyuanking/followers",
          "following_url": "https://api.github.com/users/xuanyuanking/following{/other_user}",
          "gists_url": "https://api.github.com/users/xuanyuanking/gists{/gist_id}",
          "starred_url": "https://api.github.com/users/xuanyuanking/starred{/owner}{/repo}",
          "subscriptions_url": "https://api.github.com/users/xuanyuanking/subscriptions",
          "organizations_url": "https://api.github.com/users/xuanyuanking/orgs",
          "repos_url": "https://api.github.com/users/xuanyuanking/repos",
          "events_url": "https://api.github.com/users/xuanyuanking/events{/privacy}",
          "received_events_url": "https://api.github.com/users/xuanyuanking/received_events",
          "type": "User",
          "site_admin": false
        },
        "labels": [

        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [

        ],
        "milestone": null,
        "comments": 4,
        "created_at": "2020-02-06T15:43:09Z",
        "updated_at": "2020-02-06T15:45:40Z",
        "closed_at": null,
        "author_association": "CONTRIBUTOR",
        "pull_request": {
          "url": "https://api.github.com/repos/apache/spark/pulls/27479",
          "html_url": "https://github.com/apache/spark/pull/27479",
          "diff_url": "https://github.com/apache/spark/pull/27479.diff",
          "patch_url": "https://github.com/apache/spark/pull/27479.patch"
        },
        "body": "### What changes were proposed in this pull request?\r\nFix the left menu broken introduced in #25459.\r\n\r\n\r\n### Why are the changes needed?\r\nThe `left-menu-wrapper` CSS reused for both ml-guide and sql-programming-guide, the before changes will break the UI.\r\n\r\nBefore:\r\n![image](https://user-images.githubusercontent.com/4833765/73952563-1061d800-493a-11ea-8a75-d802a1534a44.png)\r\n![image](https://user-images.githubusercontent.com/4833765/73952584-18217c80-493a-11ea-85a3-ce5f9875545f.png)\r\n![image](https://user-images.githubusercontent.com/4833765/73952605-21124e00-493a-11ea-8d79-24f4dfec73d9.png)\r\n\r\n\r\nAfter:\r\n![image](https://user-images.githubusercontent.com/4833765/73952630-2a031f80-493a-11ea-80ff-4630801cfaf4.png)\r\n![image](https://user-images.githubusercontent.com/4833765/73952652-30919700-493a-11ea-9db1-8bb4a3f913b4.png)\r\n![image](https://user-images.githubusercontent.com/4833765/73952671-35eee180-493a-11ea-801b-d50c4397adf2.png)\r\n\r\n### Does this PR introduce any user-facing change?\r\nDocument UI change only.\r\n\r\n\r\n### How was this patch tested?\r\nLocal test, screenshot attached below.\r\n"
      },
      "comment": {
        "url": "https://api.github.com/repos/apache/spark/issues/comments/582967222",
        "html_url": "https://github.com/apache/spark/pull/27479#issuecomment-582967222",
        "issue_url": "https://api.github.com/repos/apache/spark/issues/27479",
        "id": 582967222,
        "node_id": "MDEyOklzc3VlQ29tbWVudDU4Mjk2NzIyMg==",
        "user": {
          "login": "AmplabJenkins",
          "id": 4031291,
          "node_id": "MDQ6VXNlcjQwMzEyOTE=",
          "avatar_url": "https://avatars3.githubusercontent.com/u/4031291?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/AmplabJenkins",
          "html_url": "https://github.com/AmplabJenkins",
          "followers_url": "https://api.github.com/users/AmplabJenkins/followers",
          "following_url": "https://api.github.com/users/AmplabJenkins/following{/other_user}",
          "gists_url": "https://api.github.com/users/AmplabJenkins/gists{/gist_id}",
          "starred_url": "https://api.github.com/users/AmplabJenkins/starred{/owner}{/repo}",
          "subscriptions_url": "https://api.github.com/users/AmplabJenkins/subscriptions",
          "organizations_url": "https://api.github.com/users/AmplabJenkins/orgs",
          "repos_url": "https://api.github.com/users/AmplabJenkins/repos",
          "events_url": "https://api.github.com/users/AmplabJenkins/events{/privacy}",
          "received_events_url": "https://api.github.com/users/AmplabJenkins/received_events",
          "type": "User",
          "site_admin": false
        },
        "created_at": "2020-02-06T15:45:40Z",
        "updated_at": "2020-02-06T15:45:40Z",
        "author_association": "NONE",
        "body": "Test PASSed.\nRefer to this link for build results (access rights to CI server needed): \nhttps://amplab.cs.berkeley.edu/jenkins//job/SparkPullRequestBuilder-K8s/22764/\nTest PASSed."
      }
    },
    "public": true,
    "created_at": "2020-02-06T15:45:41Z",
    "org": {
      "id": 47359,
      "login": "apache",
      "gravatar_id": "",
      "url": "https://api.github.com/orgs/apache",
      "avatar_url": "https://avatars.githubusercontent.com/u/47359?"
    }
  },
  {
    "id": "11453655440",
    "type": "IssueCommentEvent",
    "actor": {
      "id": 4031291,
      "login": "AmplabJenkins",
      "display_login": "AmplabJenkins",
      "gravatar_id": "",
      "url": "https://api.github.com/users/AmplabJenkins",
      "avatar_url": "https://avatars.githubusercontent.com/u/4031291?"
    },
    "repo": {
      "id": 17165658,
      "name": "apache/spark",
      "url": "https://api.github.com/repos/apache/spark"
    },
    "payload": {
      "action": "created",
      "issue": {
        "url": "https://api.github.com/repos/apache/spark/issues/27479",
        "repository_url": "https://api.github.com/repos/apache/spark",
        "labels_url": "https://api.github.com/repos/apache/spark/issues/27479/labels{/name}",
        "comments_url": "https://api.github.com/repos/apache/spark/issues/27479/comments",
        "events_url": "https://api.github.com/repos/apache/spark/issues/27479/events",
        "html_url": "https://github.com/apache/spark/pull/27479",
        "id": 561096462,
        "node_id": "MDExOlB1bGxSZXF1ZXN0MzcxOTY4OTI4",
        "number": 27479,
        "title": "[MINOR][DOC] Fix document UI left menu broken",
        "user": {
          "login": "xuanyuanking",
          "id": 4833765,
          "node_id": "MDQ6VXNlcjQ4MzM3NjU=",
          "avatar_url": "https://avatars0.githubusercontent.com/u/4833765?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/xuanyuanking",
          "html_url": "https://github.com/xuanyuanking",
          "followers_url": "https://api.github.com/users/xuanyuanking/followers",
          "following_url": "https://api.github.com/users/xuanyuanking/following{/other_user}",
          "gists_url": "https://api.github.com/users/xuanyuanking/gists{/gist_id}",
          "starred_url": "https://api.github.com/users/xuanyuanking/starred{/owner}{/repo}",
          "subscriptions_url": "https://api.github.com/users/xuanyuanking/subscriptions",
          "organizations_url": "https://api.github.com/users/xuanyuanking/orgs",
          "repos_url": "https://api.github.com/users/xuanyuanking/repos",
          "events_url": "https://api.github.com/users/xuanyuanking/events{/privacy}",
          "received_events_url": "https://api.github.com/users/xuanyuanking/received_events",
          "type": "User",
          "site_admin": false
        },
        "labels": [

        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [

        ],
        "milestone": null,
        "comments": 3,
        "created_at": "2020-02-06T15:43:09Z",
        "updated_at": "2020-02-06T15:45:39Z",
        "closed_at": null,
        "author_association": "CONTRIBUTOR",
        "pull_request": {
          "url": "https://api.github.com/repos/apache/spark/pulls/27479",
          "html_url": "https://github.com/apache/spark/pull/27479",
          "diff_url": "https://github.com/apache/spark/pull/27479.diff",
          "patch_url": "https://github.com/apache/spark/pull/27479.patch"
        },
        "body": "### What changes were proposed in this pull request?\r\nFix the left menu broken introduced in #25459.\r\n\r\n\r\n### Why are the changes needed?\r\nThe `left-menu-wrapper` CSS reused for both ml-guide and sql-programming-guide, the before changes will break the UI.\r\n\r\nBefore:\r\n![image](https://user-images.githubusercontent.com/4833765/73952563-1061d800-493a-11ea-8a75-d802a1534a44.png)\r\n![image](https://user-images.githubusercontent.com/4833765/73952584-18217c80-493a-11ea-85a3-ce5f9875545f.png)\r\n![image](https://user-images.githubusercontent.com/4833765/73952605-21124e00-493a-11ea-8d79-24f4dfec73d9.png)\r\n\r\n\r\nAfter:\r\n![image](https://user-images.githubusercontent.com/4833765/73952630-2a031f80-493a-11ea-80ff-4630801cfaf4.png)\r\n![image](https://user-images.githubusercontent.com/4833765/73952652-30919700-493a-11ea-9db1-8bb4a3f913b4.png)\r\n![image](https://user-images.githubusercontent.com/4833765/73952671-35eee180-493a-11ea-801b-d50c4397adf2.png)\r\n\r\n### Does this PR introduce any user-facing change?\r\nDocument UI change only.\r\n\r\n\r\n### How was this patch tested?\r\nLocal test, screenshot attached below.\r\n"
      },
      "comment": {
        "url": "https://api.github.com/repos/apache/spark/issues/comments/582967207",
        "html_url": "https://github.com/apache/spark/pull/27479#issuecomment-582967207",
        "issue_url": "https://api.github.com/repos/apache/spark/issues/27479",
        "id": 582967207,
        "node_id": "MDEyOklzc3VlQ29tbWVudDU4Mjk2NzIwNw==",
        "user": {
          "login": "AmplabJenkins",
          "id": 4031291,
          "node_id": "MDQ6VXNlcjQwMzEyOTE=",
          "avatar_url": "https://avatars3.githubusercontent.com/u/4031291?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/AmplabJenkins",
          "html_url": "https://github.com/AmplabJenkins",
          "followers_url": "https://api.github.com/users/AmplabJenkins/followers",
          "following_url": "https://api.github.com/users/AmplabJenkins/following{/other_user}",
          "gists_url": "https://api.github.com/users/AmplabJenkins/gists{/gist_id}",
          "starred_url": "https://api.github.com/users/AmplabJenkins/starred{/owner}{/repo}",
          "subscriptions_url": "https://api.github.com/users/AmplabJenkins/subscriptions",
          "organizations_url": "https://api.github.com/users/AmplabJenkins/orgs",
          "repos_url": "https://api.github.com/users/AmplabJenkins/repos",
          "events_url": "https://api.github.com/users/AmplabJenkins/events{/privacy}",
          "received_events_url": "https://api.github.com/users/AmplabJenkins/received_events",
          "type": "User",
          "site_admin": false
        },
        "created_at": "2020-02-06T15:45:38Z",
        "updated_at": "2020-02-06T15:45:38Z",
        "author_association": "NONE",
        "body": "Merged build finished. Test PASSed."
      }
    },
    "public": true,
    "created_at": "2020-02-06T15:45:39Z",
    "org": {
      "id": 47359,
      "login": "apache",
      "gravatar_id": "",
      "url": "https://api.github.com/orgs/apache",
      "avatar_url": "https://avatars.githubusercontent.com/u/47359?"
    }
  },
  {
    "id": "11453641971",
    "type": "IssueCommentEvent",
    "actor": {
      "id": 8108735,
      "login": "SparkQA",
      "display_login": "SparkQA",
      "gravatar_id": "",
      "url": "https://api.github.com/users/SparkQA",
      "avatar_url": "https://avatars.githubusercontent.com/u/8108735?"
    },
    "repo": {
      "id": 17165658,
      "name": "apache/spark",
      "url": "https://api.github.com/repos/apache/spark"
    },
    "payload": {
      "action": "created",
      "issue": {
        "url": "https://api.github.com/repos/apache/spark/issues/27479",
        "repository_url": "https://api.github.com/repos/apache/spark",
        "labels_url": "https://api.github.com/repos/apache/spark/issues/27479/labels{/name}",
        "comments_url": "https://api.github.com/repos/apache/spark/issues/27479/comments",
        "events_url": "https://api.github.com/repos/apache/spark/issues/27479/events",
        "html_url": "https://github.com/apache/spark/pull/27479",
        "id": 561096462,
        "node_id": "MDExOlB1bGxSZXF1ZXN0MzcxOTY4OTI4",
        "number": 27479,
        "title": "[MINOR][DOC] Fix document UI left menu broken",
        "user": {
          "login": "xuanyuanking",
          "id": 4833765,
          "node_id": "MDQ6VXNlcjQ4MzM3NjU=",
          "avatar_url": "https://avatars0.githubusercontent.com/u/4833765?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/xuanyuanking",
          "html_url": "https://github.com/xuanyuanking",
          "followers_url": "https://api.github.com/users/xuanyuanking/followers",
          "following_url": "https://api.github.com/users/xuanyuanking/following{/other_user}",
          "gists_url": "https://api.github.com/users/xuanyuanking/gists{/gist_id}",
          "starred_url": "https://api.github.com/users/xuanyuanking/starred{/owner}{/repo}",
          "subscriptions_url": "https://api.github.com/users/xuanyuanking/subscriptions",
          "organizations_url": "https://api.github.com/users/xuanyuanking/orgs",
          "repos_url": "https://api.github.com/users/xuanyuanking/repos",
          "events_url": "https://api.github.com/users/xuanyuanking/events{/privacy}",
          "received_events_url": "https://api.github.com/users/xuanyuanking/received_events",
          "type": "User",
          "site_admin": false
        },
        "labels": [

        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [

        ],
        "milestone": null,
        "comments": 2,
        "created_at": "2020-02-06T15:43:09Z",
        "updated_at": "2020-02-06T15:44:20Z",
        "closed_at": null,
        "author_association": "CONTRIBUTOR",
        "pull_request": {
          "url": "https://api.github.com/repos/apache/spark/pulls/27479",
          "html_url": "https://github.com/apache/spark/pull/27479",
          "diff_url": "https://github.com/apache/spark/pull/27479.diff",
          "patch_url": "https://github.com/apache/spark/pull/27479.patch"
        },
        "body": "### What changes were proposed in this pull request?\r\nFix the left menu broken introduced in #25459.\r\n\r\n\r\n### Why are the changes needed?\r\nThe `left-menu-wrapper` CSS reused for both ml-guide and sql-programming-guide, the before changes will break the UI.\r\n\r\nBefore:\r\n![image](https://user-images.githubusercontent.com/4833765/73952563-1061d800-493a-11ea-8a75-d802a1534a44.png)\r\n![image](https://user-images.githubusercontent.com/4833765/73952584-18217c80-493a-11ea-85a3-ce5f9875545f.png)\r\n![image](https://user-images.githubusercontent.com/4833765/73952605-21124e00-493a-11ea-8d79-24f4dfec73d9.png)\r\n\r\n\r\nAfter:\r\n![image](https://user-images.githubusercontent.com/4833765/73952630-2a031f80-493a-11ea-80ff-4630801cfaf4.png)\r\n![image](https://user-images.githubusercontent.com/4833765/73952652-30919700-493a-11ea-9db1-8bb4a3f913b4.png)\r\n![image](https://user-images.githubusercontent.com/4833765/73952671-35eee180-493a-11ea-801b-d50c4397adf2.png)\r\n\r\n### Does this PR introduce any user-facing change?\r\nDocument UI change only.\r\n\r\n\r\n### How was this patch tested?\r\nLocal test, screenshot attached below.\r\n"
      },
      "comment": {
        "url": "https://api.github.com/repos/apache/spark/issues/comments/582966565",
        "html_url": "https://github.com/apache/spark/pull/27479#issuecomment-582966565",
        "issue_url": "https://api.github.com/repos/apache/spark/issues/27479",
        "id": 582966565,
        "node_id": "MDEyOklzc3VlQ29tbWVudDU4Mjk2NjU2NQ==",
        "user": {
          "login": "SparkQA",
          "id": 8108735,
          "node_id": "MDQ6VXNlcjgxMDg3MzU=",
          "avatar_url": "https://avatars1.githubusercontent.com/u/8108735?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/SparkQA",
          "html_url": "https://github.com/SparkQA",
          "followers_url": "https://api.github.com/users/SparkQA/followers",
          "following_url": "https://api.github.com/users/SparkQA/following{/other_user}",
          "gists_url": "https://api.github.com/users/SparkQA/gists{/gist_id}",
          "starred_url": "https://api.github.com/users/SparkQA/starred{/owner}{/repo}",
          "subscriptions_url": "https://api.github.com/users/SparkQA/subscriptions",
          "organizations_url": "https://api.github.com/users/SparkQA/orgs",
          "repos_url": "https://api.github.com/users/SparkQA/repos",
          "events_url": "https://api.github.com/users/SparkQA/events{/privacy}",
          "received_events_url": "https://api.github.com/users/SparkQA/received_events",
          "type": "User",
          "site_admin": false
        },
        "created_at": "2020-02-06T15:44:20Z",
        "updated_at": "2020-02-06T15:44:20Z",
        "author_association": "NONE",
        "body": "**[Test build #117999 has started](https://amplab.cs.berkeley.edu/jenkins/job/SparkPullRequestBuilder/117999/testReport)** for PR 27479 at commit [`e79e5db`](https://github.com/apache/spark/commit/e79e5db05e3404ec323525f2fb9248c11cdc12ea)."
      }
    },
    "public": true,
    "created_at": "2020-02-06T15:44:21Z",
    "org": {
      "id": 47359,
      "login": "apache",
      "gravatar_id": "",
      "url": "https://api.github.com/orgs/apache",
      "avatar_url": "https://avatars.githubusercontent.com/u/47359?"
    }
  },
  {
    "id": "11453638521",
    "type": "IssueCommentEvent",
    "actor": {
      "id": 8108735,
      "login": "SparkQA",
      "display_login": "SparkQA",
      "gravatar_id": "",
      "url": "https://api.github.com/users/SparkQA",
      "avatar_url": "https://avatars.githubusercontent.com/u/8108735?"
    },
    "repo": {
      "id": 17165658,
      "name": "apache/spark",
      "url": "https://api.github.com/repos/apache/spark"
    },
    "payload": {
      "action": "created",
      "issue": {
        "url": "https://api.github.com/repos/apache/spark/issues/27476",
        "repository_url": "https://api.github.com/repos/apache/spark",
        "labels_url": "https://api.github.com/repos/apache/spark/issues/27476/labels{/name}",
        "comments_url": "https://api.github.com/repos/apache/spark/issues/27476/comments",
        "events_url": "https://api.github.com/repos/apache/spark/issues/27476/events",
        "html_url": "https://github.com/apache/spark/pull/27476",
        "id": 560953849,
        "node_id": "MDExOlB1bGxSZXF1ZXN0MzcxODUwNjgw",
        "number": 27476,
        "title": "[SPARK-27986][SQL][followup] window aggregate function with filter predicate is not supported",
        "user": {
          "login": "cloud-fan",
          "id": 3182036,
          "node_id": "MDQ6VXNlcjMxODIwMzY=",
          "avatar_url": "https://avatars3.githubusercontent.com/u/3182036?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/cloud-fan",
          "html_url": "https://github.com/cloud-fan",
          "followers_url": "https://api.github.com/users/cloud-fan/followers",
          "following_url": "https://api.github.com/users/cloud-fan/following{/other_user}",
          "gists_url": "https://api.github.com/users/cloud-fan/gists{/gist_id}",
          "starred_url": "https://api.github.com/users/cloud-fan/starred{/owner}{/repo}",
          "subscriptions_url": "https://api.github.com/users/cloud-fan/subscriptions",
          "organizations_url": "https://api.github.com/users/cloud-fan/orgs",
          "repos_url": "https://api.github.com/users/cloud-fan/repos",
          "events_url": "https://api.github.com/users/cloud-fan/events{/privacy}",
          "received_events_url": "https://api.github.com/users/cloud-fan/received_events",
          "type": "User",
          "site_admin": false
        },
        "labels": [

        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [

        ],
        "milestone": null,
        "comments": 5,
        "created_at": "2020-02-06T11:32:59Z",
        "updated_at": "2020-02-06T15:44:01Z",
        "closed_at": null,
        "author_association": "CONTRIBUTOR",
        "pull_request": {
          "url": "https://api.github.com/repos/apache/spark/pulls/27476",
          "html_url": "https://github.com/apache/spark/pull/27476",
          "diff_url": "https://github.com/apache/spark/pull/27476.diff",
          "patch_url": "https://github.com/apache/spark/pull/27476.patch"
        },
        "body": "<!--\r\nThanks for sending a pull request!  Here are some tips for you:\r\n  1. If this is your first time, please read our contributor guidelines: https://spark.apache.org/contributing.html\r\n  2. Ensure you have added or run the appropriate tests for your PR: https://spark.apache.org/developer-tools.html\r\n  3. If the PR is unfinished, add '[WIP]' in your PR title, e.g., '[WIP][SPARK-XXXX] Your PR title ...'.\r\n  4. Be sure to keep the PR description updated to reflect all changes.\r\n  5. Please write your PR title to summarize what this PR proposes.\r\n  6. If possible, provide a concise example to reproduce the issue for a faster review.\r\n-->\r\n\r\n### What changes were proposed in this pull request?\r\n<!--\r\nPlease clarify what changes you are proposing. The purpose of this section is to outline the changes and how this PR fixes the issue. \r\nIf possible, please consider writing useful notes for better and faster reviews in your PR. See the examples below.\r\n  1. If you refactor some codes with changing classes, showing the class hierarchy will help reviewers.\r\n  2. If you fix some SQL features, you can provide some references of other DBMSes.\r\n  3. If there is design documentation, please add the link.\r\n  4. If there is a discussion in the mailing list, please add the link.\r\n-->\r\nThis is a followup of https://github.com/apache/spark/pull/26656.\r\n\r\nWe don't support window aggregate function with filter predicate yet and we should fail explicitly.\r\n\r\nObservable metrics has the same issue. This PR fixes it as well.\r\n\r\n### Why are the changes needed?\r\n<!--\r\nPlease clarify why the changes are needed. For instance,\r\n  1. If you propose a new API, clarify the use case for a new API.\r\n  2. If you fix a bug, you can clarify why it is a bug.\r\n-->\r\nIf we simply ignore filter predicate when we don't support it, the result is wrong.\r\n\r\n### Does this PR introduce any user-facing change?\r\n<!--\r\nIf yes, please clarify the previous behavior and the change this PR proposes - provide the console output, description and/or an example to show the behavior difference if possible.\r\nIf no, write 'No'.\r\n-->\r\nyea, fix the query result.\r\n\r\n### How was this patch tested?\r\n<!--\r\nIf tests were added, say they were added here. Please make sure to add some test cases that check the changes thoroughly including negative and positive cases if possible.\r\nIf it was tested in a way different from regular unit tests, please clarify how you tested step by step, ideally copy and paste-able, so that other reviewers can test and check, and descendants can verify in the future.\r\nIf tests were not added, please describe why they were not added and/or why it was difficult to add.\r\n-->\r\nnew tests"
      },
      "comment": {
        "url": "https://api.github.com/repos/apache/spark/issues/comments/582966418",
        "html_url": "https://github.com/apache/spark/pull/27476#issuecomment-582966418",
        "issue_url": "https://api.github.com/repos/apache/spark/issues/27476",
        "id": 582966418,
        "node_id": "MDEyOklzc3VlQ29tbWVudDU4Mjk2NjQxOA==",
        "user": {
          "login": "SparkQA",
          "id": 8108735,
          "node_id": "MDQ6VXNlcjgxMDg3MzU=",
          "avatar_url": "https://avatars1.githubusercontent.com/u/8108735?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/SparkQA",
          "html_url": "https://github.com/SparkQA",
          "followers_url": "https://api.github.com/users/SparkQA/followers",
          "following_url": "https://api.github.com/users/SparkQA/following{/other_user}",
          "gists_url": "https://api.github.com/users/SparkQA/gists{/gist_id}",
          "starred_url": "https://api.github.com/users/SparkQA/starred{/owner}{/repo}",
          "subscriptions_url": "https://api.github.com/users/SparkQA/subscriptions",
          "organizations_url": "https://api.github.com/users/SparkQA/orgs",
          "repos_url": "https://api.github.com/users/SparkQA/repos",
          "events_url": "https://api.github.com/users/SparkQA/events{/privacy}",
          "received_events_url": "https://api.github.com/users/SparkQA/received_events",
          "type": "User",
          "site_admin": false
        },
        "created_at": "2020-02-06T15:44:00Z",
        "updated_at": "2020-02-06T15:44:00Z",
        "author_association": "NONE",
        "body": "**[Test build #117990 has finished](https://amplab.cs.berkeley.edu/jenkins/job/SparkPullRequestBuilder/117990/testReport)** for PR 27476 at commit [`e9ec6ef`](https://github.com/apache/spark/commit/e9ec6efd5ac58f6000b2e92a2cccbd84efe4ff06).\n * This patch passes all tests.\n * This patch merges cleanly.\n * This patch adds no public classes."
      }
    },
    "public": true,
    "created_at": "2020-02-06T15:44:01Z",
    "org": {
      "id": 47359,
      "login": "apache",
      "gravatar_id": "",
      "url": "https://api.github.com/orgs/apache",
      "avatar_url": "https://avatars.githubusercontent.com/u/47359?"
    }
  },
  {
    "id": "11453638363",
    "type": "PullRequestReviewCommentEvent",
    "actor": {
      "id": 8486025,
      "login": "beliefer",
      "display_login": "beliefer",
      "gravatar_id": "",
      "url": "https://api.github.com/users/beliefer",
      "avatar_url": "https://avatars.githubusercontent.com/u/8486025?"
    },
    "repo": {
      "id": 17165658,
      "name": "apache/spark",
      "url": "https://api.github.com/repos/apache/spark"
    },
    "payload": {
      "action": "created",
      "comment": {
        "url": "https://api.github.com/repos/apache/spark/pulls/comments/375912786",
        "pull_request_review_id": 354553775,
        "id": 375912786,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NTkxMjc4Ng==",
        "diff_hunk": "@@ -308,6 +308,9 @@ trait CheckAnalysis extends PredicateHelper {\n                 case a: AggregateExpression if a.isDistinct =>\n                   e.failAnalysis(\n                     \"distinct aggregates are not allowed in observed metrics, but found: \" + s.sql)\n+                case a: AggregateExpression if a.filter.isDefined =>\n+                  e.failAnalysis(\"aggregates with filter predicate are not allowed in \" +",
        "path": "sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/analysis/CheckAnalysis.scala",
        "position": 5,
        "original_position": 5,
        "commit_id": "e996e0340280c2c261da4e226cc169b4d17b7e46",
        "original_commit_id": "e996e0340280c2c261da4e226cc169b4d17b7e46",
        "user": {
          "login": "beliefer",
          "id": 8486025,
          "node_id": "MDQ6VXNlcjg0ODYwMjU=",
          "avatar_url": "https://avatars0.githubusercontent.com/u/8486025?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/beliefer",
          "html_url": "https://github.com/beliefer",
          "followers_url": "https://api.github.com/users/beliefer/followers",
          "following_url": "https://api.github.com/users/beliefer/following{/other_user}",
          "gists_url": "https://api.github.com/users/beliefer/gists{/gist_id}",
          "starred_url": "https://api.github.com/users/beliefer/starred{/owner}{/repo}",
          "subscriptions_url": "https://api.github.com/users/beliefer/subscriptions",
          "organizations_url": "https://api.github.com/users/beliefer/orgs",
          "repos_url": "https://api.github.com/users/beliefer/repos",
          "events_url": "https://api.github.com/users/beliefer/events{/privacy}",
          "received_events_url": "https://api.github.com/users/beliefer/received_events",
          "type": "User",
          "site_admin": false
        },
        "body": "I lost the information. Thank you.",
        "created_at": "2020-02-06T15:43:59Z",
        "updated_at": "2020-02-06T15:43:59Z",
        "html_url": "https://github.com/apache/spark/pull/27476#discussion_r375912786",
        "pull_request_url": "https://api.github.com/repos/apache/spark/pulls/27476",
        "author_association": "CONTRIBUTOR",
        "_links": {
          "self": {
            "href": "https://api.github.com/repos/apache/spark/pulls/comments/375912786"
          },
          "html": {
            "href": "https://github.com/apache/spark/pull/27476#discussion_r375912786"
          },
          "pull_request": {
            "href": "https://api.github.com/repos/apache/spark/pulls/27476"
          }
        }
      },
      "pull_request": {
        "url": "https://api.github.com/repos/apache/spark/pulls/27476",
        "id": 371850680,
        "node_id": "MDExOlB1bGxSZXF1ZXN0MzcxODUwNjgw",
        "html_url": "https://github.com/apache/spark/pull/27476",
        "diff_url": "https://github.com/apache/spark/pull/27476.diff",
        "patch_url": "https://github.com/apache/spark/pull/27476.patch",
        "issue_url": "https://api.github.com/repos/apache/spark/issues/27476",
        "number": 27476,
        "state": "open",
        "locked": false,
        "title": "[SPARK-27986][SQL][followup] window aggregate function with filter predicate is not supported",
        "user": {
          "login": "cloud-fan",
          "id": 3182036,
          "node_id": "MDQ6VXNlcjMxODIwMzY=",
          "avatar_url": "https://avatars3.githubusercontent.com/u/3182036?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/cloud-fan",
          "html_url": "https://github.com/cloud-fan",
          "followers_url": "https://api.github.com/users/cloud-fan/followers",
          "following_url": "https://api.github.com/users/cloud-fan/following{/other_user}",
          "gists_url": "https://api.github.com/users/cloud-fan/gists{/gist_id}",
          "starred_url": "https://api.github.com/users/cloud-fan/starred{/owner}{/repo}",
          "subscriptions_url": "https://api.github.com/users/cloud-fan/subscriptions",
          "organizations_url": "https://api.github.com/users/cloud-fan/orgs",
          "repos_url": "https://api.github.com/users/cloud-fan/repos",
          "events_url": "https://api.github.com/users/cloud-fan/events{/privacy}",
          "received_events_url": "https://api.github.com/users/cloud-fan/received_events",
          "type": "User",
          "site_admin": false
        },
        "body": "<!--\r\nThanks for sending a pull request!  Here are some tips for you:\r\n  1. If this is your first time, please read our contributor guidelines: https://spark.apache.org/contributing.html\r\n  2. Ensure you have added or run the appropriate tests for your PR: https://spark.apache.org/developer-tools.html\r\n  3. If the PR is unfinished, add '[WIP]' in your PR title, e.g., '[WIP][SPARK-XXXX] Your PR title ...'.\r\n  4. Be sure to keep the PR description updated to reflect all changes.\r\n  5. Please write your PR title to summarize what this PR proposes.\r\n  6. If possible, provide a concise example to reproduce the issue for a faster review.\r\n-->\r\n\r\n### What changes were proposed in this pull request?\r\n<!--\r\nPlease clarify what changes you are proposing. The purpose of this section is to outline the changes and how this PR fixes the issue. \r\nIf possible, please consider writing useful notes for better and faster reviews in your PR. See the examples below.\r\n  1. If you refactor some codes with changing classes, showing the class hierarchy will help reviewers.\r\n  2. If you fix some SQL features, you can provide some references of other DBMSes.\r\n  3. If there is design documentation, please add the link.\r\n  4. If there is a discussion in the mailing list, please add the link.\r\n-->\r\nThis is a followup of https://github.com/apache/spark/pull/26656.\r\n\r\nWe don't support window aggregate function with filter predicate yet and we should fail explicitly.\r\n\r\nObservable metrics has the same issue. This PR fixes it as well.\r\n\r\n### Why are the changes needed?\r\n<!--\r\nPlease clarify why the changes are needed. For instance,\r\n  1. If you propose a new API, clarify the use case for a new API.\r\n  2. If you fix a bug, you can clarify why it is a bug.\r\n-->\r\nIf we simply ignore filter predicate when we don't support it, the result is wrong.\r\n\r\n### Does this PR introduce any user-facing change?\r\n<!--\r\nIf yes, please clarify the previous behavior and the change this PR proposes - provide the console output, description and/or an example to show the behavior difference if possible.\r\nIf no, write 'No'.\r\n-->\r\nyea, fix the query result.\r\n\r\n### How was this patch tested?\r\n<!--\r\nIf tests were added, say they were added here. Please make sure to add some test cases that check the changes thoroughly including negative and positive cases if possible.\r\nIf it was tested in a way different from regular unit tests, please clarify how you tested step by step, ideally copy and paste-able, so that other reviewers can test and check, and descendants can verify in the future.\r\nIf tests were not added, please describe why they were not added and/or why it was difficult to add.\r\n-->\r\nnew tests",
        "created_at": "2020-02-06T11:32:59Z",
        "updated_at": "2020-02-06T15:43:59Z",
        "closed_at": null,
        "merged_at": null,
        "merge_commit_sha": "75d896d81a116299a03ea8e2be0ba47024886f68",
        "assignee": null,
        "assignees": [

        ],
        "requested_reviewers": [

        ],
        "requested_teams": [

        ],
        "labels": [

        ],
        "milestone": null,
        "commits_url": "https://api.github.com/repos/apache/spark/pulls/27476/commits",
        "review_comments_url": "https://api.github.com/repos/apache/spark/pulls/27476/comments",
        "review_comment_url": "https://api.github.com/repos/apache/spark/pulls/comments{/number}",
        "comments_url": "https://api.github.com/repos/apache/spark/issues/27476/comments",
        "statuses_url": "https://api.github.com/repos/apache/spark/statuses/e996e0340280c2c261da4e226cc169b4d17b7e46",
        "head": {
          "label": "cloud-fan:filter",
          "ref": "filter",
          "sha": "e996e0340280c2c261da4e226cc169b4d17b7e46",
          "user": {
            "login": "cloud-fan",
            "id": 3182036,
            "node_id": "MDQ6VXNlcjMxODIwMzY=",
            "avatar_url": "https://avatars3.githubusercontent.com/u/3182036?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/cloud-fan",
            "html_url": "https://github.com/cloud-fan",
            "followers_url": "https://api.github.com/users/cloud-fan/followers",
            "following_url": "https://api.github.com/users/cloud-fan/following{/other_user}",
            "gists_url": "https://api.github.com/users/cloud-fan/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/cloud-fan/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/cloud-fan/subscriptions",
            "organizations_url": "https://api.github.com/users/cloud-fan/orgs",
            "repos_url": "https://api.github.com/users/cloud-fan/repos",
            "events_url": "https://api.github.com/users/cloud-fan/events{/privacy}",
            "received_events_url": "https://api.github.com/users/cloud-fan/received_events",
            "type": "User",
            "site_admin": false
          },
          "repo": {
            "id": 19689699,
            "node_id": "MDEwOlJlcG9zaXRvcnkxOTY4OTY5OQ==",
            "name": "spark",
            "full_name": "cloud-fan/spark",
            "private": false,
            "owner": {
              "login": "cloud-fan",
              "id": 3182036,
              "node_id": "MDQ6VXNlcjMxODIwMzY=",
              "avatar_url": "https://avatars3.githubusercontent.com/u/3182036?v=4",
              "gravatar_id": "",
              "url": "https://api.github.com/users/cloud-fan",
              "html_url": "https://github.com/cloud-fan",
              "followers_url": "https://api.github.com/users/cloud-fan/followers",
              "following_url": "https://api.github.com/users/cloud-fan/following{/other_user}",
              "gists_url": "https://api.github.com/users/cloud-fan/gists{/gist_id}",
              "starred_url": "https://api.github.com/users/cloud-fan/starred{/owner}{/repo}",
              "subscriptions_url": "https://api.github.com/users/cloud-fan/subscriptions",
              "organizations_url": "https://api.github.com/users/cloud-fan/orgs",
              "repos_url": "https://api.github.com/users/cloud-fan/repos",
              "events_url": "https://api.github.com/users/cloud-fan/events{/privacy}",
              "received_events_url": "https://api.github.com/users/cloud-fan/received_events",
              "type": "User",
              "site_admin": false
            },
            "html_url": "https://github.com/cloud-fan/spark",
            "description": "Mirror of Apache Spark",
            "fork": true,
            "url": "https://api.github.com/repos/cloud-fan/spark",
            "forks_url": "https://api.github.com/repos/cloud-fan/spark/forks",
            "keys_url": "https://api.github.com/repos/cloud-fan/spark/keys{/key_id}",
            "collaborators_url": "https://api.github.com/repos/cloud-fan/spark/collaborators{/collaborator}",
            "teams_url": "https://api.github.com/repos/cloud-fan/spark/teams",
            "hooks_url": "https://api.github.com/repos/cloud-fan/spark/hooks",
            "issue_events_url": "https://api.github.com/repos/cloud-fan/spark/issues/events{/number}",
            "events_url": "https://api.github.com/repos/cloud-fan/spark/events",
            "assignees_url": "https://api.github.com/repos/cloud-fan/spark/assignees{/user}",
            "branches_url": "https://api.github.com/repos/cloud-fan/spark/branches{/branch}",
            "tags_url": "https://api.github.com/repos/cloud-fan/spark/tags",
            "blobs_url": "https://api.github.com/repos/cloud-fan/spark/git/blobs{/sha}",
            "git_tags_url": "https://api.github.com/repos/cloud-fan/spark/git/tags{/sha}",
            "git_refs_url": "https://api.github.com/repos/cloud-fan/spark/git/refs{/sha}",
            "trees_url": "https://api.github.com/repos/cloud-fan/spark/git/trees{/sha}",
            "statuses_url": "https://api.github.com/repos/cloud-fan/spark/statuses/{sha}",
            "languages_url": "https://api.github.com/repos/cloud-fan/spark/languages",
            "stargazers_url": "https://api.github.com/repos/cloud-fan/spark/stargazers",
            "contributors_url": "https://api.github.com/repos/cloud-fan/spark/contributors",
            "subscribers_url": "https://api.github.com/repos/cloud-fan/spark/subscribers",
            "subscription_url": "https://api.github.com/repos/cloud-fan/spark/subscription",
            "commits_url": "https://api.github.com/repos/cloud-fan/spark/commits{/sha}",
            "git_commits_url": "https://api.github.com/repos/cloud-fan/spark/git/commits{/sha}",
            "comments_url": "https://api.github.com/repos/cloud-fan/spark/comments{/number}",
            "issue_comment_url": "https://api.github.com/repos/cloud-fan/spark/issues/comments{/number}",
            "contents_url": "https://api.github.com/repos/cloud-fan/spark/contents/{+path}",
            "compare_url": "https://api.github.com/repos/cloud-fan/spark/compare/{base}...{head}",
            "merges_url": "https://api.github.com/repos/cloud-fan/spark/merges",
            "archive_url": "https://api.github.com/repos/cloud-fan/spark/{archive_format}{/ref}",
            "downloads_url": "https://api.github.com/repos/cloud-fan/spark/downloads",
            "issues_url": "https://api.github.com/repos/cloud-fan/spark/issues{/number}",
            "pulls_url": "https://api.github.com/repos/cloud-fan/spark/pulls{/number}",
            "milestones_url": "https://api.github.com/repos/cloud-fan/spark/milestones{/number}",
            "notifications_url": "https://api.github.com/repos/cloud-fan/spark/notifications{?since,all,participating}",
            "labels_url": "https://api.github.com/repos/cloud-fan/spark/labels{/name}",
            "releases_url": "https://api.github.com/repos/cloud-fan/spark/releases{/id}",
            "deployments_url": "https://api.github.com/repos/cloud-fan/spark/deployments",
            "created_at": "2014-05-12T07:32:26Z",
            "updated_at": "2017-06-22T06:57:26Z",
            "pushed_at": "2020-02-06T11:47:34Z",
            "git_url": "git://github.com/cloud-fan/spark.git",
            "ssh_url": "git@github.com:cloud-fan/spark.git",
            "clone_url": "https://github.com/cloud-fan/spark.git",
            "svn_url": "https://github.com/cloud-fan/spark",
            "homepage": null,
            "size": 312940,
            "stargazers_count": 1,
            "watchers_count": 1,
            "language": "Scala",
            "has_issues": false,
            "has_projects": true,
            "has_downloads": true,
            "has_wiki": false,
            "has_pages": false,
            "forks_count": 1,
            "mirror_url": null,
            "archived": false,
            "disabled": false,
            "open_issues_count": 1,
            "license": {
              "key": "apache-2.0",
              "name": "Apache License 2.0",
              "spdx_id": "Apache-2.0",
              "url": "https://api.github.com/licenses/apache-2.0",
              "node_id": "MDc6TGljZW5zZTI="
            },
            "forks": 1,
            "open_issues": 1,
            "watchers": 1,
            "default_branch": "master"
          }
        },
        "base": {
          "label": "apache:master",
          "ref": "master",
          "sha": "c8ef1dee90e939e004a024cf98b7ea7e1eaa9ffe",
          "user": {
            "login": "apache",
            "id": 47359,
            "node_id": "MDEyOk9yZ2FuaXphdGlvbjQ3MzU5",
            "avatar_url": "https://avatars0.githubusercontent.com/u/47359?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/apache",
            "html_url": "https://github.com/apache",
            "followers_url": "https://api.github.com/users/apache/followers",
            "following_url": "https://api.github.com/users/apache/following{/other_user}",
            "gists_url": "https://api.github.com/users/apache/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/apache/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/apache/subscriptions",
            "organizations_url": "https://api.github.com/users/apache/orgs",
            "repos_url": "https://api.github.com/users/apache/repos",
            "events_url": "https://api.github.com/users/apache/events{/privacy}",
            "received_events_url": "https://api.github.com/users/apache/received_events",
            "type": "Organization",
            "site_admin": false
          },
          "repo": {
            "id": 17165658,
            "node_id": "MDEwOlJlcG9zaXRvcnkxNzE2NTY1OA==",
            "name": "spark",
            "full_name": "apache/spark",
            "private": false,
            "owner": {
              "login": "apache",
              "id": 47359,
              "node_id": "MDEyOk9yZ2FuaXphdGlvbjQ3MzU5",
              "avatar_url": "https://avatars0.githubusercontent.com/u/47359?v=4",
              "gravatar_id": "",
              "url": "https://api.github.com/users/apache",
              "html_url": "https://github.com/apache",
              "followers_url": "https://api.github.com/users/apache/followers",
              "following_url": "https://api.github.com/users/apache/following{/other_user}",
              "gists_url": "https://api.github.com/users/apache/gists{/gist_id}",
              "starred_url": "https://api.github.com/users/apache/starred{/owner}{/repo}",
              "subscriptions_url": "https://api.github.com/users/apache/subscriptions",
              "organizations_url": "https://api.github.com/users/apache/orgs",
              "repos_url": "https://api.github.com/users/apache/repos",
              "events_url": "https://api.github.com/users/apache/events{/privacy}",
              "received_events_url": "https://api.github.com/users/apache/received_events",
              "type": "Organization",
              "site_admin": false
            },
            "html_url": "https://github.com/apache/spark",
            "description": "Apache Spark",
            "fork": false,
            "url": "https://api.github.com/repos/apache/spark",
            "forks_url": "https://api.github.com/repos/apache/spark/forks",
            "keys_url": "https://api.github.com/repos/apache/spark/keys{/key_id}",
            "collaborators_url": "https://api.github.com/repos/apache/spark/collaborators{/collaborator}",
            "teams_url": "https://api.github.com/repos/apache/spark/teams",
            "hooks_url": "https://api.github.com/repos/apache/spark/hooks",
            "issue_events_url": "https://api.github.com/repos/apache/spark/issues/events{/number}",
            "events_url": "https://api.github.com/repos/apache/spark/events",
            "assignees_url": "https://api.github.com/repos/apache/spark/assignees{/user}",
            "branches_url": "https://api.github.com/repos/apache/spark/branches{/branch}",
            "tags_url": "https://api.github.com/repos/apache/spark/tags",
            "blobs_url": "https://api.github.com/repos/apache/spark/git/blobs{/sha}",
            "git_tags_url": "https://api.github.com/repos/apache/spark/git/tags{/sha}",
            "git_refs_url": "https://api.github.com/repos/apache/spark/git/refs{/sha}",
            "trees_url": "https://api.github.com/repos/apache/spark/git/trees{/sha}",
            "statuses_url": "https://api.github.com/repos/apache/spark/statuses/{sha}",
            "languages_url": "https://api.github.com/repos/apache/spark/languages",
            "stargazers_url": "https://api.github.com/repos/apache/spark/stargazers",
            "contributors_url": "https://api.github.com/repos/apache/spark/contributors",
            "subscribers_url": "https://api.github.com/repos/apache/spark/subscribers",
            "subscription_url": "https://api.github.com/repos/apache/spark/subscription",
            "commits_url": "https://api.github.com/repos/apache/spark/commits{/sha}",
            "git_commits_url": "https://api.github.com/repos/apache/spark/git/commits{/sha}",
            "comments_url": "https://api.github.com/repos/apache/spark/comments{/number}",
            "issue_comment_url": "https://api.github.com/repos/apache/spark/issues/comments{/number}",
            "contents_url": "https://api.github.com/repos/apache/spark/contents/{+path}",
            "compare_url": "https://api.github.com/repos/apache/spark/compare/{base}...{head}",
            "merges_url": "https://api.github.com/repos/apache/spark/merges",
            "archive_url": "https://api.github.com/repos/apache/spark/{archive_format}{/ref}",
            "downloads_url": "https://api.github.com/repos/apache/spark/downloads",
            "issues_url": "https://api.github.com/repos/apache/spark/issues{/number}",
            "pulls_url": "https://api.github.com/repos/apache/spark/pulls{/number}",
            "milestones_url": "https://api.github.com/repos/apache/spark/milestones{/number}",
            "notifications_url": "https://api.github.com/repos/apache/spark/notifications{?since,all,participating}",
            "labels_url": "https://api.github.com/repos/apache/spark/labels{/name}",
            "releases_url": "https://api.github.com/repos/apache/spark/releases{/id}",
            "deployments_url": "https://api.github.com/repos/apache/spark/deployments",
            "created_at": "2014-02-25T08:00:08Z",
            "updated_at": "2020-02-06T12:54:19Z",
            "pushed_at": "2020-02-06T15:43:10Z",
            "git_url": "git://github.com/apache/spark.git",
            "ssh_url": "git@github.com:apache/spark.git",
            "clone_url": "https://github.com/apache/spark.git",
            "svn_url": "https://github.com/apache/spark",
            "homepage": "",
            "size": 320147,
            "stargazers_count": 25062,
            "watchers_count": 25062,
            "language": "Scala",
            "has_issues": false,
            "has_projects": true,
            "has_downloads": true,
            "has_wiki": false,
            "has_pages": false,
            "forks_count": 21084,
            "mirror_url": null,
            "archived": false,
            "disabled": false,
            "open_issues_count": 277,
            "license": {
              "key": "apache-2.0",
              "name": "Apache License 2.0",
              "spdx_id": "Apache-2.0",
              "url": "https://api.github.com/licenses/apache-2.0",
              "node_id": "MDc6TGljZW5zZTI="
            },
            "forks": 21084,
            "open_issues": 277,
            "watchers": 25062,
            "default_branch": "master"
          }
        },
        "_links": {
          "self": {
            "href": "https://api.github.com/repos/apache/spark/pulls/27476"
          },
          "html": {
            "href": "https://github.com/apache/spark/pull/27476"
          },
          "issue": {
            "href": "https://api.github.com/repos/apache/spark/issues/27476"
          },
          "comments": {
            "href": "https://api.github.com/repos/apache/spark/issues/27476/comments"
          },
          "review_comments": {
            "href": "https://api.github.com/repos/apache/spark/pulls/27476/comments"
          },
          "review_comment": {
            "href": "https://api.github.com/repos/apache/spark/pulls/comments{/number}"
          },
          "commits": {
            "href": "https://api.github.com/repos/apache/spark/pulls/27476/commits"
          },
          "statuses": {
            "href": "https://api.github.com/repos/apache/spark/statuses/e996e0340280c2c261da4e226cc169b4d17b7e46"
          }
        },
        "author_association": "CONTRIBUTOR"
      }
    },
    "public": true,
    "created_at": "2020-02-06T15:43:59Z",
    "org": {
      "id": 47359,
      "login": "apache",
      "gravatar_id": "",
      "url": "https://api.github.com/orgs/apache",
      "avatar_url": "https://avatars.githubusercontent.com/u/47359?"
    }
  },
  {
    "id": "11453637562",
    "type": "IssueCommentEvent",
    "actor": {
      "id": 4833765,
      "login": "xuanyuanking",
      "display_login": "xuanyuanking",
      "gravatar_id": "",
      "url": "https://api.github.com/users/xuanyuanking",
      "avatar_url": "https://avatars.githubusercontent.com/u/4833765?"
    },
    "repo": {
      "id": 17165658,
      "name": "apache/spark",
      "url": "https://api.github.com/repos/apache/spark"
    },
    "payload": {
      "action": "created",
      "issue": {
        "url": "https://api.github.com/repos/apache/spark/issues/27479",
        "repository_url": "https://api.github.com/repos/apache/spark",
        "labels_url": "https://api.github.com/repos/apache/spark/issues/27479/labels{/name}",
        "comments_url": "https://api.github.com/repos/apache/spark/issues/27479/comments",
        "events_url": "https://api.github.com/repos/apache/spark/issues/27479/events",
        "html_url": "https://github.com/apache/spark/pull/27479",
        "id": 561096462,
        "node_id": "MDExOlB1bGxSZXF1ZXN0MzcxOTY4OTI4",
        "number": 27479,
        "title": "[MINOR][DOC] Fix document UI left menu broken",
        "user": {
          "login": "xuanyuanking",
          "id": 4833765,
          "node_id": "MDQ6VXNlcjQ4MzM3NjU=",
          "avatar_url": "https://avatars0.githubusercontent.com/u/4833765?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/xuanyuanking",
          "html_url": "https://github.com/xuanyuanking",
          "followers_url": "https://api.github.com/users/xuanyuanking/followers",
          "following_url": "https://api.github.com/users/xuanyuanking/following{/other_user}",
          "gists_url": "https://api.github.com/users/xuanyuanking/gists{/gist_id}",
          "starred_url": "https://api.github.com/users/xuanyuanking/starred{/owner}{/repo}",
          "subscriptions_url": "https://api.github.com/users/xuanyuanking/subscriptions",
          "organizations_url": "https://api.github.com/users/xuanyuanking/orgs",
          "repos_url": "https://api.github.com/users/xuanyuanking/repos",
          "events_url": "https://api.github.com/users/xuanyuanking/events{/privacy}",
          "received_events_url": "https://api.github.com/users/xuanyuanking/received_events",
          "type": "User",
          "site_admin": false
        },
        "labels": [

        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [

        ],
        "milestone": null,
        "comments": 1,
        "created_at": "2020-02-06T15:43:09Z",
        "updated_at": "2020-02-06T15:43:55Z",
        "closed_at": null,
        "author_association": "CONTRIBUTOR",
        "pull_request": {
          "url": "https://api.github.com/repos/apache/spark/pulls/27479",
          "html_url": "https://github.com/apache/spark/pull/27479",
          "diff_url": "https://github.com/apache/spark/pull/27479.diff",
          "patch_url": "https://github.com/apache/spark/pull/27479.patch"
        },
        "body": "### What changes were proposed in this pull request?\r\nFix the left menu broken introduced during #25459.\r\n\r\n\r\n### Why are the changes needed?\r\nThe `left-menu-wrapper` CSS reused for both ml-guide and sql-programming-guide, the before changes will break the UI.\r\n\r\nBefore:\r\n![image](https://user-images.githubusercontent.com/4833765/73952563-1061d800-493a-11ea-8a75-d802a1534a44.png)\r\n![image](https://user-images.githubusercontent.com/4833765/73952584-18217c80-493a-11ea-85a3-ce5f9875545f.png)\r\n![image](https://user-images.githubusercontent.com/4833765/73952605-21124e00-493a-11ea-8d79-24f4dfec73d9.png)\r\n\r\n\r\nAfter:\r\n![image](https://user-images.githubusercontent.com/4833765/73952630-2a031f80-493a-11ea-80ff-4630801cfaf4.png)\r\n![image](https://user-images.githubusercontent.com/4833765/73952652-30919700-493a-11ea-9db1-8bb4a3f913b4.png)\r\n![image](https://user-images.githubusercontent.com/4833765/73952671-35eee180-493a-11ea-801b-d50c4397adf2.png)\r\n\r\n### Does this PR introduce any user-facing change?\r\nDocument UI change only.\r\n\r\n\r\n### How was this patch tested?\r\nLocal test, screenshot attached below.\r\n"
      },
      "comment": {
        "url": "https://api.github.com/repos/apache/spark/issues/comments/582966383",
        "html_url": "https://github.com/apache/spark/pull/27479#issuecomment-582966383",
        "issue_url": "https://api.github.com/repos/apache/spark/issues/27479",
        "id": 582966383,
        "node_id": "MDEyOklzc3VlQ29tbWVudDU4Mjk2NjM4Mw==",
        "user": {
          "login": "xuanyuanking",
          "id": 4833765,
          "node_id": "MDQ6VXNlcjQ4MzM3NjU=",
          "avatar_url": "https://avatars0.githubusercontent.com/u/4833765?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/xuanyuanking",
          "html_url": "https://github.com/xuanyuanking",
          "followers_url": "https://api.github.com/users/xuanyuanking/followers",
          "following_url": "https://api.github.com/users/xuanyuanking/following{/other_user}",
          "gists_url": "https://api.github.com/users/xuanyuanking/gists{/gist_id}",
          "starred_url": "https://api.github.com/users/xuanyuanking/starred{/owner}{/repo}",
          "subscriptions_url": "https://api.github.com/users/xuanyuanking/subscriptions",
          "organizations_url": "https://api.github.com/users/xuanyuanking/orgs",
          "repos_url": "https://api.github.com/users/xuanyuanking/repos",
          "events_url": "https://api.github.com/users/xuanyuanking/events{/privacy}",
          "received_events_url": "https://api.github.com/users/xuanyuanking/received_events",
          "type": "User",
          "site_admin": false
        },
        "created_at": "2020-02-06T15:43:55Z",
        "updated_at": "2020-02-06T15:43:55Z",
        "author_association": "CONTRIBUTOR",
        "body": "cc @dilipbiswal @cloud-fan"
      }
    },
    "public": true,
    "created_at": "2020-02-06T15:43:55Z",
    "org": {
      "id": 47359,
      "login": "apache",
      "gravatar_id": "",
      "url": "https://api.github.com/orgs/apache",
      "avatar_url": "https://avatars.githubusercontent.com/u/47359?"
    }
  },
  {
    "id": "11453610598",
    "type": "IssueCommentEvent",
    "actor": {
      "id": 4031291,
      "login": "AmplabJenkins",
      "display_login": "AmplabJenkins",
      "gravatar_id": "",
      "url": "https://api.github.com/users/AmplabJenkins",
      "avatar_url": "https://avatars.githubusercontent.com/u/4031291?"
    },
    "repo": {
      "id": 17165658,
      "name": "apache/spark",
      "url": "https://api.github.com/repos/apache/spark"
    },
    "payload": {
      "action": "created",
      "issue": {
        "url": "https://api.github.com/repos/apache/spark/issues/27474",
        "repository_url": "https://api.github.com/repos/apache/spark",
        "labels_url": "https://api.github.com/repos/apache/spark/issues/27474/labels{/name}",
        "comments_url": "https://api.github.com/repos/apache/spark/issues/27474/comments",
        "events_url": "https://api.github.com/repos/apache/spark/issues/27474/events",
        "html_url": "https://github.com/apache/spark/pull/27474",
        "id": 560856368,
        "node_id": "MDExOlB1bGxSZXF1ZXN0MzcxNzcxMzU4",
        "number": 27474,
        "title": "[WIP] Port `DateTimeUtils.convertTz()` on Java 8 time API",
        "user": {
          "login": "MaxGekk",
          "id": 1580697,
          "node_id": "MDQ6VXNlcjE1ODA2OTc=",
          "avatar_url": "https://avatars1.githubusercontent.com/u/1580697?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/MaxGekk",
          "html_url": "https://github.com/MaxGekk",
          "followers_url": "https://api.github.com/users/MaxGekk/followers",
          "following_url": "https://api.github.com/users/MaxGekk/following{/other_user}",
          "gists_url": "https://api.github.com/users/MaxGekk/gists{/gist_id}",
          "starred_url": "https://api.github.com/users/MaxGekk/starred{/owner}{/repo}",
          "subscriptions_url": "https://api.github.com/users/MaxGekk/subscriptions",
          "organizations_url": "https://api.github.com/users/MaxGekk/orgs",
          "repos_url": "https://api.github.com/users/MaxGekk/repos",
          "events_url": "https://api.github.com/users/MaxGekk/events{/privacy}",
          "received_events_url": "https://api.github.com/users/MaxGekk/received_events",
          "type": "User",
          "site_admin": false
        },
        "labels": [

        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [

        ],
        "milestone": null,
        "comments": 5,
        "created_at": "2020-02-06T08:35:43Z",
        "updated_at": "2020-02-06T15:41:16Z",
        "closed_at": null,
        "author_association": "CONTRIBUTOR",
        "pull_request": {
          "url": "https://api.github.com/repos/apache/spark/pulls/27474",
          "html_url": "https://github.com/apache/spark/pull/27474",
          "diff_url": "https://github.com/apache/spark/pull/27474.diff",
          "patch_url": "https://github.com/apache/spark/pull/27474.patch"
        },
        "body": "### What changes were proposed in this pull request?\r\n- Rewrite the `convertTz` method of `DateTimeUtils` using Java 8 time API\r\n- Change types of `convertTz` parameters from `TimeZone` to `ZoneId`. This allow to avoid unnecessary conversions `TimeZone` -> `ZoneId`\r\n\r\n\r\n### Why are the changes needed?\r\n- Simplifies the code, and make it more maintainable\r\n- Switches `convertTz` on Proleptic Gregorian calendar used by Java 8 time classes by default. That makes the function consistent to other date-time functions. \r\n\r\n### Does this PR introduce any user-facing change?\r\nNo\r\n\r\n### How was this patch tested?\r\nBy existing test suite `DateTimeUtilsSuite`, `DateFunctionsSuite` and `DateExpressionsSuite`."
      },
      "comment": {
        "url": "https://api.github.com/repos/apache/spark/issues/comments/582965060",
        "html_url": "https://github.com/apache/spark/pull/27474#issuecomment-582965060",
        "issue_url": "https://api.github.com/repos/apache/spark/issues/27474",
        "id": 582965060,
        "node_id": "MDEyOklzc3VlQ29tbWVudDU4Mjk2NTA2MA==",
        "user": {
          "login": "AmplabJenkins",
          "id": 4031291,
          "node_id": "MDQ6VXNlcjQwMzEyOTE=",
          "avatar_url": "https://avatars3.githubusercontent.com/u/4031291?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/AmplabJenkins",
          "html_url": "https://github.com/AmplabJenkins",
          "followers_url": "https://api.github.com/users/AmplabJenkins/followers",
          "following_url": "https://api.github.com/users/AmplabJenkins/following{/other_user}",
          "gists_url": "https://api.github.com/users/AmplabJenkins/gists{/gist_id}",
          "starred_url": "https://api.github.com/users/AmplabJenkins/starred{/owner}{/repo}",
          "subscriptions_url": "https://api.github.com/users/AmplabJenkins/subscriptions",
          "organizations_url": "https://api.github.com/users/AmplabJenkins/orgs",
          "repos_url": "https://api.github.com/users/AmplabJenkins/repos",
          "events_url": "https://api.github.com/users/AmplabJenkins/events{/privacy}",
          "received_events_url": "https://api.github.com/users/AmplabJenkins/received_events",
          "type": "User",
          "site_admin": false
        },
        "created_at": "2020-02-06T15:41:15Z",
        "updated_at": "2020-02-06T15:41:15Z",
        "author_association": "NONE",
        "body": "Test PASSed.\nRefer to this link for build results (access rights to CI server needed): \nhttps://amplab.cs.berkeley.edu/jenkins//job/SparkPullRequestBuilder/117989/\nTest PASSed."
      }
    },
    "public": true,
    "created_at": "2020-02-06T15:41:16Z",
    "org": {
      "id": 47359,
      "login": "apache",
      "gravatar_id": "",
      "url": "https://api.github.com/orgs/apache",
      "avatar_url": "https://avatars.githubusercontent.com/u/47359?"
    }
  },
  {
    "id": "11453630126",
    "type": "PullRequestEvent",
    "actor": {
      "id": 4833765,
      "login": "xuanyuanking",
      "display_login": "xuanyuanking",
      "gravatar_id": "",
      "url": "https://api.github.com/users/xuanyuanking",
      "avatar_url": "https://avatars.githubusercontent.com/u/4833765?"
    },
    "repo": {
      "id": 17165658,
      "name": "apache/spark",
      "url": "https://api.github.com/repos/apache/spark"
    },
    "payload": {
      "action": "opened",
      "number": 27479,
      "pull_request": {
        "url": "https://api.github.com/repos/apache/spark/pulls/27479",
        "id": 371968928,
        "node_id": "MDExOlB1bGxSZXF1ZXN0MzcxOTY4OTI4",
        "html_url": "https://github.com/apache/spark/pull/27479",
        "diff_url": "https://github.com/apache/spark/pull/27479.diff",
        "patch_url": "https://github.com/apache/spark/pull/27479.patch",
        "issue_url": "https://api.github.com/repos/apache/spark/issues/27479",
        "number": 27479,
        "state": "open",
        "locked": false,
        "title": "[MINOR][DOC] Fix document UI left menu broken",
        "user": {
          "login": "xuanyuanking",
          "id": 4833765,
          "node_id": "MDQ6VXNlcjQ4MzM3NjU=",
          "avatar_url": "https://avatars0.githubusercontent.com/u/4833765?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/xuanyuanking",
          "html_url": "https://github.com/xuanyuanking",
          "followers_url": "https://api.github.com/users/xuanyuanking/followers",
          "following_url": "https://api.github.com/users/xuanyuanking/following{/other_user}",
          "gists_url": "https://api.github.com/users/xuanyuanking/gists{/gist_id}",
          "starred_url": "https://api.github.com/users/xuanyuanking/starred{/owner}{/repo}",
          "subscriptions_url": "https://api.github.com/users/xuanyuanking/subscriptions",
          "organizations_url": "https://api.github.com/users/xuanyuanking/orgs",
          "repos_url": "https://api.github.com/users/xuanyuanking/repos",
          "events_url": "https://api.github.com/users/xuanyuanking/events{/privacy}",
          "received_events_url": "https://api.github.com/users/xuanyuanking/received_events",
          "type": "User",
          "site_admin": false
        },
        "body": "### What changes were proposed in this pull request?\r\nFix the left menu broken introduced during #25459.\r\n\r\n\r\n### Why are the changes needed?\r\nThe `left-menu-wrapper` CSS reused for both ml-guide and sql-programming-guide, the before changes will break the UI.\r\n\r\nBefore:\r\n![image](https://user-images.githubusercontent.com/4833765/73952563-1061d800-493a-11ea-8a75-d802a1534a44.png)\r\n![image](https://user-images.githubusercontent.com/4833765/73952584-18217c80-493a-11ea-85a3-ce5f9875545f.png)\r\n![image](https://user-images.githubusercontent.com/4833765/73952605-21124e00-493a-11ea-8d79-24f4dfec73d9.png)\r\n\r\n\r\nAfter:\r\n![image](https://user-images.githubusercontent.com/4833765/73952630-2a031f80-493a-11ea-80ff-4630801cfaf4.png)\r\n![image](https://user-images.githubusercontent.com/4833765/73952652-30919700-493a-11ea-9db1-8bb4a3f913b4.png)\r\n![image](https://user-images.githubusercontent.com/4833765/73952671-35eee180-493a-11ea-801b-d50c4397adf2.png)\r\n\r\n### Does this PR introduce any user-facing change?\r\nDocument UI change only.\r\n\r\n\r\n### How was this patch tested?\r\nLocal test, screenshot attached below.\r\n",
        "created_at": "2020-02-06T15:43:09Z",
        "updated_at": "2020-02-06T15:43:09Z",
        "closed_at": null,
        "merged_at": null,
        "merge_commit_sha": null,
        "assignee": null,
        "assignees": [

        ],
        "requested_reviewers": [

        ],
        "requested_teams": [

        ],
        "labels": [

        ],
        "milestone": null,
        "commits_url": "https://api.github.com/repos/apache/spark/pulls/27479/commits",
        "review_comments_url": "https://api.github.com/repos/apache/spark/pulls/27479/comments",
        "review_comment_url": "https://api.github.com/repos/apache/spark/pulls/comments{/number}",
        "comments_url": "https://api.github.com/repos/apache/spark/issues/27479/comments",
        "statuses_url": "https://api.github.com/repos/apache/spark/statuses/e79e5db05e3404ec323525f2fb9248c11cdc12ea",
        "head": {
          "label": "xuanyuanking:doc-ui",
          "ref": "doc-ui",
          "sha": "e79e5db05e3404ec323525f2fb9248c11cdc12ea",
          "user": {
            "login": "xuanyuanking",
            "id": 4833765,
            "node_id": "MDQ6VXNlcjQ4MzM3NjU=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/4833765?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/xuanyuanking",
            "html_url": "https://github.com/xuanyuanking",
            "followers_url": "https://api.github.com/users/xuanyuanking/followers",
            "following_url": "https://api.github.com/users/xuanyuanking/following{/other_user}",
            "gists_url": "https://api.github.com/users/xuanyuanking/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/xuanyuanking/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/xuanyuanking/subscriptions",
            "organizations_url": "https://api.github.com/users/xuanyuanking/orgs",
            "repos_url": "https://api.github.com/users/xuanyuanking/repos",
            "events_url": "https://api.github.com/users/xuanyuanking/events{/privacy}",
            "received_events_url": "https://api.github.com/users/xuanyuanking/received_events",
            "type": "User",
            "site_admin": false
          },
          "repo": {
            "id": 52511431,
            "node_id": "MDEwOlJlcG9zaXRvcnk1MjUxMTQzMQ==",
            "name": "spark",
            "full_name": "xuanyuanking/spark",
            "private": false,
            "owner": {
              "login": "xuanyuanking",
              "id": 4833765,
              "node_id": "MDQ6VXNlcjQ4MzM3NjU=",
              "avatar_url": "https://avatars0.githubusercontent.com/u/4833765?v=4",
              "gravatar_id": "",
              "url": "https://api.github.com/users/xuanyuanking",
              "html_url": "https://github.com/xuanyuanking",
              "followers_url": "https://api.github.com/users/xuanyuanking/followers",
              "following_url": "https://api.github.com/users/xuanyuanking/following{/other_user}",
              "gists_url": "https://api.github.com/users/xuanyuanking/gists{/gist_id}",
              "starred_url": "https://api.github.com/users/xuanyuanking/starred{/owner}{/repo}",
              "subscriptions_url": "https://api.github.com/users/xuanyuanking/subscriptions",
              "organizations_url": "https://api.github.com/users/xuanyuanking/orgs",
              "repos_url": "https://api.github.com/users/xuanyuanking/repos",
              "events_url": "https://api.github.com/users/xuanyuanking/events{/privacy}",
              "received_events_url": "https://api.github.com/users/xuanyuanking/received_events",
              "type": "User",
              "site_admin": false
            },
            "html_url": "https://github.com/xuanyuanking/spark",
            "description": "Mirror of Apache Spark",
            "fork": true,
            "url": "https://api.github.com/repos/xuanyuanking/spark",
            "forks_url": "https://api.github.com/repos/xuanyuanking/spark/forks",
            "keys_url": "https://api.github.com/repos/xuanyuanking/spark/keys{/key_id}",
            "collaborators_url": "https://api.github.com/repos/xuanyuanking/spark/collaborators{/collaborator}",
            "teams_url": "https://api.github.com/repos/xuanyuanking/spark/teams",
            "hooks_url": "https://api.github.com/repos/xuanyuanking/spark/hooks",
            "issue_events_url": "https://api.github.com/repos/xuanyuanking/spark/issues/events{/number}",
            "events_url": "https://api.github.com/repos/xuanyuanking/spark/events",
            "assignees_url": "https://api.github.com/repos/xuanyuanking/spark/assignees{/user}",
            "branches_url": "https://api.github.com/repos/xuanyuanking/spark/branches{/branch}",
            "tags_url": "https://api.github.com/repos/xuanyuanking/spark/tags",
            "blobs_url": "https://api.github.com/repos/xuanyuanking/spark/git/blobs{/sha}",
            "git_tags_url": "https://api.github.com/repos/xuanyuanking/spark/git/tags{/sha}",
            "git_refs_url": "https://api.github.com/repos/xuanyuanking/spark/git/refs{/sha}",
            "trees_url": "https://api.github.com/repos/xuanyuanking/spark/git/trees{/sha}",
            "statuses_url": "https://api.github.com/repos/xuanyuanking/spark/statuses/{sha}",
            "languages_url": "https://api.github.com/repos/xuanyuanking/spark/languages",
            "stargazers_url": "https://api.github.com/repos/xuanyuanking/spark/stargazers",
            "contributors_url": "https://api.github.com/repos/xuanyuanking/spark/contributors",
            "subscribers_url": "https://api.github.com/repos/xuanyuanking/spark/subscribers",
            "subscription_url": "https://api.github.com/repos/xuanyuanking/spark/subscription",
            "commits_url": "https://api.github.com/repos/xuanyuanking/spark/commits{/sha}",
            "git_commits_url": "https://api.github.com/repos/xuanyuanking/spark/git/commits{/sha}",
            "comments_url": "https://api.github.com/repos/xuanyuanking/spark/comments{/number}",
            "issue_comment_url": "https://api.github.com/repos/xuanyuanking/spark/issues/comments{/number}",
            "contents_url": "https://api.github.com/repos/xuanyuanking/spark/contents/{+path}",
            "compare_url": "https://api.github.com/repos/xuanyuanking/spark/compare/{base}...{head}",
            "merges_url": "https://api.github.com/repos/xuanyuanking/spark/merges",
            "archive_url": "https://api.github.com/repos/xuanyuanking/spark/{archive_format}{/ref}",
            "downloads_url": "https://api.github.com/repos/xuanyuanking/spark/downloads",
            "issues_url": "https://api.github.com/repos/xuanyuanking/spark/issues{/number}",
            "pulls_url": "https://api.github.com/repos/xuanyuanking/spark/pulls{/number}",
            "milestones_url": "https://api.github.com/repos/xuanyuanking/spark/milestones{/number}",
            "notifications_url": "https://api.github.com/repos/xuanyuanking/spark/notifications{?since,all,participating}",
            "labels_url": "https://api.github.com/repos/xuanyuanking/spark/labels{/name}",
            "releases_url": "https://api.github.com/repos/xuanyuanking/spark/releases{/id}",
            "deployments_url": "https://api.github.com/repos/xuanyuanking/spark/deployments",
            "created_at": "2016-02-25T09:08:00Z",
            "updated_at": "2020-02-06T13:57:32Z",
            "pushed_at": "2020-02-06T15:35:06Z",
            "git_url": "git://github.com/xuanyuanking/spark.git",
            "ssh_url": "git@github.com:xuanyuanking/spark.git",
            "clone_url": "https://github.com/xuanyuanking/spark.git",
            "svn_url": "https://github.com/xuanyuanking/spark",
            "homepage": null,
            "size": 311329,
            "stargazers_count": 0,
            "watchers_count": 0,
            "language": "Scala",
            "has_issues": false,
            "has_projects": true,
            "has_downloads": true,
            "has_wiki": false,
            "has_pages": false,
            "forks_count": 0,
            "mirror_url": null,
            "archived": false,
            "disabled": false,
            "open_issues_count": 0,
            "license": {
              "key": "apache-2.0",
              "name": "Apache License 2.0",
              "spdx_id": "Apache-2.0",
              "url": "https://api.github.com/licenses/apache-2.0",
              "node_id": "MDc6TGljZW5zZTI="
            },
            "forks": 0,
            "open_issues": 0,
            "watchers": 0,
            "default_branch": "master"
          }
        },
        "base": {
          "label": "apache:master",
          "ref": "master",
          "sha": "d8613571bc1847775dd5c1945757279234cb388c",
          "user": {
            "login": "apache",
            "id": 47359,
            "node_id": "MDEyOk9yZ2FuaXphdGlvbjQ3MzU5",
            "avatar_url": "https://avatars0.githubusercontent.com/u/47359?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/apache",
            "html_url": "https://github.com/apache",
            "followers_url": "https://api.github.com/users/apache/followers",
            "following_url": "https://api.github.com/users/apache/following{/other_user}",
            "gists_url": "https://api.github.com/users/apache/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/apache/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/apache/subscriptions",
            "organizations_url": "https://api.github.com/users/apache/orgs",
            "repos_url": "https://api.github.com/users/apache/repos",
            "events_url": "https://api.github.com/users/apache/events{/privacy}",
            "received_events_url": "https://api.github.com/users/apache/received_events",
            "type": "Organization",
            "site_admin": false
          },
          "repo": {
            "id": 17165658,
            "node_id": "MDEwOlJlcG9zaXRvcnkxNzE2NTY1OA==",
            "name": "spark",
            "full_name": "apache/spark",
            "private": false,
            "owner": {
              "login": "apache",
              "id": 47359,
              "node_id": "MDEyOk9yZ2FuaXphdGlvbjQ3MzU5",
              "avatar_url": "https://avatars0.githubusercontent.com/u/47359?v=4",
              "gravatar_id": "",
              "url": "https://api.github.com/users/apache",
              "html_url": "https://github.com/apache",
              "followers_url": "https://api.github.com/users/apache/followers",
              "following_url": "https://api.github.com/users/apache/following{/other_user}",
              "gists_url": "https://api.github.com/users/apache/gists{/gist_id}",
              "starred_url": "https://api.github.com/users/apache/starred{/owner}{/repo}",
              "subscriptions_url": "https://api.github.com/users/apache/subscriptions",
              "organizations_url": "https://api.github.com/users/apache/orgs",
              "repos_url": "https://api.github.com/users/apache/repos",
              "events_url": "https://api.github.com/users/apache/events{/privacy}",
              "received_events_url": "https://api.github.com/users/apache/received_events",
              "type": "Organization",
              "site_admin": false
            },
            "html_url": "https://github.com/apache/spark",
            "description": "Apache Spark",
            "fork": false,
            "url": "https://api.github.com/repos/apache/spark",
            "forks_url": "https://api.github.com/repos/apache/spark/forks",
            "keys_url": "https://api.github.com/repos/apache/spark/keys{/key_id}",
            "collaborators_url": "https://api.github.com/repos/apache/spark/collaborators{/collaborator}",
            "teams_url": "https://api.github.com/repos/apache/spark/teams",
            "hooks_url": "https://api.github.com/repos/apache/spark/hooks",
            "issue_events_url": "https://api.github.com/repos/apache/spark/issues/events{/number}",
            "events_url": "https://api.github.com/repos/apache/spark/events",
            "assignees_url": "https://api.github.com/repos/apache/spark/assignees{/user}",
            "branches_url": "https://api.github.com/repos/apache/spark/branches{/branch}",
            "tags_url": "https://api.github.com/repos/apache/spark/tags",
            "blobs_url": "https://api.github.com/repos/apache/spark/git/blobs{/sha}",
            "git_tags_url": "https://api.github.com/repos/apache/spark/git/tags{/sha}",
            "git_refs_url": "https://api.github.com/repos/apache/spark/git/refs{/sha}",
            "trees_url": "https://api.github.com/repos/apache/spark/git/trees{/sha}",
            "statuses_url": "https://api.github.com/repos/apache/spark/statuses/{sha}",
            "languages_url": "https://api.github.com/repos/apache/spark/languages",
            "stargazers_url": "https://api.github.com/repos/apache/spark/stargazers",
            "contributors_url": "https://api.github.com/repos/apache/spark/contributors",
            "subscribers_url": "https://api.github.com/repos/apache/spark/subscribers",
            "subscription_url": "https://api.github.com/repos/apache/spark/subscription",
            "commits_url": "https://api.github.com/repos/apache/spark/commits{/sha}",
            "git_commits_url": "https://api.github.com/repos/apache/spark/git/commits{/sha}",
            "comments_url": "https://api.github.com/repos/apache/spark/comments{/number}",
            "issue_comment_url": "https://api.github.com/repos/apache/spark/issues/comments{/number}",
            "contents_url": "https://api.github.com/repos/apache/spark/contents/{+path}",
            "compare_url": "https://api.github.com/repos/apache/spark/compare/{base}...{head}",
            "merges_url": "https://api.github.com/repos/apache/spark/merges",
            "archive_url": "https://api.github.com/repos/apache/spark/{archive_format}{/ref}",
            "downloads_url": "https://api.github.com/repos/apache/spark/downloads",
            "issues_url": "https://api.github.com/repos/apache/spark/issues{/number}",
            "pulls_url": "https://api.github.com/repos/apache/spark/pulls{/number}",
            "milestones_url": "https://api.github.com/repos/apache/spark/milestones{/number}",
            "notifications_url": "https://api.github.com/repos/apache/spark/notifications{?since,all,participating}",
            "labels_url": "https://api.github.com/repos/apache/spark/labels{/name}",
            "releases_url": "https://api.github.com/repos/apache/spark/releases{/id}",
            "deployments_url": "https://api.github.com/repos/apache/spark/deployments",
            "created_at": "2014-02-25T08:00:08Z",
            "updated_at": "2020-02-06T12:54:19Z",
            "pushed_at": "2020-02-06T14:36:05Z",
            "git_url": "git://github.com/apache/spark.git",
            "ssh_url": "git@github.com:apache/spark.git",
            "clone_url": "https://github.com/apache/spark.git",
            "svn_url": "https://github.com/apache/spark",
            "homepage": "",
            "size": 320147,
            "stargazers_count": 25062,
            "watchers_count": 25062,
            "language": "Scala",
            "has_issues": false,
            "has_projects": true,
            "has_downloads": true,
            "has_wiki": false,
            "has_pages": false,
            "forks_count": 21084,
            "mirror_url": null,
            "archived": false,
            "disabled": false,
            "open_issues_count": 277,
            "license": {
              "key": "apache-2.0",
              "name": "Apache License 2.0",
              "spdx_id": "Apache-2.0",
              "url": "https://api.github.com/licenses/apache-2.0",
              "node_id": "MDc6TGljZW5zZTI="
            },
            "forks": 21084,
            "open_issues": 277,
            "watchers": 25062,
            "default_branch": "master"
          }
        },
        "_links": {
          "self": {
            "href": "https://api.github.com/repos/apache/spark/pulls/27479"
          },
          "html": {
            "href": "https://github.com/apache/spark/pull/27479"
          },
          "issue": {
            "href": "https://api.github.com/repos/apache/spark/issues/27479"
          },
          "comments": {
            "href": "https://api.github.com/repos/apache/spark/issues/27479/comments"
          },
          "review_comments": {
            "href": "https://api.github.com/repos/apache/spark/pulls/27479/comments"
          },
          "review_comment": {
            "href": "https://api.github.com/repos/apache/spark/pulls/comments{/number}"
          },
          "commits": {
            "href": "https://api.github.com/repos/apache/spark/pulls/27479/commits"
          },
          "statuses": {
            "href": "https://api.github.com/repos/apache/spark/statuses/e79e5db05e3404ec323525f2fb9248c11cdc12ea"
          }
        },
        "author_association": "CONTRIBUTOR",
        "merged": false,
        "mergeable": null,
        "rebaseable": null,
        "mergeable_state": "unknown",
        "merged_by": null,
        "comments": 0,
        "review_comments": 0,
        "maintainer_can_modify": true,
        "commits": 1,
        "additions": 0,
        "deletions": 2,
        "changed_files": 1
      }
    },
    "public": true,
    "created_at": "2020-02-06T15:43:10Z",
    "org": {
      "id": 47359,
      "login": "apache",
      "gravatar_id": "",
      "url": "https://api.github.com/orgs/apache",
      "avatar_url": "https://avatars.githubusercontent.com/u/47359?"
    }
  },
  {
    "id": "11453610252",
    "type": "IssueCommentEvent",
    "actor": {
      "id": 4031291,
      "login": "AmplabJenkins",
      "display_login": "AmplabJenkins",
      "gravatar_id": "",
      "url": "https://api.github.com/users/AmplabJenkins",
      "avatar_url": "https://avatars.githubusercontent.com/u/4031291?"
    },
    "repo": {
      "id": 17165658,
      "name": "apache/spark",
      "url": "https://api.github.com/repos/apache/spark"
    },
    "payload": {
      "action": "created",
      "issue": {
        "url": "https://api.github.com/repos/apache/spark/issues/27474",
        "repository_url": "https://api.github.com/repos/apache/spark",
        "labels_url": "https://api.github.com/repos/apache/spark/issues/27474/labels{/name}",
        "comments_url": "https://api.github.com/repos/apache/spark/issues/27474/comments",
        "events_url": "https://api.github.com/repos/apache/spark/issues/27474/events",
        "html_url": "https://github.com/apache/spark/pull/27474",
        "id": 560856368,
        "node_id": "MDExOlB1bGxSZXF1ZXN0MzcxNzcxMzU4",
        "number": 27474,
        "title": "[WIP] Port `DateTimeUtils.convertTz()` on Java 8 time API",
        "user": {
          "login": "MaxGekk",
          "id": 1580697,
          "node_id": "MDQ6VXNlcjE1ODA2OTc=",
          "avatar_url": "https://avatars1.githubusercontent.com/u/1580697?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/MaxGekk",
          "html_url": "https://github.com/MaxGekk",
          "followers_url": "https://api.github.com/users/MaxGekk/followers",
          "following_url": "https://api.github.com/users/MaxGekk/following{/other_user}",
          "gists_url": "https://api.github.com/users/MaxGekk/gists{/gist_id}",
          "starred_url": "https://api.github.com/users/MaxGekk/starred{/owner}{/repo}",
          "subscriptions_url": "https://api.github.com/users/MaxGekk/subscriptions",
          "organizations_url": "https://api.github.com/users/MaxGekk/orgs",
          "repos_url": "https://api.github.com/users/MaxGekk/repos",
          "events_url": "https://api.github.com/users/MaxGekk/events{/privacy}",
          "received_events_url": "https://api.github.com/users/MaxGekk/received_events",
          "type": "User",
          "site_admin": false
        },
        "labels": [

        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [

        ],
        "milestone": null,
        "comments": 4,
        "created_at": "2020-02-06T08:35:43Z",
        "updated_at": "2020-02-06T15:41:14Z",
        "closed_at": null,
        "author_association": "CONTRIBUTOR",
        "pull_request": {
          "url": "https://api.github.com/repos/apache/spark/pulls/27474",
          "html_url": "https://github.com/apache/spark/pull/27474",
          "diff_url": "https://github.com/apache/spark/pull/27474.diff",
          "patch_url": "https://github.com/apache/spark/pull/27474.patch"
        },
        "body": "### What changes were proposed in this pull request?\r\n- Rewrite the `convertTz` method of `DateTimeUtils` using Java 8 time API\r\n- Change types of `convertTz` parameters from `TimeZone` to `ZoneId`. This allow to avoid unnecessary conversions `TimeZone` -> `ZoneId`\r\n\r\n\r\n### Why are the changes needed?\r\n- Simplifies the code, and make it more maintainable\r\n- Switches `convertTz` on Proleptic Gregorian calendar used by Java 8 time classes by default. That makes the function consistent to other date-time functions. \r\n\r\n### Does this PR introduce any user-facing change?\r\nNo\r\n\r\n### How was this patch tested?\r\nBy existing test suite `DateTimeUtilsSuite`, `DateFunctionsSuite` and `DateExpressionsSuite`."
      },
      "comment": {
        "url": "https://api.github.com/repos/apache/spark/issues/comments/582965040",
        "html_url": "https://github.com/apache/spark/pull/27474#issuecomment-582965040",
        "issue_url": "https://api.github.com/repos/apache/spark/issues/27474",
        "id": 582965040,
        "node_id": "MDEyOklzc3VlQ29tbWVudDU4Mjk2NTA0MA==",
        "user": {
          "login": "AmplabJenkins",
          "id": 4031291,
          "node_id": "MDQ6VXNlcjQwMzEyOTE=",
          "avatar_url": "https://avatars3.githubusercontent.com/u/4031291?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/AmplabJenkins",
          "html_url": "https://github.com/AmplabJenkins",
          "followers_url": "https://api.github.com/users/AmplabJenkins/followers",
          "following_url": "https://api.github.com/users/AmplabJenkins/following{/other_user}",
          "gists_url": "https://api.github.com/users/AmplabJenkins/gists{/gist_id}",
          "starred_url": "https://api.github.com/users/AmplabJenkins/starred{/owner}{/repo}",
          "subscriptions_url": "https://api.github.com/users/AmplabJenkins/subscriptions",
          "organizations_url": "https://api.github.com/users/AmplabJenkins/orgs",
          "repos_url": "https://api.github.com/users/AmplabJenkins/repos",
          "events_url": "https://api.github.com/users/AmplabJenkins/events{/privacy}",
          "received_events_url": "https://api.github.com/users/AmplabJenkins/received_events",
          "type": "User",
          "site_admin": false
        },
        "created_at": "2020-02-06T15:41:14Z",
        "updated_at": "2020-02-06T15:41:14Z",
        "author_association": "NONE",
        "body": "Merged build finished. Test PASSed."
      }
    },
    "public": true,
    "created_at": "2020-02-06T15:41:14Z",
    "org": {
      "id": 47359,
      "login": "apache",
      "gravatar_id": "",
      "url": "https://api.github.com/orgs/apache",
      "avatar_url": "https://avatars.githubusercontent.com/u/47359?"
    }
  },
  {
    "id": "11453592041",
    "type": "IssueCommentEvent",
    "actor": {
      "id": 8486025,
      "login": "beliefer",
      "display_login": "beliefer",
      "gravatar_id": "",
      "url": "https://api.github.com/users/beliefer",
      "avatar_url": "https://avatars.githubusercontent.com/u/8486025?"
    },
    "repo": {
      "id": 17165658,
      "name": "apache/spark",
      "url": "https://api.github.com/repos/apache/spark"
    },
    "payload": {
      "action": "created",
      "issue": {
        "url": "https://api.github.com/repos/apache/spark/issues/27476",
        "repository_url": "https://api.github.com/repos/apache/spark",
        "labels_url": "https://api.github.com/repos/apache/spark/issues/27476/labels{/name}",
        "comments_url": "https://api.github.com/repos/apache/spark/issues/27476/comments",
        "events_url": "https://api.github.com/repos/apache/spark/issues/27476/events",
        "html_url": "https://github.com/apache/spark/pull/27476",
        "id": 560953849,
        "node_id": "MDExOlB1bGxSZXF1ZXN0MzcxODUwNjgw",
        "number": 27476,
        "title": "[SPARK-27986][SQL][followup] window aggregate function with filter predicate is not supported",
        "user": {
          "login": "cloud-fan",
          "id": 3182036,
          "node_id": "MDQ6VXNlcjMxODIwMzY=",
          "avatar_url": "https://avatars3.githubusercontent.com/u/3182036?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/cloud-fan",
          "html_url": "https://github.com/cloud-fan",
          "followers_url": "https://api.github.com/users/cloud-fan/followers",
          "following_url": "https://api.github.com/users/cloud-fan/following{/other_user}",
          "gists_url": "https://api.github.com/users/cloud-fan/gists{/gist_id}",
          "starred_url": "https://api.github.com/users/cloud-fan/starred{/owner}{/repo}",
          "subscriptions_url": "https://api.github.com/users/cloud-fan/subscriptions",
          "organizations_url": "https://api.github.com/users/cloud-fan/orgs",
          "repos_url": "https://api.github.com/users/cloud-fan/repos",
          "events_url": "https://api.github.com/users/cloud-fan/events{/privacy}",
          "received_events_url": "https://api.github.com/users/cloud-fan/received_events",
          "type": "User",
          "site_admin": false
        },
        "labels": [

        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [

        ],
        "milestone": null,
        "comments": 4,
        "created_at": "2020-02-06T11:32:59Z",
        "updated_at": "2020-02-06T15:39:28Z",
        "closed_at": null,
        "author_association": "CONTRIBUTOR",
        "pull_request": {
          "url": "https://api.github.com/repos/apache/spark/pulls/27476",
          "html_url": "https://github.com/apache/spark/pull/27476",
          "diff_url": "https://github.com/apache/spark/pull/27476.diff",
          "patch_url": "https://github.com/apache/spark/pull/27476.patch"
        },
        "body": "<!--\r\nThanks for sending a pull request!  Here are some tips for you:\r\n  1. If this is your first time, please read our contributor guidelines: https://spark.apache.org/contributing.html\r\n  2. Ensure you have added or run the appropriate tests for your PR: https://spark.apache.org/developer-tools.html\r\n  3. If the PR is unfinished, add '[WIP]' in your PR title, e.g., '[WIP][SPARK-XXXX] Your PR title ...'.\r\n  4. Be sure to keep the PR description updated to reflect all changes.\r\n  5. Please write your PR title to summarize what this PR proposes.\r\n  6. If possible, provide a concise example to reproduce the issue for a faster review.\r\n-->\r\n\r\n### What changes were proposed in this pull request?\r\n<!--\r\nPlease clarify what changes you are proposing. The purpose of this section is to outline the changes and how this PR fixes the issue. \r\nIf possible, please consider writing useful notes for better and faster reviews in your PR. See the examples below.\r\n  1. If you refactor some codes with changing classes, showing the class hierarchy will help reviewers.\r\n  2. If you fix some SQL features, you can provide some references of other DBMSes.\r\n  3. If there is design documentation, please add the link.\r\n  4. If there is a discussion in the mailing list, please add the link.\r\n-->\r\nThis is a followup of https://github.com/apache/spark/pull/26656.\r\n\r\nWe don't support window aggregate function with filter predicate yet and we should fail explicitly.\r\n\r\nObservable metrics has the same issue. This PR fixes it as well.\r\n\r\n### Why are the changes needed?\r\n<!--\r\nPlease clarify why the changes are needed. For instance,\r\n  1. If you propose a new API, clarify the use case for a new API.\r\n  2. If you fix a bug, you can clarify why it is a bug.\r\n-->\r\nIf we simply ignore filter predicate when we don't support it, the result is wrong.\r\n\r\n### Does this PR introduce any user-facing change?\r\n<!--\r\nIf yes, please clarify the previous behavior and the change this PR proposes - provide the console output, description and/or an example to show the behavior difference if possible.\r\nIf no, write 'No'.\r\n-->\r\nyea, fix the query result.\r\n\r\n### How was this patch tested?\r\n<!--\r\nIf tests were added, say they were added here. Please make sure to add some test cases that check the changes thoroughly including negative and positive cases if possible.\r\nIf it was tested in a way different from regular unit tests, please clarify how you tested step by step, ideally copy and paste-able, so that other reviewers can test and check, and descendants can verify in the future.\r\nIf tests were not added, please describe why they were not added and/or why it was difficult to add.\r\n-->\r\nnew tests"
      },
      "comment": {
        "url": "https://api.github.com/repos/apache/spark/issues/comments/582964193",
        "html_url": "https://github.com/apache/spark/pull/27476#issuecomment-582964193",
        "issue_url": "https://api.github.com/repos/apache/spark/issues/27476",
        "id": 582964193,
        "node_id": "MDEyOklzc3VlQ29tbWVudDU4Mjk2NDE5Mw==",
        "user": {
          "login": "beliefer",
          "id": 8486025,
          "node_id": "MDQ6VXNlcjg0ODYwMjU=",
          "avatar_url": "https://avatars0.githubusercontent.com/u/8486025?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/beliefer",
          "html_url": "https://github.com/beliefer",
          "followers_url": "https://api.github.com/users/beliefer/followers",
          "following_url": "https://api.github.com/users/beliefer/following{/other_user}",
          "gists_url": "https://api.github.com/users/beliefer/gists{/gist_id}",
          "starred_url": "https://api.github.com/users/beliefer/starred{/owner}{/repo}",
          "subscriptions_url": "https://api.github.com/users/beliefer/subscriptions",
          "organizations_url": "https://api.github.com/users/beliefer/orgs",
          "repos_url": "https://api.github.com/users/beliefer/repos",
          "events_url": "https://api.github.com/users/beliefer/events{/privacy}",
          "received_events_url": "https://api.github.com/users/beliefer/received_events",
          "type": "User",
          "site_admin": false
        },
        "created_at": "2020-02-06T15:39:27Z",
        "updated_at": "2020-02-06T15:39:27Z",
        "author_association": "CONTRIBUTOR",
        "body": "Thank you. LGTM."
      }
    },
    "public": true,
    "created_at": "2020-02-06T15:39:28Z",
    "org": {
      "id": 47359,
      "login": "apache",
      "gravatar_id": "",
      "url": "https://api.github.com/orgs/apache",
      "avatar_url": "https://avatars.githubusercontent.com/u/47359?"
    }
  },
  {
    "id": "11453586844",
    "type": "IssueCommentEvent",
    "actor": {
      "id": 8108735,
      "login": "SparkQA",
      "display_login": "SparkQA",
      "gravatar_id": "",
      "url": "https://api.github.com/users/SparkQA",
      "avatar_url": "https://avatars.githubusercontent.com/u/8108735?"
    },
    "repo": {
      "id": 17165658,
      "name": "apache/spark",
      "url": "https://api.github.com/repos/apache/spark"
    },
    "payload": {
      "action": "created",
      "issue": {
        "url": "https://api.github.com/repos/apache/spark/issues/27474",
        "repository_url": "https://api.github.com/repos/apache/spark",
        "labels_url": "https://api.github.com/repos/apache/spark/issues/27474/labels{/name}",
        "comments_url": "https://api.github.com/repos/apache/spark/issues/27474/comments",
        "events_url": "https://api.github.com/repos/apache/spark/issues/27474/events",
        "html_url": "https://github.com/apache/spark/pull/27474",
        "id": 560856368,
        "node_id": "MDExOlB1bGxSZXF1ZXN0MzcxNzcxMzU4",
        "number": 27474,
        "title": "[WIP] Port `DateTimeUtils.convertTz()` on Java 8 time API",
        "user": {
          "login": "MaxGekk",
          "id": 1580697,
          "node_id": "MDQ6VXNlcjE1ODA2OTc=",
          "avatar_url": "https://avatars1.githubusercontent.com/u/1580697?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/MaxGekk",
          "html_url": "https://github.com/MaxGekk",
          "followers_url": "https://api.github.com/users/MaxGekk/followers",
          "following_url": "https://api.github.com/users/MaxGekk/following{/other_user}",
          "gists_url": "https://api.github.com/users/MaxGekk/gists{/gist_id}",
          "starred_url": "https://api.github.com/users/MaxGekk/starred{/owner}{/repo}",
          "subscriptions_url": "https://api.github.com/users/MaxGekk/subscriptions",
          "organizations_url": "https://api.github.com/users/MaxGekk/orgs",
          "repos_url": "https://api.github.com/users/MaxGekk/repos",
          "events_url": "https://api.github.com/users/MaxGekk/events{/privacy}",
          "received_events_url": "https://api.github.com/users/MaxGekk/received_events",
          "type": "User",
          "site_admin": false
        },
        "labels": [

        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [

        ],
        "milestone": null,
        "comments": 4,
        "created_at": "2020-02-06T08:35:43Z",
        "updated_at": "2020-02-06T15:38:57Z",
        "closed_at": null,
        "author_association": "CONTRIBUTOR",
        "pull_request": {
          "url": "https://api.github.com/repos/apache/spark/pulls/27474",
          "html_url": "https://github.com/apache/spark/pull/27474",
          "diff_url": "https://github.com/apache/spark/pull/27474.diff",
          "patch_url": "https://github.com/apache/spark/pull/27474.patch"
        },
        "body": "### What changes were proposed in this pull request?\r\n- Rewrite the `convertTz` method of `DateTimeUtils` using Java 8 time API\r\n- Change types of `convertTz` parameters from `TimeZone` to `ZoneId`. This allow to avoid unnecessary conversions `TimeZone` -> `ZoneId`\r\n\r\n\r\n### Why are the changes needed?\r\n- Simplifies the code, and make it more maintainable\r\n- Switches `convertTz` on Proleptic Gregorian calendar used by Java 8 time classes by default. That makes the function consistent to other date-time functions. \r\n\r\n### Does this PR introduce any user-facing change?\r\nNo\r\n\r\n### How was this patch tested?\r\nBy existing test suite `DateTimeUtilsSuite`, `DateFunctionsSuite` and `DateExpressionsSuite`."
      },
      "comment": {
        "url": "https://api.github.com/repos/apache/spark/issues/comments/582963954",
        "html_url": "https://github.com/apache/spark/pull/27474#issuecomment-582963954",
        "issue_url": "https://api.github.com/repos/apache/spark/issues/27474",
        "id": 582963954,
        "node_id": "MDEyOklzc3VlQ29tbWVudDU4Mjk2Mzk1NA==",
        "user": {
          "login": "SparkQA",
          "id": 8108735,
          "node_id": "MDQ6VXNlcjgxMDg3MzU=",
          "avatar_url": "https://avatars1.githubusercontent.com/u/8108735?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/SparkQA",
          "html_url": "https://github.com/SparkQA",
          "followers_url": "https://api.github.com/users/SparkQA/followers",
          "following_url": "https://api.github.com/users/SparkQA/following{/other_user}",
          "gists_url": "https://api.github.com/users/SparkQA/gists{/gist_id}",
          "starred_url": "https://api.github.com/users/SparkQA/starred{/owner}{/repo}",
          "subscriptions_url": "https://api.github.com/users/SparkQA/subscriptions",
          "organizations_url": "https://api.github.com/users/SparkQA/orgs",
          "repos_url": "https://api.github.com/users/SparkQA/repos",
          "events_url": "https://api.github.com/users/SparkQA/events{/privacy}",
          "received_events_url": "https://api.github.com/users/SparkQA/received_events",
          "type": "User",
          "site_admin": false
        },
        "created_at": "2020-02-06T15:38:57Z",
        "updated_at": "2020-02-06T15:38:57Z",
        "author_association": "NONE",
        "body": "**[Test build #117989 has finished](https://amplab.cs.berkeley.edu/jenkins/job/SparkPullRequestBuilder/117989/testReport)** for PR 27474 at commit [`3d4456a`](https://github.com/apache/spark/commit/3d4456a7507a7dcbbdb710b60165107ab13b771c).\n * This patch passes all tests.\n * This patch merges cleanly.\n * This patch adds no public classes."
      }
    },
    "public": true,
    "created_at": "2020-02-06T15:38:57Z",
    "org": {
      "id": 47359,
      "login": "apache",
      "gravatar_id": "",
      "url": "https://api.github.com/orgs/apache",
      "avatar_url": "https://avatars.githubusercontent.com/u/47359?"
    }
  },
  {
    "id": "11453501989",
    "type": "PullRequestReviewCommentEvent",
    "actor": {
      "id": 8486025,
      "login": "beliefer",
      "display_login": "beliefer",
      "gravatar_id": "",
      "url": "https://api.github.com/users/beliefer",
      "avatar_url": "https://avatars.githubusercontent.com/u/8486025?"
    },
    "repo": {
      "id": 17165658,
      "name": "apache/spark",
      "url": "https://api.github.com/repos/apache/spark"
    },
    "payload": {
      "action": "created",
      "comment": {
        "url": "https://api.github.com/repos/apache/spark/pulls/comments/375903575",
        "pull_request_review_id": 354541742,
        "id": 375903575,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NTkwMzU3NQ==",
        "diff_hunk": "@@ -191,12 +207,12 @@ class AnalysisErrorSuite extends AnalysisTest {\n     \"FILTER predicate specified, but aggregate is not an aggregate function\" :: Nil)\n \n   errorTest(\n-    \"DISTINCT and FILTER cannot be used in aggregate functions at the same time\",",
        "path": "sql/catalyst/src/test/scala/org/apache/spark/sql/catalyst/analysis/AnalysisErrorSuite.scala",
        "position": 27,
        "original_position": 27,
        "commit_id": "e996e0340280c2c261da4e226cc169b4d17b7e46",
        "original_commit_id": "e996e0340280c2c261da4e226cc169b4d17b7e46",
        "user": {
          "login": "beliefer",
          "id": 8486025,
          "node_id": "MDQ6VXNlcjg0ODYwMjU=",
          "avatar_url": "https://avatars0.githubusercontent.com/u/8486025?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/beliefer",
          "html_url": "https://github.com/beliefer",
          "followers_url": "https://api.github.com/users/beliefer/followers",
          "following_url": "https://api.github.com/users/beliefer/following{/other_user}",
          "gists_url": "https://api.github.com/users/beliefer/gists{/gist_id}",
          "starred_url": "https://api.github.com/users/beliefer/starred{/owner}{/repo}",
          "subscriptions_url": "https://api.github.com/users/beliefer/subscriptions",
          "organizations_url": "https://api.github.com/users/beliefer/orgs",
          "repos_url": "https://api.github.com/users/beliefer/repos",
          "events_url": "https://api.github.com/users/beliefer/events{/privacy}",
          "received_events_url": "https://api.github.com/users/beliefer/received_events",
          "type": "User",
          "site_admin": false
        },
        "body": "Why we change this error message?",
        "created_at": "2020-02-06T15:30:30Z",
        "updated_at": "2020-02-06T15:30:30Z",
        "html_url": "https://github.com/apache/spark/pull/27476#discussion_r375903575",
        "pull_request_url": "https://api.github.com/repos/apache/spark/pulls/27476",
        "author_association": "CONTRIBUTOR",
        "_links": {
          "self": {
            "href": "https://api.github.com/repos/apache/spark/pulls/comments/375903575"
          },
          "html": {
            "href": "https://github.com/apache/spark/pull/27476#discussion_r375903575"
          },
          "pull_request": {
            "href": "https://api.github.com/repos/apache/spark/pulls/27476"
          }
        }
      },
      "pull_request": {
        "url": "https://api.github.com/repos/apache/spark/pulls/27476",
        "id": 371850680,
        "node_id": "MDExOlB1bGxSZXF1ZXN0MzcxODUwNjgw",
        "html_url": "https://github.com/apache/spark/pull/27476",
        "diff_url": "https://github.com/apache/spark/pull/27476.diff",
        "patch_url": "https://github.com/apache/spark/pull/27476.patch",
        "issue_url": "https://api.github.com/repos/apache/spark/issues/27476",
        "number": 27476,
        "state": "open",
        "locked": false,
        "title": "[SPARK-27986][SQL][followup] window aggregate function with filter predicate is not supported",
        "user": {
          "login": "cloud-fan",
          "id": 3182036,
          "node_id": "MDQ6VXNlcjMxODIwMzY=",
          "avatar_url": "https://avatars3.githubusercontent.com/u/3182036?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/cloud-fan",
          "html_url": "https://github.com/cloud-fan",
          "followers_url": "https://api.github.com/users/cloud-fan/followers",
          "following_url": "https://api.github.com/users/cloud-fan/following{/other_user}",
          "gists_url": "https://api.github.com/users/cloud-fan/gists{/gist_id}",
          "starred_url": "https://api.github.com/users/cloud-fan/starred{/owner}{/repo}",
          "subscriptions_url": "https://api.github.com/users/cloud-fan/subscriptions",
          "organizations_url": "https://api.github.com/users/cloud-fan/orgs",
          "repos_url": "https://api.github.com/users/cloud-fan/repos",
          "events_url": "https://api.github.com/users/cloud-fan/events{/privacy}",
          "received_events_url": "https://api.github.com/users/cloud-fan/received_events",
          "type": "User",
          "site_admin": false
        },
        "body": "<!--\r\nThanks for sending a pull request!  Here are some tips for you:\r\n  1. If this is your first time, please read our contributor guidelines: https://spark.apache.org/contributing.html\r\n  2. Ensure you have added or run the appropriate tests for your PR: https://spark.apache.org/developer-tools.html\r\n  3. If the PR is unfinished, add '[WIP]' in your PR title, e.g., '[WIP][SPARK-XXXX] Your PR title ...'.\r\n  4. Be sure to keep the PR description updated to reflect all changes.\r\n  5. Please write your PR title to summarize what this PR proposes.\r\n  6. If possible, provide a concise example to reproduce the issue for a faster review.\r\n-->\r\n\r\n### What changes were proposed in this pull request?\r\n<!--\r\nPlease clarify what changes you are proposing. The purpose of this section is to outline the changes and how this PR fixes the issue. \r\nIf possible, please consider writing useful notes for better and faster reviews in your PR. See the examples below.\r\n  1. If you refactor some codes with changing classes, showing the class hierarchy will help reviewers.\r\n  2. If you fix some SQL features, you can provide some references of other DBMSes.\r\n  3. If there is design documentation, please add the link.\r\n  4. If there is a discussion in the mailing list, please add the link.\r\n-->\r\nThis is a followup of https://github.com/apache/spark/pull/26656.\r\n\r\nWe don't support window aggregate function with filter predicate yet and we should fail explicitly.\r\n\r\nObservable metrics has the same issue. This PR fixes it as well.\r\n\r\n### Why are the changes needed?\r\n<!--\r\nPlease clarify why the changes are needed. For instance,\r\n  1. If you propose a new API, clarify the use case for a new API.\r\n  2. If you fix a bug, you can clarify why it is a bug.\r\n-->\r\nIf we simply ignore filter predicate when we don't support it, the result is wrong.\r\n\r\n### Does this PR introduce any user-facing change?\r\n<!--\r\nIf yes, please clarify the previous behavior and the change this PR proposes - provide the console output, description and/or an example to show the behavior difference if possible.\r\nIf no, write 'No'.\r\n-->\r\nyea, fix the query result.\r\n\r\n### How was this patch tested?\r\n<!--\r\nIf tests were added, say they were added here. Please make sure to add some test cases that check the changes thoroughly including negative and positive cases if possible.\r\nIf it was tested in a way different from regular unit tests, please clarify how you tested step by step, ideally copy and paste-able, so that other reviewers can test and check, and descendants can verify in the future.\r\nIf tests were not added, please describe why they were not added and/or why it was difficult to add.\r\n-->\r\nnew tests",
        "created_at": "2020-02-06T11:32:59Z",
        "updated_at": "2020-02-06T15:30:30Z",
        "closed_at": null,
        "merged_at": null,
        "merge_commit_sha": "75d896d81a116299a03ea8e2be0ba47024886f68",
        "assignee": null,
        "assignees": [

        ],
        "requested_reviewers": [

        ],
        "requested_teams": [

        ],
        "labels": [

        ],
        "milestone": null,
        "commits_url": "https://api.github.com/repos/apache/spark/pulls/27476/commits",
        "review_comments_url": "https://api.github.com/repos/apache/spark/pulls/27476/comments",
        "review_comment_url": "https://api.github.com/repos/apache/spark/pulls/comments{/number}",
        "comments_url": "https://api.github.com/repos/apache/spark/issues/27476/comments",
        "statuses_url": "https://api.github.com/repos/apache/spark/statuses/e996e0340280c2c261da4e226cc169b4d17b7e46",
        "head": {
          "label": "cloud-fan:filter",
          "ref": "filter",
          "sha": "e996e0340280c2c261da4e226cc169b4d17b7e46",
          "user": {
            "login": "cloud-fan",
            "id": 3182036,
            "node_id": "MDQ6VXNlcjMxODIwMzY=",
            "avatar_url": "https://avatars3.githubusercontent.com/u/3182036?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/cloud-fan",
            "html_url": "https://github.com/cloud-fan",
            "followers_url": "https://api.github.com/users/cloud-fan/followers",
            "following_url": "https://api.github.com/users/cloud-fan/following{/other_user}",
            "gists_url": "https://api.github.com/users/cloud-fan/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/cloud-fan/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/cloud-fan/subscriptions",
            "organizations_url": "https://api.github.com/users/cloud-fan/orgs",
            "repos_url": "https://api.github.com/users/cloud-fan/repos",
            "events_url": "https://api.github.com/users/cloud-fan/events{/privacy}",
            "received_events_url": "https://api.github.com/users/cloud-fan/received_events",
            "type": "User",
            "site_admin": false
          },
          "repo": {
            "id": 19689699,
            "node_id": "MDEwOlJlcG9zaXRvcnkxOTY4OTY5OQ==",
            "name": "spark",
            "full_name": "cloud-fan/spark",
            "private": false,
            "owner": {
              "login": "cloud-fan",
              "id": 3182036,
              "node_id": "MDQ6VXNlcjMxODIwMzY=",
              "avatar_url": "https://avatars3.githubusercontent.com/u/3182036?v=4",
              "gravatar_id": "",
              "url": "https://api.github.com/users/cloud-fan",
              "html_url": "https://github.com/cloud-fan",
              "followers_url": "https://api.github.com/users/cloud-fan/followers",
              "following_url": "https://api.github.com/users/cloud-fan/following{/other_user}",
              "gists_url": "https://api.github.com/users/cloud-fan/gists{/gist_id}",
              "starred_url": "https://api.github.com/users/cloud-fan/starred{/owner}{/repo}",
              "subscriptions_url": "https://api.github.com/users/cloud-fan/subscriptions",
              "organizations_url": "https://api.github.com/users/cloud-fan/orgs",
              "repos_url": "https://api.github.com/users/cloud-fan/repos",
              "events_url": "https://api.github.com/users/cloud-fan/events{/privacy}",
              "received_events_url": "https://api.github.com/users/cloud-fan/received_events",
              "type": "User",
              "site_admin": false
            },
            "html_url": "https://github.com/cloud-fan/spark",
            "description": "Mirror of Apache Spark",
            "fork": true,
            "url": "https://api.github.com/repos/cloud-fan/spark",
            "forks_url": "https://api.github.com/repos/cloud-fan/spark/forks",
            "keys_url": "https://api.github.com/repos/cloud-fan/spark/keys{/key_id}",
            "collaborators_url": "https://api.github.com/repos/cloud-fan/spark/collaborators{/collaborator}",
            "teams_url": "https://api.github.com/repos/cloud-fan/spark/teams",
            "hooks_url": "https://api.github.com/repos/cloud-fan/spark/hooks",
            "issue_events_url": "https://api.github.com/repos/cloud-fan/spark/issues/events{/number}",
            "events_url": "https://api.github.com/repos/cloud-fan/spark/events",
            "assignees_url": "https://api.github.com/repos/cloud-fan/spark/assignees{/user}",
            "branches_url": "https://api.github.com/repos/cloud-fan/spark/branches{/branch}",
            "tags_url": "https://api.github.com/repos/cloud-fan/spark/tags",
            "blobs_url": "https://api.github.com/repos/cloud-fan/spark/git/blobs{/sha}",
            "git_tags_url": "https://api.github.com/repos/cloud-fan/spark/git/tags{/sha}",
            "git_refs_url": "https://api.github.com/repos/cloud-fan/spark/git/refs{/sha}",
            "trees_url": "https://api.github.com/repos/cloud-fan/spark/git/trees{/sha}",
            "statuses_url": "https://api.github.com/repos/cloud-fan/spark/statuses/{sha}",
            "languages_url": "https://api.github.com/repos/cloud-fan/spark/languages",
            "stargazers_url": "https://api.github.com/repos/cloud-fan/spark/stargazers",
            "contributors_url": "https://api.github.com/repos/cloud-fan/spark/contributors",
            "subscribers_url": "https://api.github.com/repos/cloud-fan/spark/subscribers",
            "subscription_url": "https://api.github.com/repos/cloud-fan/spark/subscription",
            "commits_url": "https://api.github.com/repos/cloud-fan/spark/commits{/sha}",
            "git_commits_url": "https://api.github.com/repos/cloud-fan/spark/git/commits{/sha}",
            "comments_url": "https://api.github.com/repos/cloud-fan/spark/comments{/number}",
            "issue_comment_url": "https://api.github.com/repos/cloud-fan/spark/issues/comments{/number}",
            "contents_url": "https://api.github.com/repos/cloud-fan/spark/contents/{+path}",
            "compare_url": "https://api.github.com/repos/cloud-fan/spark/compare/{base}...{head}",
            "merges_url": "https://api.github.com/repos/cloud-fan/spark/merges",
            "archive_url": "https://api.github.com/repos/cloud-fan/spark/{archive_format}{/ref}",
            "downloads_url": "https://api.github.com/repos/cloud-fan/spark/downloads",
            "issues_url": "https://api.github.com/repos/cloud-fan/spark/issues{/number}",
            "pulls_url": "https://api.github.com/repos/cloud-fan/spark/pulls{/number}",
            "milestones_url": "https://api.github.com/repos/cloud-fan/spark/milestones{/number}",
            "notifications_url": "https://api.github.com/repos/cloud-fan/spark/notifications{?since,all,participating}",
            "labels_url": "https://api.github.com/repos/cloud-fan/spark/labels{/name}",
            "releases_url": "https://api.github.com/repos/cloud-fan/spark/releases{/id}",
            "deployments_url": "https://api.github.com/repos/cloud-fan/spark/deployments",
            "created_at": "2014-05-12T07:32:26Z",
            "updated_at": "2017-06-22T06:57:26Z",
            "pushed_at": "2020-02-06T11:47:34Z",
            "git_url": "git://github.com/cloud-fan/spark.git",
            "ssh_url": "git@github.com:cloud-fan/spark.git",
            "clone_url": "https://github.com/cloud-fan/spark.git",
            "svn_url": "https://github.com/cloud-fan/spark",
            "homepage": null,
            "size": 312940,
            "stargazers_count": 1,
            "watchers_count": 1,
            "language": "Scala",
            "has_issues": false,
            "has_projects": true,
            "has_downloads": true,
            "has_wiki": false,
            "has_pages": false,
            "forks_count": 1,
            "mirror_url": null,
            "archived": false,
            "disabled": false,
            "open_issues_count": 1,
            "license": {
              "key": "apache-2.0",
              "name": "Apache License 2.0",
              "spdx_id": "Apache-2.0",
              "url": "https://api.github.com/licenses/apache-2.0",
              "node_id": "MDc6TGljZW5zZTI="
            },
            "forks": 1,
            "open_issues": 1,
            "watchers": 1,
            "default_branch": "master"
          }
        },
        "base": {
          "label": "apache:master",
          "ref": "master",
          "sha": "c8ef1dee90e939e004a024cf98b7ea7e1eaa9ffe",
          "user": {
            "login": "apache",
            "id": 47359,
            "node_id": "MDEyOk9yZ2FuaXphdGlvbjQ3MzU5",
            "avatar_url": "https://avatars0.githubusercontent.com/u/47359?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/apache",
            "html_url": "https://github.com/apache",
            "followers_url": "https://api.github.com/users/apache/followers",
            "following_url": "https://api.github.com/users/apache/following{/other_user}",
            "gists_url": "https://api.github.com/users/apache/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/apache/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/apache/subscriptions",
            "organizations_url": "https://api.github.com/users/apache/orgs",
            "repos_url": "https://api.github.com/users/apache/repos",
            "events_url": "https://api.github.com/users/apache/events{/privacy}",
            "received_events_url": "https://api.github.com/users/apache/received_events",
            "type": "Organization",
            "site_admin": false
          },
          "repo": {
            "id": 17165658,
            "node_id": "MDEwOlJlcG9zaXRvcnkxNzE2NTY1OA==",
            "name": "spark",
            "full_name": "apache/spark",
            "private": false,
            "owner": {
              "login": "apache",
              "id": 47359,
              "node_id": "MDEyOk9yZ2FuaXphdGlvbjQ3MzU5",
              "avatar_url": "https://avatars0.githubusercontent.com/u/47359?v=4",
              "gravatar_id": "",
              "url": "https://api.github.com/users/apache",
              "html_url": "https://github.com/apache",
              "followers_url": "https://api.github.com/users/apache/followers",
              "following_url": "https://api.github.com/users/apache/following{/other_user}",
              "gists_url": "https://api.github.com/users/apache/gists{/gist_id}",
              "starred_url": "https://api.github.com/users/apache/starred{/owner}{/repo}",
              "subscriptions_url": "https://api.github.com/users/apache/subscriptions",
              "organizations_url": "https://api.github.com/users/apache/orgs",
              "repos_url": "https://api.github.com/users/apache/repos",
              "events_url": "https://api.github.com/users/apache/events{/privacy}",
              "received_events_url": "https://api.github.com/users/apache/received_events",
              "type": "Organization",
              "site_admin": false
            },
            "html_url": "https://github.com/apache/spark",
            "description": "Apache Spark",
            "fork": false,
            "url": "https://api.github.com/repos/apache/spark",
            "forks_url": "https://api.github.com/repos/apache/spark/forks",
            "keys_url": "https://api.github.com/repos/apache/spark/keys{/key_id}",
            "collaborators_url": "https://api.github.com/repos/apache/spark/collaborators{/collaborator}",
            "teams_url": "https://api.github.com/repos/apache/spark/teams",
            "hooks_url": "https://api.github.com/repos/apache/spark/hooks",
            "issue_events_url": "https://api.github.com/repos/apache/spark/issues/events{/number}",
            "events_url": "https://api.github.com/repos/apache/spark/events",
            "assignees_url": "https://api.github.com/repos/apache/spark/assignees{/user}",
            "branches_url": "https://api.github.com/repos/apache/spark/branches{/branch}",
            "tags_url": "https://api.github.com/repos/apache/spark/tags",
            "blobs_url": "https://api.github.com/repos/apache/spark/git/blobs{/sha}",
            "git_tags_url": "https://api.github.com/repos/apache/spark/git/tags{/sha}",
            "git_refs_url": "https://api.github.com/repos/apache/spark/git/refs{/sha}",
            "trees_url": "https://api.github.com/repos/apache/spark/git/trees{/sha}",
            "statuses_url": "https://api.github.com/repos/apache/spark/statuses/{sha}",
            "languages_url": "https://api.github.com/repos/apache/spark/languages",
            "stargazers_url": "https://api.github.com/repos/apache/spark/stargazers",
            "contributors_url": "https://api.github.com/repos/apache/spark/contributors",
            "subscribers_url": "https://api.github.com/repos/apache/spark/subscribers",
            "subscription_url": "https://api.github.com/repos/apache/spark/subscription",
            "commits_url": "https://api.github.com/repos/apache/spark/commits{/sha}",
            "git_commits_url": "https://api.github.com/repos/apache/spark/git/commits{/sha}",
            "comments_url": "https://api.github.com/repos/apache/spark/comments{/number}",
            "issue_comment_url": "https://api.github.com/repos/apache/spark/issues/comments{/number}",
            "contents_url": "https://api.github.com/repos/apache/spark/contents/{+path}",
            "compare_url": "https://api.github.com/repos/apache/spark/compare/{base}...{head}",
            "merges_url": "https://api.github.com/repos/apache/spark/merges",
            "archive_url": "https://api.github.com/repos/apache/spark/{archive_format}{/ref}",
            "downloads_url": "https://api.github.com/repos/apache/spark/downloads",
            "issues_url": "https://api.github.com/repos/apache/spark/issues{/number}",
            "pulls_url": "https://api.github.com/repos/apache/spark/pulls{/number}",
            "milestones_url": "https://api.github.com/repos/apache/spark/milestones{/number}",
            "notifications_url": "https://api.github.com/repos/apache/spark/notifications{?since,all,participating}",
            "labels_url": "https://api.github.com/repos/apache/spark/labels{/name}",
            "releases_url": "https://api.github.com/repos/apache/spark/releases{/id}",
            "deployments_url": "https://api.github.com/repos/apache/spark/deployments",
            "created_at": "2014-02-25T08:00:08Z",
            "updated_at": "2020-02-06T12:54:19Z",
            "pushed_at": "2020-02-06T14:36:05Z",
            "git_url": "git://github.com/apache/spark.git",
            "ssh_url": "git@github.com:apache/spark.git",
            "clone_url": "https://github.com/apache/spark.git",
            "svn_url": "https://github.com/apache/spark",
            "homepage": "",
            "size": 320147,
            "stargazers_count": 25062,
            "watchers_count": 25062,
            "language": "Scala",
            "has_issues": false,
            "has_projects": true,
            "has_downloads": true,
            "has_wiki": false,
            "has_pages": false,
            "forks_count": 21084,
            "mirror_url": null,
            "archived": false,
            "disabled": false,
            "open_issues_count": 276,
            "license": {
              "key": "apache-2.0",
              "name": "Apache License 2.0",
              "spdx_id": "Apache-2.0",
              "url": "https://api.github.com/licenses/apache-2.0",
              "node_id": "MDc6TGljZW5zZTI="
            },
            "forks": 21084,
            "open_issues": 276,
            "watchers": 25062,
            "default_branch": "master"
          }
        },
        "_links": {
          "self": {
            "href": "https://api.github.com/repos/apache/spark/pulls/27476"
          },
          "html": {
            "href": "https://github.com/apache/spark/pull/27476"
          },
          "issue": {
            "href": "https://api.github.com/repos/apache/spark/issues/27476"
          },
          "comments": {
            "href": "https://api.github.com/repos/apache/spark/issues/27476/comments"
          },
          "review_comments": {
            "href": "https://api.github.com/repos/apache/spark/pulls/27476/comments"
          },
          "review_comment": {
            "href": "https://api.github.com/repos/apache/spark/pulls/comments{/number}"
          },
          "commits": {
            "href": "https://api.github.com/repos/apache/spark/pulls/27476/commits"
          },
          "statuses": {
            "href": "https://api.github.com/repos/apache/spark/statuses/e996e0340280c2c261da4e226cc169b4d17b7e46"
          }
        },
        "author_association": "CONTRIBUTOR"
      }
    },
    "public": true,
    "created_at": "2020-02-06T15:30:30Z",
    "org": {
      "id": 47359,
      "login": "apache",
      "gravatar_id": "",
      "url": "https://api.github.com/orgs/apache",
      "avatar_url": "https://avatars.githubusercontent.com/u/47359?"
    }
  },
  {
    "id": "11453459855",
    "type": "IssueCommentEvent",
    "actor": {
      "id": 4031291,
      "login": "AmplabJenkins",
      "display_login": "AmplabJenkins",
      "gravatar_id": "",
      "url": "https://api.github.com/users/AmplabJenkins",
      "avatar_url": "https://avatars.githubusercontent.com/u/4031291?"
    },
    "repo": {
      "id": 17165658,
      "name": "apache/spark",
      "url": "https://api.github.com/repos/apache/spark"
    },
    "payload": {
      "action": "created",
      "issue": {
        "url": "https://api.github.com/repos/apache/spark/issues/27422",
        "repository_url": "https://api.github.com/repos/apache/spark",
        "labels_url": "https://api.github.com/repos/apache/spark/issues/27422/labels{/name}",
        "comments_url": "https://api.github.com/repos/apache/spark/issues/27422/comments",
        "events_url": "https://api.github.com/repos/apache/spark/issues/27422/events",
        "html_url": "https://github.com/apache/spark/pull/27422",
        "id": 558333185,
        "node_id": "MDExOlB1bGxSZXF1ZXN0MzY5NzQxMTUw",
        "number": 27422,
        "title": "[SPARK-25355][K8S] Add proxy user to driver if present on spark-submit",
        "user": {
          "login": "PedroRossi",
          "id": 12696156,
          "node_id": "MDQ6VXNlcjEyNjk2MTU2",
          "avatar_url": "https://avatars2.githubusercontent.com/u/12696156?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/PedroRossi",
          "html_url": "https://github.com/PedroRossi",
          "followers_url": "https://api.github.com/users/PedroRossi/followers",
          "following_url": "https://api.github.com/users/PedroRossi/following{/other_user}",
          "gists_url": "https://api.github.com/users/PedroRossi/gists{/gist_id}",
          "starred_url": "https://api.github.com/users/PedroRossi/starred{/owner}{/repo}",
          "subscriptions_url": "https://api.github.com/users/PedroRossi/subscriptions",
          "organizations_url": "https://api.github.com/users/PedroRossi/orgs",
          "repos_url": "https://api.github.com/users/PedroRossi/repos",
          "events_url": "https://api.github.com/users/PedroRossi/events{/privacy}",
          "received_events_url": "https://api.github.com/users/PedroRossi/received_events",
          "type": "User",
          "site_admin": false
        },
        "labels": [
          {
            "id": 1406605057,
            "node_id": "MDU6TGFiZWwxNDA2NjA1MDU3",
            "url": "https://api.github.com/repos/apache/spark/labels/KUBERNETES",
            "name": "KUBERNETES",
            "color": "ededed",
            "default": false,
            "description": null
          }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [

        ],
        "milestone": null,
        "comments": 15,
        "created_at": "2020-01-31T19:40:30Z",
        "updated_at": "2020-02-06T15:26:26Z",
        "closed_at": null,
        "author_association": "NONE",
        "pull_request": {
          "url": "https://api.github.com/repos/apache/spark/pulls/27422",
          "html_url": "https://github.com/apache/spark/pull/27422",
          "diff_url": "https://github.com/apache/spark/pull/27422.diff",
          "patch_url": "https://github.com/apache/spark/pull/27422.patch"
        },
        "body": "### What changes were proposed in this pull request?\r\n\r\nThis PR adds the proxy user on the spark-submit command to the childArgs, so the proxy user can be retrieved and used in the KubernetesAplication to add the proxy user in the driver container args\r\n\r\n### Why are the changes needed?\r\n\r\nThe proxy user when used on the spark submit doesn't work on the Kubernetes environment since it doesn't add the `--proxy-user` argument on the driver container and when I added it manually to the Pod definition it worked just fine.\r\n\r\n### Does this PR introduce any user-facing change?\r\n\r\nNo.\r\n\r\n### How was this patch tested?\r\n\r\nTests were added"
      },
      "comment": {
        "url": "https://api.github.com/repos/apache/spark/issues/comments/582957718",
        "html_url": "https://github.com/apache/spark/pull/27422#issuecomment-582957718",
        "issue_url": "https://api.github.com/repos/apache/spark/issues/27422",
        "id": 582957718,
        "node_id": "MDEyOklzc3VlQ29tbWVudDU4Mjk1NzcxOA==",
        "user": {
          "login": "AmplabJenkins",
          "id": 4031291,
          "node_id": "MDQ6VXNlcjQwMzEyOTE=",
          "avatar_url": "https://avatars3.githubusercontent.com/u/4031291?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/AmplabJenkins",
          "html_url": "https://github.com/AmplabJenkins",
          "followers_url": "https://api.github.com/users/AmplabJenkins/followers",
          "following_url": "https://api.github.com/users/AmplabJenkins/following{/other_user}",
          "gists_url": "https://api.github.com/users/AmplabJenkins/gists{/gist_id}",
          "starred_url": "https://api.github.com/users/AmplabJenkins/starred{/owner}{/repo}",
          "subscriptions_url": "https://api.github.com/users/AmplabJenkins/subscriptions",
          "organizations_url": "https://api.github.com/users/AmplabJenkins/orgs",
          "repos_url": "https://api.github.com/users/AmplabJenkins/repos",
          "events_url": "https://api.github.com/users/AmplabJenkins/events{/privacy}",
          "received_events_url": "https://api.github.com/users/AmplabJenkins/received_events",
          "type": "User",
          "site_admin": false
        },
        "created_at": "2020-02-06T15:26:25Z",
        "updated_at": "2020-02-06T15:26:25Z",
        "author_association": "NONE",
        "body": "Test PASSed.\nRefer to this link for build results (access rights to CI server needed): \nhttps://amplab.cs.berkeley.edu/jenkins//job/SparkPullRequestBuilder-K8s/22760/\nTest PASSed."
      }
    },
    "public": true,
    "created_at": "2020-02-06T15:26:26Z",
    "org": {
      "id": 47359,
      "login": "apache",
      "gravatar_id": "",
      "url": "https://api.github.com/orgs/apache",
      "avatar_url": "https://avatars.githubusercontent.com/u/47359?"
    }
  },
  {
    "id": "11453459618",
    "type": "IssueCommentEvent",
    "actor": {
      "id": 4031291,
      "login": "AmplabJenkins",
      "display_login": "AmplabJenkins",
      "gravatar_id": "",
      "url": "https://api.github.com/users/AmplabJenkins",
      "avatar_url": "https://avatars.githubusercontent.com/u/4031291?"
    },
    "repo": {
      "id": 17165658,
      "name": "apache/spark",
      "url": "https://api.github.com/repos/apache/spark"
    },
    "payload": {
      "action": "created",
      "issue": {
        "url": "https://api.github.com/repos/apache/spark/issues/27422",
        "repository_url": "https://api.github.com/repos/apache/spark",
        "labels_url": "https://api.github.com/repos/apache/spark/issues/27422/labels{/name}",
        "comments_url": "https://api.github.com/repos/apache/spark/issues/27422/comments",
        "events_url": "https://api.github.com/repos/apache/spark/issues/27422/events",
        "html_url": "https://github.com/apache/spark/pull/27422",
        "id": 558333185,
        "node_id": "MDExOlB1bGxSZXF1ZXN0MzY5NzQxMTUw",
        "number": 27422,
        "title": "[SPARK-25355][K8S] Add proxy user to driver if present on spark-submit",
        "user": {
          "login": "PedroRossi",
          "id": 12696156,
          "node_id": "MDQ6VXNlcjEyNjk2MTU2",
          "avatar_url": "https://avatars2.githubusercontent.com/u/12696156?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/PedroRossi",
          "html_url": "https://github.com/PedroRossi",
          "followers_url": "https://api.github.com/users/PedroRossi/followers",
          "following_url": "https://api.github.com/users/PedroRossi/following{/other_user}",
          "gists_url": "https://api.github.com/users/PedroRossi/gists{/gist_id}",
          "starred_url": "https://api.github.com/users/PedroRossi/starred{/owner}{/repo}",
          "subscriptions_url": "https://api.github.com/users/PedroRossi/subscriptions",
          "organizations_url": "https://api.github.com/users/PedroRossi/orgs",
          "repos_url": "https://api.github.com/users/PedroRossi/repos",
          "events_url": "https://api.github.com/users/PedroRossi/events{/privacy}",
          "received_events_url": "https://api.github.com/users/PedroRossi/received_events",
          "type": "User",
          "site_admin": false
        },
        "labels": [
          {
            "id": 1406605057,
            "node_id": "MDU6TGFiZWwxNDA2NjA1MDU3",
            "url": "https://api.github.com/repos/apache/spark/labels/KUBERNETES",
            "name": "KUBERNETES",
            "color": "ededed",
            "default": false,
            "description": null
          }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [

        ],
        "milestone": null,
        "comments": 14,
        "created_at": "2020-01-31T19:40:30Z",
        "updated_at": "2020-02-06T15:26:24Z",
        "closed_at": null,
        "author_association": "NONE",
        "pull_request": {
          "url": "https://api.github.com/repos/apache/spark/pulls/27422",
          "html_url": "https://github.com/apache/spark/pull/27422",
          "diff_url": "https://github.com/apache/spark/pull/27422.diff",
          "patch_url": "https://github.com/apache/spark/pull/27422.patch"
        },
        "body": "### What changes were proposed in this pull request?\r\n\r\nThis PR adds the proxy user on the spark-submit command to the childArgs, so the proxy user can be retrieved and used in the KubernetesAplication to add the proxy user in the driver container args\r\n\r\n### Why are the changes needed?\r\n\r\nThe proxy user when used on the spark submit doesn't work on the Kubernetes environment since it doesn't add the `--proxy-user` argument on the driver container and when I added it manually to the Pod definition it worked just fine.\r\n\r\n### Does this PR introduce any user-facing change?\r\n\r\nNo.\r\n\r\n### How was this patch tested?\r\n\r\nTests were added"
      },
      "comment": {
        "url": "https://api.github.com/repos/apache/spark/issues/comments/582957702",
        "html_url": "https://github.com/apache/spark/pull/27422#issuecomment-582957702",
        "issue_url": "https://api.github.com/repos/apache/spark/issues/27422",
        "id": 582957702,
        "node_id": "MDEyOklzc3VlQ29tbWVudDU4Mjk1NzcwMg==",
        "user": {
          "login": "AmplabJenkins",
          "id": 4031291,
          "node_id": "MDQ6VXNlcjQwMzEyOTE=",
          "avatar_url": "https://avatars3.githubusercontent.com/u/4031291?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/AmplabJenkins",
          "html_url": "https://github.com/AmplabJenkins",
          "followers_url": "https://api.github.com/users/AmplabJenkins/followers",
          "following_url": "https://api.github.com/users/AmplabJenkins/following{/other_user}",
          "gists_url": "https://api.github.com/users/AmplabJenkins/gists{/gist_id}",
          "starred_url": "https://api.github.com/users/AmplabJenkins/starred{/owner}{/repo}",
          "subscriptions_url": "https://api.github.com/users/AmplabJenkins/subscriptions",
          "organizations_url": "https://api.github.com/users/AmplabJenkins/orgs",
          "repos_url": "https://api.github.com/users/AmplabJenkins/repos",
          "events_url": "https://api.github.com/users/AmplabJenkins/events{/privacy}",
          "received_events_url": "https://api.github.com/users/AmplabJenkins/received_events",
          "type": "User",
          "site_admin": false
        },
        "created_at": "2020-02-06T15:26:24Z",
        "updated_at": "2020-02-06T15:26:24Z",
        "author_association": "NONE",
        "body": "Merged build finished. Test PASSed."
      }
    },
    "public": true,
    "created_at": "2020-02-06T15:26:25Z",
    "org": {
      "id": 47359,
      "login": "apache",
      "gravatar_id": "",
      "url": "https://api.github.com/orgs/apache",
      "avatar_url": "https://avatars.githubusercontent.com/u/47359?"
    }
  },
  {
    "id": "11453458935",
    "type": "IssueCommentEvent",
    "actor": {
      "id": 8108735,
      "login": "SparkQA",
      "display_login": "SparkQA",
      "gravatar_id": "",
      "url": "https://api.github.com/users/SparkQA",
      "avatar_url": "https://avatars.githubusercontent.com/u/8108735?"
    },
    "repo": {
      "id": 17165658,
      "name": "apache/spark",
      "url": "https://api.github.com/repos/apache/spark"
    },
    "payload": {
      "action": "created",
      "issue": {
        "url": "https://api.github.com/repos/apache/spark/issues/27422",
        "repository_url": "https://api.github.com/repos/apache/spark",
        "labels_url": "https://api.github.com/repos/apache/spark/issues/27422/labels{/name}",
        "comments_url": "https://api.github.com/repos/apache/spark/issues/27422/comments",
        "events_url": "https://api.github.com/repos/apache/spark/issues/27422/events",
        "html_url": "https://github.com/apache/spark/pull/27422",
        "id": 558333185,
        "node_id": "MDExOlB1bGxSZXF1ZXN0MzY5NzQxMTUw",
        "number": 27422,
        "title": "[SPARK-25355][K8S] Add proxy user to driver if present on spark-submit",
        "user": {
          "login": "PedroRossi",
          "id": 12696156,
          "node_id": "MDQ6VXNlcjEyNjk2MTU2",
          "avatar_url": "https://avatars2.githubusercontent.com/u/12696156?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/PedroRossi",
          "html_url": "https://github.com/PedroRossi",
          "followers_url": "https://api.github.com/users/PedroRossi/followers",
          "following_url": "https://api.github.com/users/PedroRossi/following{/other_user}",
          "gists_url": "https://api.github.com/users/PedroRossi/gists{/gist_id}",
          "starred_url": "https://api.github.com/users/PedroRossi/starred{/owner}{/repo}",
          "subscriptions_url": "https://api.github.com/users/PedroRossi/subscriptions",
          "organizations_url": "https://api.github.com/users/PedroRossi/orgs",
          "repos_url": "https://api.github.com/users/PedroRossi/repos",
          "events_url": "https://api.github.com/users/PedroRossi/events{/privacy}",
          "received_events_url": "https://api.github.com/users/PedroRossi/received_events",
          "type": "User",
          "site_admin": false
        },
        "labels": [
          {
            "id": 1406605057,
            "node_id": "MDU6TGFiZWwxNDA2NjA1MDU3",
            "url": "https://api.github.com/repos/apache/spark/labels/KUBERNETES",
            "name": "KUBERNETES",
            "color": "ededed",
            "default": false,
            "description": null
          }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [

        ],
        "milestone": null,
        "comments": 13,
        "created_at": "2020-01-31T19:40:30Z",
        "updated_at": "2020-02-06T15:26:20Z",
        "closed_at": null,
        "author_association": "NONE",
        "pull_request": {
          "url": "https://api.github.com/repos/apache/spark/pulls/27422",
          "html_url": "https://github.com/apache/spark/pull/27422",
          "diff_url": "https://github.com/apache/spark/pull/27422.diff",
          "patch_url": "https://github.com/apache/spark/pull/27422.patch"
        },
        "body": "### What changes were proposed in this pull request?\r\n\r\nThis PR adds the proxy user on the spark-submit command to the childArgs, so the proxy user can be retrieved and used in the KubernetesAplication to add the proxy user in the driver container args\r\n\r\n### Why are the changes needed?\r\n\r\nThe proxy user when used on the spark submit doesn't work on the Kubernetes environment since it doesn't add the `--proxy-user` argument on the driver container and when I added it manually to the Pod definition it worked just fine.\r\n\r\n### Does this PR introduce any user-facing change?\r\n\r\nNo.\r\n\r\n### How was this patch tested?\r\n\r\nTests were added"
      },
      "comment": {
        "url": "https://api.github.com/repos/apache/spark/issues/comments/582957666",
        "html_url": "https://github.com/apache/spark/pull/27422#issuecomment-582957666",
        "issue_url": "https://api.github.com/repos/apache/spark/issues/27422",
        "id": 582957666,
        "node_id": "MDEyOklzc3VlQ29tbWVudDU4Mjk1NzY2Ng==",
        "user": {
          "login": "SparkQA",
          "id": 8108735,
          "node_id": "MDQ6VXNlcjgxMDg3MzU=",
          "avatar_url": "https://avatars1.githubusercontent.com/u/8108735?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/SparkQA",
          "html_url": "https://github.com/SparkQA",
          "followers_url": "https://api.github.com/users/SparkQA/followers",
          "following_url": "https://api.github.com/users/SparkQA/following{/other_user}",
          "gists_url": "https://api.github.com/users/SparkQA/gists{/gist_id}",
          "starred_url": "https://api.github.com/users/SparkQA/starred{/owner}{/repo}",
          "subscriptions_url": "https://api.github.com/users/SparkQA/subscriptions",
          "organizations_url": "https://api.github.com/users/SparkQA/orgs",
          "repos_url": "https://api.github.com/users/SparkQA/repos",
          "events_url": "https://api.github.com/users/SparkQA/events{/privacy}",
          "received_events_url": "https://api.github.com/users/SparkQA/received_events",
          "type": "User",
          "site_admin": false
        },
        "created_at": "2020-02-06T15:26:20Z",
        "updated_at": "2020-02-06T15:26:20Z",
        "author_association": "NONE",
        "body": "Kubernetes integration test status success\nURL: https://amplab.cs.berkeley.edu/jenkins/job/SparkPullRequestBuilder-K8s/22760/\n"
      }
    },
    "public": true,
    "created_at": "2020-02-06T15:26:21Z",
    "org": {
      "id": 47359,
      "login": "apache",
      "gravatar_id": "",
      "url": "https://api.github.com/orgs/apache",
      "avatar_url": "https://avatars.githubusercontent.com/u/47359?"
    }
  },
  {
    "id": "11453435974",
    "type": "PullRequestReviewCommentEvent",
    "actor": {
      "id": 4563792,
      "login": "tgravescs",
      "display_login": "tgravescs",
      "gravatar_id": "",
      "url": "https://api.github.com/users/tgravescs",
      "avatar_url": "https://avatars.githubusercontent.com/u/4563792?"
    },
    "repo": {
      "id": 17165658,
      "name": "apache/spark",
      "url": "https://api.github.com/repos/apache/spark"
    },
    "payload": {
      "action": "created",
      "comment": {
        "url": "https://api.github.com/repos/apache/spark/pulls/comments/375899458",
        "pull_request_review_id": 354536068,
        "id": 375899458,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NTg5OTQ1OA==",
        "diff_hunk": "@@ -314,107 +333,175 @@ private[spark] class ExecutorAllocationManager(\n    * @return the delta in the target number of executors.\n    */\n   private def updateAndSyncNumExecutorsTarget(now: Long): Int = synchronized {\n-    val maxNeeded = maxNumExecutorsNeeded\n-\n     if (initializing) {\n       // Do not change our target while we are still initializing,\n       // Otherwise the first job may have to ramp up unnecessarily\n       0\n-    } else if (maxNeeded < numExecutorsTarget) {\n-      // The target number exceeds the number we actually need, so stop adding new\n-      // executors and inform the cluster manager to cancel the extra pending requests\n-      val oldNumExecutorsTarget = numExecutorsTarget\n-      numExecutorsTarget = math.max(maxNeeded, minNumExecutors)\n-      numExecutorsToAdd = 1\n-\n-      // If the new target has not changed, avoid sending a message to the cluster manager\n-      if (numExecutorsTarget < oldNumExecutorsTarget) {\n-        // We lower the target number of executors but don't actively kill any yet.  Killing is\n-        // controlled separately by an idle timeout.  It's still helpful to reduce the target number\n-        // in case an executor just happens to get lost (eg., bad hardware, or the cluster manager\n-        // preempts it) -- in that case, there is no point in trying to immediately  get a new\n-        // executor, since we wouldn't even use it yet.\n-        client.requestTotalExecutors(numExecutorsTarget, localityAwareTasks, hostToLocalTaskCount)\n-        logDebug(s\"Lowering target number of executors to $numExecutorsTarget (previously \" +\n-          s\"$oldNumExecutorsTarget) because not all requested executors are actually needed\")\n+    } else {\n+      val updatesNeeded = new mutable.HashMap[Int, ExecutorAllocationManager.TargetNumUpdates]\n+\n+      // Update targets for all ResourceProfiles then do a single request to the cluster manager\n+      numExecutorsTargetPerResourceProfileId.foreach { case (rpId, targetExecs) =>\n+        val maxNeeded = maxNumExecutorsNeededPerResourceProfile(rpId)\n+        if (maxNeeded < targetExecs) {\n+          // The target number exceeds the number we actually need, so stop adding new\n+          // executors and inform the cluster manager to cancel the extra pending requests\n+\n+          // We lower the target number of executors but don't actively kill any yet.  Killing is\n+          // controlled separately by an idle timeout.  It's still helpful to reduce\n+          // the target number in case an executor just happens to get lost (eg., bad hardware,\n+          // or the cluster manager preempts it) -- in that case, there is no point in trying\n+          // to immediately  get a new executor, since we wouldn't even use it yet.\n+          decrementExecutorsFromTarget(maxNeeded, rpId, updatesNeeded)\n+        } else if (addTime != NOT_SET && now >= addTime) {\n+          addExecutorsToTarget(maxNeeded, rpId, updatesNeeded)\n+        }\n+      }\n+      doUpdateRequest(updatesNeeded.toMap, now)\n+    }\n+  }\n+\n+  private def addExecutorsToTarget(\n+      maxNeeded: Int,\n+      rpId: Int,\n+      updatesNeeded: mutable.HashMap[Int, ExecutorAllocationManager.TargetNumUpdates]): Int = {\n+    updateTargetExecs(addExecutors, maxNeeded, rpId, updatesNeeded)\n+  }\n+\n+  private def decrementExecutorsFromTarget(\n+      maxNeeded: Int,\n+      rpId: Int,\n+      updatesNeeded: mutable.HashMap[Int, ExecutorAllocationManager.TargetNumUpdates]): Int = {\n+    updateTargetExecs(decrementExecutors, maxNeeded, rpId, updatesNeeded)\n+  }\n+\n+  private def updateTargetExecs(\n+      updateTargetFn: (Int, Int) => Int,\n+      maxNeeded: Int,\n+      rpId: Int,\n+      updatesNeeded: mutable.HashMap[Int, ExecutorAllocationManager.TargetNumUpdates]): Int = {\n+    val oldNumExecutorsTarget = numExecutorsTargetPerResourceProfileId(rpId)\n+    // update the target number (add or remove)\n+    val delta = updateTargetFn(maxNeeded, rpId)\n+    if (delta != 0) {\n+      updatesNeeded(rpId) = ExecutorAllocationManager.TargetNumUpdates(delta, oldNumExecutorsTarget)\n+    }\n+    delta\n+  }\n+\n+  private def doUpdateRequest(\n+      updates: Map[Int, ExecutorAllocationManager.TargetNumUpdates],\n+      now: Long): Int = {\n+    // Only call cluster manager if target has changed.\n+    if (updates.size > 0) {\n+      val requestAcknowledged = try {\n+        logDebug(\"requesting updates: \" + updates)\n+        testing ||\n+          client.requestTotalExecutors(\n+            numExecutorsTargetPerResourceProfileId.toMap,\n+            numLocalityAwareTasksPerResourceProfileId.toMap,\n+            rpIdToHostToLocalTaskCount)\n+      } catch {\n+        case NonFatal(e) =>\n+          // Use INFO level so the error it doesn't show up by default in shells.\n+          // Errors here are more commonly caused by YARN AM restarts, which is a recoverable\n+          // issue, and generate a lot of noisy output.\n+          logInfo(\"Error reaching cluster manager.\", e)\n+          false\n+      }\n+      if (requestAcknowledged) {\n+        // have to go through all resource profiles that changed\n+        var totalDelta = 0\n+        updates.foreach { case (rpId, targetNum) =>\n+          val delta = targetNum.delta\n+          totalDelta += delta\n+          if (delta > 0) {\n+            val executorsString = \"executor\" + { if (delta > 1) \"s\" else \"\" }\n+            logInfo(s\"Requesting $delta new $executorsString because tasks are backlogged \" +\n+              s\"(new desired total will be ${numExecutorsTargetPerResourceProfileId(rpId)} \" +\n+              s\"for resource profile id: ${rpId})\")\n+            numExecutorsToAddPerResourceProfileId(rpId) =\n+              if (delta == numExecutorsToAddPerResourceProfileId(rpId)) {\n+                numExecutorsToAddPerResourceProfileId(rpId) * 2\n+              } else {\n+                1\n+              }\n+            logDebug(s\"Starting timer to add more executors (to \" +\n+              s\"expire in $sustainedSchedulerBacklogTimeoutS seconds)\")\n+            addTime = now + TimeUnit.SECONDS.toNanos(sustainedSchedulerBacklogTimeoutS)\n+          } else {\n+            logDebug(s\"Lowering target number of executors to\" +\n+              s\" ${numExecutorsTargetPerResourceProfileId(rpId)} (previously \" +\n+              s\"$targetNum.oldNumExecutorsTarget for resource profile id: ${rpId}) \" +\n+              \"because not all requested executors \" +\n+              \"are actually needed\")\n+          }\n+        }\n+        totalDelta\n+      } else {\n+        // request was for all profiles so we have to go through all to reset to old num\n+        updates.foreach { case (rpId, targetNum) =>\n+          logWarning(\"Unable to reach the cluster manager to request more executors!\")\n+          numExecutorsTargetPerResourceProfileId(rpId) = targetNum.oldNumExecutorsTarget\n+        }\n+        0\n       }\n-      numExecutorsTarget - oldNumExecutorsTarget\n-    } else if (addTime != NOT_SET && now >= addTime) {\n-      val delta = addExecutors(maxNeeded)\n-      logDebug(s\"Starting timer to add more executors (to \" +\n-        s\"expire in $sustainedSchedulerBacklogTimeoutS seconds)\")\n-      addTime = now + TimeUnit.SECONDS.toNanos(sustainedSchedulerBacklogTimeoutS)\n-      delta\n     } else {\n+      logDebug(\"No change in number of executors\")\n       0\n     }\n   }\n \n+  private def decrementExecutors(maxNeeded: Int, rpId: Int): Int = {\n+    val oldNumExecutorsTarget = numExecutorsTargetPerResourceProfileId(rpId)\n+    numExecutorsTargetPerResourceProfileId(rpId) = math.max(maxNeeded, minNumExecutors)\n+    numExecutorsToAddPerResourceProfileId(rpId) = 1\n+    numExecutorsTargetPerResourceProfileId(rpId) - oldNumExecutorsTarget\n+  }\n+\n   /**\n-   * Request a number of executors from the cluster manager.\n+   * Update the target number of executors and figure out how many to add.\n    * If the cap on the number of executors is reached, give up and reset the\n    * number of executors to add next round instead of continuing to double it.\n    *\n    * @param maxNumExecutorsNeeded the maximum number of executors all currently running or pending\n    *                              tasks could fill\n+   * @param rpId                  the ResourceProfile id of the executors\n    * @return the number of additional executors actually requested.\n    */\n-  private def addExecutors(maxNumExecutorsNeeded: Int): Int = {\n+  private def addExecutors(maxNumExecutorsNeeded: Int, rpId: Int): Int = {\n+    val oldNumExecutorsTarget = numExecutorsTargetPerResourceProfileId(rpId)\n     // Do not request more executors if it would put our target over the upper bound\n-    if (numExecutorsTarget >= maxNumExecutors) {\n-      logDebug(s\"Not adding executors because our current target total \" +\n-        s\"is already $numExecutorsTarget (limit $maxNumExecutors)\")\n-      numExecutorsToAdd = 1\n+    // this is doing a max check per ResourceProfile\n+    if (oldNumExecutorsTarget >= maxNumExecutors) {\n+      logDebug(\"Not adding executors because our current target total \" +\n+        s\"is already ${oldNumExecutorsTarget} (limit $maxNumExecutors)\")\n+      numExecutorsToAddPerResourceProfileId(rpId) = 1\n       return 0\n     }\n-\n-    val oldNumExecutorsTarget = numExecutorsTarget\n     // There's no point in wasting time ramping up to the number of executors we already have, so\n     // make sure our target is at least as much as our current allocation:\n-    numExecutorsTarget = math.max(numExecutorsTarget, executorMonitor.executorCount)\n+    var numExecutorsTarget = math.max(numExecutorsTargetPerResourceProfileId(rpId),\n+        executorMonitor.executorCountWithResourceProfile(rpId))\n     // Boost our target with the number to add for this round:\n-    numExecutorsTarget += numExecutorsToAdd\n+    numExecutorsTarget += numExecutorsToAddPerResourceProfileId.getOrElseUpdate(rpId, 1)",
        "path": "core/src/main/scala/org/apache/spark/ExecutorAllocationManager.scala",
        "position": 364,
        "original_position": 364,
        "commit_id": "87aab301d533e4766149f340f92c1e28cfad046c",
        "original_commit_id": "87aab301d533e4766149f340f92c1e28cfad046c",
        "user": {
          "login": "tgravescs",
          "id": 4563792,
          "node_id": "MDQ6VXNlcjQ1NjM3OTI=",
          "avatar_url": "https://avatars2.githubusercontent.com/u/4563792?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/tgravescs",
          "html_url": "https://github.com/tgravescs",
          "followers_url": "https://api.github.com/users/tgravescs/followers",
          "following_url": "https://api.github.com/users/tgravescs/following{/other_user}",
          "gists_url": "https://api.github.com/users/tgravescs/gists{/gist_id}",
          "starred_url": "https://api.github.com/users/tgravescs/starred{/owner}{/repo}",
          "subscriptions_url": "https://api.github.com/users/tgravescs/subscriptions",
          "organizations_url": "https://api.github.com/users/tgravescs/orgs",
          "repos_url": "https://api.github.com/users/tgravescs/repos",
          "events_url": "https://api.github.com/users/tgravescs/events{/privacy}",
          "received_events_url": "https://api.github.com/users/tgravescs/received_events",
          "type": "User",
          "site_admin": false
        },
        "body": "Yes it should be because we initialize the default profile to 1 at the beginning.  I think I was just being cautious and just in case. The addExecutors can be called before any stage runs since you can have an initial number so if we hadn't initialized default profile it would be required.  \r\nI can remove if you would like?",
        "created_at": "2020-02-06T15:24:03Z",
        "updated_at": "2020-02-06T15:24:04Z",
        "html_url": "https://github.com/apache/spark/pull/27313#discussion_r375899458",
        "pull_request_url": "https://api.github.com/repos/apache/spark/pulls/27313",
        "author_association": "CONTRIBUTOR",
        "_links": {
          "self": {
            "href": "https://api.github.com/repos/apache/spark/pulls/comments/375899458"
          },
          "html": {
            "href": "https://github.com/apache/spark/pull/27313#discussion_r375899458"
          },
          "pull_request": {
            "href": "https://api.github.com/repos/apache/spark/pulls/27313"
          }
        },
        "in_reply_to_id": 375105609
      },
      "pull_request": {
        "url": "https://api.github.com/repos/apache/spark/pulls/27313",
        "id": 365492867,
        "node_id": "MDExOlB1bGxSZXF1ZXN0MzY1NDkyODY3",
        "html_url": "https://github.com/apache/spark/pull/27313",
        "diff_url": "https://github.com/apache/spark/pull/27313.diff",
        "patch_url": "https://github.com/apache/spark/pull/27313.patch",
        "issue_url": "https://api.github.com/repos/apache/spark/issues/27313",
        "number": 27313,
        "state": "open",
        "locked": false,
        "title": "[SPARK-29148][CORE] Add stage level scheduling dynamic allocation and scheduler backend changes",
        "user": {
          "login": "tgravescs",
          "id": 4563792,
          "node_id": "MDQ6VXNlcjQ1NjM3OTI=",
          "avatar_url": "https://avatars2.githubusercontent.com/u/4563792?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/tgravescs",
          "html_url": "https://github.com/tgravescs",
          "followers_url": "https://api.github.com/users/tgravescs/followers",
          "following_url": "https://api.github.com/users/tgravescs/following{/other_user}",
          "gists_url": "https://api.github.com/users/tgravescs/gists{/gist_id}",
          "starred_url": "https://api.github.com/users/tgravescs/starred{/owner}{/repo}",
          "subscriptions_url": "https://api.github.com/users/tgravescs/subscriptions",
          "organizations_url": "https://api.github.com/users/tgravescs/orgs",
          "repos_url": "https://api.github.com/users/tgravescs/repos",
          "events_url": "https://api.github.com/users/tgravescs/events{/privacy}",
          "received_events_url": "https://api.github.com/users/tgravescs/received_events",
          "type": "User",
          "site_admin": false
        },
        "body": "<!--\r\nThanks for sending a pull request!  Here are some tips for you:\r\n  1. If this is your first time, please read our contributor guidelines: https://spark.apache.org/contributing.html\r\n  2. Ensure you have added or run the appropriate tests for your PR: https://spark.apache.org/developer-tools.html\r\n  3. If the PR is unfinished, add '[WIP]' in your PR title, e.g., '[WIP][SPARK-XXXX] Your PR title ...'.\r\n  4. Be sure to keep the PR description updated to reflect all changes.\r\n  5. Please write your PR title to summarize what this PR proposes.\r\n  6. If possible, provide a concise example to reproduce the issue for a faster review.\r\n-->\r\n\r\n### What changes were proposed in this pull request?\r\n<!--\r\nPlease clarify what changes you are proposing. The purpose of this section is to outline the changes and how this PR fixes the issue. \r\nIf possible, please consider writing useful notes for better and faster reviews in your PR. See the examples below.\r\n  1. If you refactor some codes with changing classes, showing the class hierarchy will help reviewers.\r\n  2. If you fix some SQL features, you can provide some references of other DBMSes.\r\n  3. If there is design documentation, please add the link.\r\n  4. If there is a discussion in the mailing list, please add the link.\r\n-->\r\n\r\nThis is another PR for stage level scheduling. In particular this adds changes to the dynamic allocation manager and the scheduler backend to be able to track what executors are needed per ResourceProfile.  Note the api is still private to Spark until the entire feature gets in, so this functionality will be there but only usable by tests for profiles other then the DefaultProfile.\r\n\r\nThe main changes here are simply tracking things on a ResourceProfile basis as well as sending the executor requests to the scheduler backend for all ResourceProfiles. \r\n\r\nI introduce a ResourceProfileManager in this PR that will track all the actual ResourceProfile objects so that we can keep them all in a single place and just pass around and use in datastructures the resource profile id. The resource profile id can be used with the ResourceProfileManager to get the actual ResourceProfile contents. \r\n\r\nThere are various places in the code that use executor \"slots\" for things.  The ResourceProfile adds functionality to keep that calculation in it.   This logic is more complex then it should due to standalone mode and mesos coarse grained not setting the executor cores config. They default to all cores on the worker, so calculating slots is harder there.  \r\nThis PR keeps the functionality to make the cores the limiting resource because the scheduler still uses that for \"slots\" for a few things.\r\n\r\nThis PR does also add the resource profile id to the Stage and stage info classes to be able to test things easier.   That full set of changes will come with the scheduler PR that will be after this one.\r\n\r\nThe PR stops at the scheduler backend pieces for the cluster manager and the real YARN support hasn't been added in this PR, that again will be in a separate PR, so this has a few of the API changes up to the cluster manager and then just uses the default profile requests to continue.\r\n\r\nThe code for the entire feature is here for reference: https://github.com/apache/spark/pull/27053/files although it needs to be upmerged again as well.\r\n\r\n### Why are the changes needed?\r\n<!--\r\nPlease clarify why the changes are needed. For instance,\r\n  1. If you propose a new API, clarify the use case for a new API.\r\n  2. If you fix a bug, you can clarify why it is a bug.\r\n-->\r\n\r\nNeeded for stage level scheduling feature.  \r\n\r\n### Does this PR introduce any user-facing change?\r\n<!--\r\nIf yes, please clarify the previous behavior and the change this PR proposes - provide the console output, description and/or an example to show the behavior difference if possible.\r\nIf no, write 'No'.\r\n-->\r\n\r\nNo user facing api changes added here.\r\n\r\n### How was this patch tested?\r\n<!--\r\nIf tests were added, say they were added here. Please make sure to add some test cases that check the changes thoroughly including negative and positive cases if possible.\r\nIf it was tested in a way different from regular unit tests, please clarify how you tested step by step, ideally copy and paste-able, so that other reviewers can test and check, and descendants can verify in the future.\r\nIf tests were not added, please describe why they were not added and/or why it was difficult to add.\r\n-->\r\n\r\nLots of unit tests and manually testing. I tested on yarn, k8s, standalone, local modes. Ran both failure and success cases.",
        "created_at": "2020-01-21T20:20:14Z",
        "updated_at": "2020-02-06T15:24:04Z",
        "closed_at": null,
        "merged_at": null,
        "merge_commit_sha": "d6d3d02941415f527b0e4b27c853837e4bbc722b",
        "assignee": null,
        "assignees": [

        ],
        "requested_reviewers": [

        ],
        "requested_teams": [

        ],
        "labels": [
          {
            "id": 1406606875,
            "node_id": "MDU6TGFiZWwxNDA2NjA2ODc1",
            "url": "https://api.github.com/repos/apache/spark/labels/SCHEDULER",
            "name": "SCHEDULER",
            "color": "ededed",
            "default": false,
            "description": null
          }
        ],
        "milestone": null,
        "commits_url": "https://api.github.com/repos/apache/spark/pulls/27313/commits",
        "review_comments_url": "https://api.github.com/repos/apache/spark/pulls/27313/comments",
        "review_comment_url": "https://api.github.com/repos/apache/spark/pulls/comments{/number}",
        "comments_url": "https://api.github.com/repos/apache/spark/issues/27313/comments",
        "statuses_url": "https://api.github.com/repos/apache/spark/statuses/87aab301d533e4766149f340f92c1e28cfad046c",
        "head": {
          "label": "tgravescs:SPARK-29148",
          "ref": "SPARK-29148",
          "sha": "87aab301d533e4766149f340f92c1e28cfad046c",
          "user": {
            "login": "tgravescs",
            "id": 4563792,
            "node_id": "MDQ6VXNlcjQ1NjM3OTI=",
            "avatar_url": "https://avatars2.githubusercontent.com/u/4563792?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/tgravescs",
            "html_url": "https://github.com/tgravescs",
            "followers_url": "https://api.github.com/users/tgravescs/followers",
            "following_url": "https://api.github.com/users/tgravescs/following{/other_user}",
            "gists_url": "https://api.github.com/users/tgravescs/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/tgravescs/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/tgravescs/subscriptions",
            "organizations_url": "https://api.github.com/users/tgravescs/orgs",
            "repos_url": "https://api.github.com/users/tgravescs/repos",
            "events_url": "https://api.github.com/users/tgravescs/events{/privacy}",
            "received_events_url": "https://api.github.com/users/tgravescs/received_events",
            "type": "User",
            "site_admin": false
          },
          "repo": {
            "id": 17249522,
            "node_id": "MDEwOlJlcG9zaXRvcnkxNzI0OTUyMg==",
            "name": "spark",
            "full_name": "tgravescs/spark",
            "private": false,
            "owner": {
              "login": "tgravescs",
              "id": 4563792,
              "node_id": "MDQ6VXNlcjQ1NjM3OTI=",
              "avatar_url": "https://avatars2.githubusercontent.com/u/4563792?v=4",
              "gravatar_id": "",
              "url": "https://api.github.com/users/tgravescs",
              "html_url": "https://github.com/tgravescs",
              "followers_url": "https://api.github.com/users/tgravescs/followers",
              "following_url": "https://api.github.com/users/tgravescs/following{/other_user}",
              "gists_url": "https://api.github.com/users/tgravescs/gists{/gist_id}",
              "starred_url": "https://api.github.com/users/tgravescs/starred{/owner}{/repo}",
              "subscriptions_url": "https://api.github.com/users/tgravescs/subscriptions",
              "organizations_url": "https://api.github.com/users/tgravescs/orgs",
              "repos_url": "https://api.github.com/users/tgravescs/repos",
              "events_url": "https://api.github.com/users/tgravescs/events{/privacy}",
              "received_events_url": "https://api.github.com/users/tgravescs/received_events",
              "type": "User",
              "site_admin": false
            },
            "html_url": "https://github.com/tgravescs/spark",
            "description": "Mirror of Apache Spark",
            "fork": true,
            "url": "https://api.github.com/repos/tgravescs/spark",
            "forks_url": "https://api.github.com/repos/tgravescs/spark/forks",
            "keys_url": "https://api.github.com/repos/tgravescs/spark/keys{/key_id}",
            "collaborators_url": "https://api.github.com/repos/tgravescs/spark/collaborators{/collaborator}",
            "teams_url": "https://api.github.com/repos/tgravescs/spark/teams",
            "hooks_url": "https://api.github.com/repos/tgravescs/spark/hooks",
            "issue_events_url": "https://api.github.com/repos/tgravescs/spark/issues/events{/number}",
            "events_url": "https://api.github.com/repos/tgravescs/spark/events",
            "assignees_url": "https://api.github.com/repos/tgravescs/spark/assignees{/user}",
            "branches_url": "https://api.github.com/repos/tgravescs/spark/branches{/branch}",
            "tags_url": "https://api.github.com/repos/tgravescs/spark/tags",
            "blobs_url": "https://api.github.com/repos/tgravescs/spark/git/blobs{/sha}",
            "git_tags_url": "https://api.github.com/repos/tgravescs/spark/git/tags{/sha}",
            "git_refs_url": "https://api.github.com/repos/tgravescs/spark/git/refs{/sha}",
            "trees_url": "https://api.github.com/repos/tgravescs/spark/git/trees{/sha}",
            "statuses_url": "https://api.github.com/repos/tgravescs/spark/statuses/{sha}",
            "languages_url": "https://api.github.com/repos/tgravescs/spark/languages",
            "stargazers_url": "https://api.github.com/repos/tgravescs/spark/stargazers",
            "contributors_url": "https://api.github.com/repos/tgravescs/spark/contributors",
            "subscribers_url": "https://api.github.com/repos/tgravescs/spark/subscribers",
            "subscription_url": "https://api.github.com/repos/tgravescs/spark/subscription",
            "commits_url": "https://api.github.com/repos/tgravescs/spark/commits{/sha}",
            "git_commits_url": "https://api.github.com/repos/tgravescs/spark/git/commits{/sha}",
            "comments_url": "https://api.github.com/repos/tgravescs/spark/comments{/number}",
            "issue_comment_url": "https://api.github.com/repos/tgravescs/spark/issues/comments{/number}",
            "contents_url": "https://api.github.com/repos/tgravescs/spark/contents/{+path}",
            "compare_url": "https://api.github.com/repos/tgravescs/spark/compare/{base}...{head}",
            "merges_url": "https://api.github.com/repos/tgravescs/spark/merges",
            "archive_url": "https://api.github.com/repos/tgravescs/spark/{archive_format}{/ref}",
            "downloads_url": "https://api.github.com/repos/tgravescs/spark/downloads",
            "issues_url": "https://api.github.com/repos/tgravescs/spark/issues{/number}",
            "pulls_url": "https://api.github.com/repos/tgravescs/spark/pulls{/number}",
            "milestones_url": "https://api.github.com/repos/tgravescs/spark/milestones{/number}",
            "notifications_url": "https://api.github.com/repos/tgravescs/spark/notifications{?since,all,participating}",
            "labels_url": "https://api.github.com/repos/tgravescs/spark/labels{/name}",
            "releases_url": "https://api.github.com/repos/tgravescs/spark/releases{/id}",
            "deployments_url": "https://api.github.com/repos/tgravescs/spark/deployments",
            "created_at": "2014-02-27T13:26:24Z",
            "updated_at": "2019-12-12T03:01:23Z",
            "pushed_at": "2020-02-04T15:26:23Z",
            "git_url": "git://github.com/tgravescs/spark.git",
            "ssh_url": "git@github.com:tgravescs/spark.git",
            "clone_url": "https://github.com/tgravescs/spark.git",
            "svn_url": "https://github.com/tgravescs/spark",
            "homepage": null,
            "size": 296948,
            "stargazers_count": 1,
            "watchers_count": 1,
            "language": "Scala",
            "has_issues": false,
            "has_projects": true,
            "has_downloads": true,
            "has_wiki": false,
            "has_pages": false,
            "forks_count": 0,
            "mirror_url": null,
            "archived": false,
            "disabled": false,
            "open_issues_count": 2,
            "license": {
              "key": "apache-2.0",
              "name": "Apache License 2.0",
              "spdx_id": "Apache-2.0",
              "url": "https://api.github.com/licenses/apache-2.0",
              "node_id": "MDc6TGljZW5zZTI="
            },
            "forks": 0,
            "open_issues": 2,
            "watchers": 1,
            "default_branch": "master"
          }
        },
        "base": {
          "label": "apache:master",
          "ref": "master",
          "sha": "a4912cee615314e9578e6ab4eae25f147feacbd5",
          "user": {
            "login": "apache",
            "id": 47359,
            "node_id": "MDEyOk9yZ2FuaXphdGlvbjQ3MzU5",
            "avatar_url": "https://avatars0.githubusercontent.com/u/47359?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/apache",
            "html_url": "https://github.com/apache",
            "followers_url": "https://api.github.com/users/apache/followers",
            "following_url": "https://api.github.com/users/apache/following{/other_user}",
            "gists_url": "https://api.github.com/users/apache/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/apache/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/apache/subscriptions",
            "organizations_url": "https://api.github.com/users/apache/orgs",
            "repos_url": "https://api.github.com/users/apache/repos",
            "events_url": "https://api.github.com/users/apache/events{/privacy}",
            "received_events_url": "https://api.github.com/users/apache/received_events",
            "type": "Organization",
            "site_admin": false
          },
          "repo": {
            "id": 17165658,
            "node_id": "MDEwOlJlcG9zaXRvcnkxNzE2NTY1OA==",
            "name": "spark",
            "full_name": "apache/spark",
            "private": false,
            "owner": {
              "login": "apache",
              "id": 47359,
              "node_id": "MDEyOk9yZ2FuaXphdGlvbjQ3MzU5",
              "avatar_url": "https://avatars0.githubusercontent.com/u/47359?v=4",
              "gravatar_id": "",
              "url": "https://api.github.com/users/apache",
              "html_url": "https://github.com/apache",
              "followers_url": "https://api.github.com/users/apache/followers",
              "following_url": "https://api.github.com/users/apache/following{/other_user}",
              "gists_url": "https://api.github.com/users/apache/gists{/gist_id}",
              "starred_url": "https://api.github.com/users/apache/starred{/owner}{/repo}",
              "subscriptions_url": "https://api.github.com/users/apache/subscriptions",
              "organizations_url": "https://api.github.com/users/apache/orgs",
              "repos_url": "https://api.github.com/users/apache/repos",
              "events_url": "https://api.github.com/users/apache/events{/privacy}",
              "received_events_url": "https://api.github.com/users/apache/received_events",
              "type": "Organization",
              "site_admin": false
            },
            "html_url": "https://github.com/apache/spark",
            "description": "Apache Spark",
            "fork": false,
            "url": "https://api.github.com/repos/apache/spark",
            "forks_url": "https://api.github.com/repos/apache/spark/forks",
            "keys_url": "https://api.github.com/repos/apache/spark/keys{/key_id}",
            "collaborators_url": "https://api.github.com/repos/apache/spark/collaborators{/collaborator}",
            "teams_url": "https://api.github.com/repos/apache/spark/teams",
            "hooks_url": "https://api.github.com/repos/apache/spark/hooks",
            "issue_events_url": "https://api.github.com/repos/apache/spark/issues/events{/number}",
            "events_url": "https://api.github.com/repos/apache/spark/events",
            "assignees_url": "https://api.github.com/repos/apache/spark/assignees{/user}",
            "branches_url": "https://api.github.com/repos/apache/spark/branches{/branch}",
            "tags_url": "https://api.github.com/repos/apache/spark/tags",
            "blobs_url": "https://api.github.com/repos/apache/spark/git/blobs{/sha}",
            "git_tags_url": "https://api.github.com/repos/apache/spark/git/tags{/sha}",
            "git_refs_url": "https://api.github.com/repos/apache/spark/git/refs{/sha}",
            "trees_url": "https://api.github.com/repos/apache/spark/git/trees{/sha}",
            "statuses_url": "https://api.github.com/repos/apache/spark/statuses/{sha}",
            "languages_url": "https://api.github.com/repos/apache/spark/languages",
            "stargazers_url": "https://api.github.com/repos/apache/spark/stargazers",
            "contributors_url": "https://api.github.com/repos/apache/spark/contributors",
            "subscribers_url": "https://api.github.com/repos/apache/spark/subscribers",
            "subscription_url": "https://api.github.com/repos/apache/spark/subscription",
            "commits_url": "https://api.github.com/repos/apache/spark/commits{/sha}",
            "git_commits_url": "https://api.github.com/repos/apache/spark/git/commits{/sha}",
            "comments_url": "https://api.github.com/repos/apache/spark/comments{/number}",
            "issue_comment_url": "https://api.github.com/repos/apache/spark/issues/comments{/number}",
            "contents_url": "https://api.github.com/repos/apache/spark/contents/{+path}",
            "compare_url": "https://api.github.com/repos/apache/spark/compare/{base}...{head}",
            "merges_url": "https://api.github.com/repos/apache/spark/merges",
            "archive_url": "https://api.github.com/repos/apache/spark/{archive_format}{/ref}",
            "downloads_url": "https://api.github.com/repos/apache/spark/downloads",
            "issues_url": "https://api.github.com/repos/apache/spark/issues{/number}",
            "pulls_url": "https://api.github.com/repos/apache/spark/pulls{/number}",
            "milestones_url": "https://api.github.com/repos/apache/spark/milestones{/number}",
            "notifications_url": "https://api.github.com/repos/apache/spark/notifications{?since,all,participating}",
            "labels_url": "https://api.github.com/repos/apache/spark/labels{/name}",
            "releases_url": "https://api.github.com/repos/apache/spark/releases{/id}",
            "deployments_url": "https://api.github.com/repos/apache/spark/deployments",
            "created_at": "2014-02-25T08:00:08Z",
            "updated_at": "2020-02-06T12:54:19Z",
            "pushed_at": "2020-02-06T14:36:05Z",
            "git_url": "git://github.com/apache/spark.git",
            "ssh_url": "git@github.com:apache/spark.git",
            "clone_url": "https://github.com/apache/spark.git",
            "svn_url": "https://github.com/apache/spark",
            "homepage": "",
            "size": 320147,
            "stargazers_count": 25062,
            "watchers_count": 25062,
            "language": "Scala",
            "has_issues": false,
            "has_projects": true,
            "has_downloads": true,
            "has_wiki": false,
            "has_pages": false,
            "forks_count": 21084,
            "mirror_url": null,
            "archived": false,
            "disabled": false,
            "open_issues_count": 276,
            "license": {
              "key": "apache-2.0",
              "name": "Apache License 2.0",
              "spdx_id": "Apache-2.0",
              "url": "https://api.github.com/licenses/apache-2.0",
              "node_id": "MDc6TGljZW5zZTI="
            },
            "forks": 21084,
            "open_issues": 276,
            "watchers": 25062,
            "default_branch": "master"
          }
        },
        "_links": {
          "self": {
            "href": "https://api.github.com/repos/apache/spark/pulls/27313"
          },
          "html": {
            "href": "https://github.com/apache/spark/pull/27313"
          },
          "issue": {
            "href": "https://api.github.com/repos/apache/spark/issues/27313"
          },
          "comments": {
            "href": "https://api.github.com/repos/apache/spark/issues/27313/comments"
          },
          "review_comments": {
            "href": "https://api.github.com/repos/apache/spark/pulls/27313/comments"
          },
          "review_comment": {
            "href": "https://api.github.com/repos/apache/spark/pulls/comments{/number}"
          },
          "commits": {
            "href": "https://api.github.com/repos/apache/spark/pulls/27313/commits"
          },
          "statuses": {
            "href": "https://api.github.com/repos/apache/spark/statuses/87aab301d533e4766149f340f92c1e28cfad046c"
          }
        },
        "author_association": "CONTRIBUTOR"
      }
    },
    "public": true,
    "created_at": "2020-02-06T15:24:03Z",
    "org": {
      "id": 47359,
      "login": "apache",
      "gravatar_id": "",
      "url": "https://api.github.com/orgs/apache",
      "avatar_url": "https://avatars.githubusercontent.com/u/47359?"
    }
  },
  {
    "id": "11453356844",
    "type": "PullRequestReviewCommentEvent",
    "actor": {
      "id": 4563792,
      "login": "tgravescs",
      "display_login": "tgravescs",
      "gravatar_id": "",
      "url": "https://api.github.com/users/tgravescs",
      "avatar_url": "https://avatars.githubusercontent.com/u/4563792?"
    },
    "repo": {
      "id": 17165658,
      "name": "apache/spark",
      "url": "https://api.github.com/repos/apache/spark"
    },
    "payload": {
      "action": "created",
      "comment": {
        "url": "https://api.github.com/repos/apache/spark/pulls/comments/375894528",
        "pull_request_review_id": 354529530,
        "id": 375894528,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NTg5NDUyOA==",
        "diff_hunk": "@@ -233,7 +240,10 @@ private[spark] class ExecutorAllocationManager(\n     }\n     executor.scheduleWithFixedDelay(scheduleTask, 0, intervalMillis, TimeUnit.MILLISECONDS)\n \n-    client.requestTotalExecutors(numExecutorsTarget, localityAwareTasks, hostToLocalTaskCount)\n+    client.requestTotalExecutors(\n+      numExecutorsTargetPerResourceProfileId.toMap,\n+      numLocalityAwareTasksPerResourceProfileId.toMap,",
        "path": "core/src/main/scala/org/apache/spark/ExecutorAllocationManager.scala",
        "position": 110,
        "original_position": 110,
        "commit_id": "87aab301d533e4766149f340f92c1e28cfad046c",
        "original_commit_id": "87aab301d533e4766149f340f92c1e28cfad046c",
        "user": {
          "login": "tgravescs",
          "id": 4563792,
          "node_id": "MDQ6VXNlcjQ1NjM3OTI=",
          "avatar_url": "https://avatars2.githubusercontent.com/u/4563792?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/tgravescs",
          "html_url": "https://github.com/tgravescs",
          "followers_url": "https://api.github.com/users/tgravescs/followers",
          "following_url": "https://api.github.com/users/tgravescs/following{/other_user}",
          "gists_url": "https://api.github.com/users/tgravescs/gists{/gist_id}",
          "starred_url": "https://api.github.com/users/tgravescs/starred{/owner}{/repo}",
          "subscriptions_url": "https://api.github.com/users/tgravescs/subscriptions",
          "organizations_url": "https://api.github.com/users/tgravescs/orgs",
          "repos_url": "https://api.github.com/users/tgravescs/repos",
          "events_url": "https://api.github.com/users/tgravescs/events{/privacy}",
          "received_events_url": "https://api.github.com/users/tgravescs/received_events",
          "type": "User",
          "site_admin": false
        },
        "body": "yes good catch",
        "created_at": "2020-02-06T15:16:12Z",
        "updated_at": "2020-02-06T15:16:12Z",
        "html_url": "https://github.com/apache/spark/pull/27313#discussion_r375894528",
        "pull_request_url": "https://api.github.com/repos/apache/spark/pulls/27313",
        "author_association": "CONTRIBUTOR",
        "_links": {
          "self": {
            "href": "https://api.github.com/repos/apache/spark/pulls/comments/375894528"
          },
          "html": {
            "href": "https://github.com/apache/spark/pull/27313#discussion_r375894528"
          },
          "pull_request": {
            "href": "https://api.github.com/repos/apache/spark/pulls/27313"
          }
        },
        "in_reply_to_id": 375096175
      },
      "pull_request": {
        "url": "https://api.github.com/repos/apache/spark/pulls/27313",
        "id": 365492867,
        "node_id": "MDExOlB1bGxSZXF1ZXN0MzY1NDkyODY3",
        "html_url": "https://github.com/apache/spark/pull/27313",
        "diff_url": "https://github.com/apache/spark/pull/27313.diff",
        "patch_url": "https://github.com/apache/spark/pull/27313.patch",
        "issue_url": "https://api.github.com/repos/apache/spark/issues/27313",
        "number": 27313,
        "state": "open",
        "locked": false,
        "title": "[SPARK-29148][CORE] Add stage level scheduling dynamic allocation and scheduler backend changes",
        "user": {
          "login": "tgravescs",
          "id": 4563792,
          "node_id": "MDQ6VXNlcjQ1NjM3OTI=",
          "avatar_url": "https://avatars2.githubusercontent.com/u/4563792?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/tgravescs",
          "html_url": "https://github.com/tgravescs",
          "followers_url": "https://api.github.com/users/tgravescs/followers",
          "following_url": "https://api.github.com/users/tgravescs/following{/other_user}",
          "gists_url": "https://api.github.com/users/tgravescs/gists{/gist_id}",
          "starred_url": "https://api.github.com/users/tgravescs/starred{/owner}{/repo}",
          "subscriptions_url": "https://api.github.com/users/tgravescs/subscriptions",
          "organizations_url": "https://api.github.com/users/tgravescs/orgs",
          "repos_url": "https://api.github.com/users/tgravescs/repos",
          "events_url": "https://api.github.com/users/tgravescs/events{/privacy}",
          "received_events_url": "https://api.github.com/users/tgravescs/received_events",
          "type": "User",
          "site_admin": false
        },
        "body": "<!--\r\nThanks for sending a pull request!  Here are some tips for you:\r\n  1. If this is your first time, please read our contributor guidelines: https://spark.apache.org/contributing.html\r\n  2. Ensure you have added or run the appropriate tests for your PR: https://spark.apache.org/developer-tools.html\r\n  3. If the PR is unfinished, add '[WIP]' in your PR title, e.g., '[WIP][SPARK-XXXX] Your PR title ...'.\r\n  4. Be sure to keep the PR description updated to reflect all changes.\r\n  5. Please write your PR title to summarize what this PR proposes.\r\n  6. If possible, provide a concise example to reproduce the issue for a faster review.\r\n-->\r\n\r\n### What changes were proposed in this pull request?\r\n<!--\r\nPlease clarify what changes you are proposing. The purpose of this section is to outline the changes and how this PR fixes the issue. \r\nIf possible, please consider writing useful notes for better and faster reviews in your PR. See the examples below.\r\n  1. If you refactor some codes with changing classes, showing the class hierarchy will help reviewers.\r\n  2. If you fix some SQL features, you can provide some references of other DBMSes.\r\n  3. If there is design documentation, please add the link.\r\n  4. If there is a discussion in the mailing list, please add the link.\r\n-->\r\n\r\nThis is another PR for stage level scheduling. In particular this adds changes to the dynamic allocation manager and the scheduler backend to be able to track what executors are needed per ResourceProfile.  Note the api is still private to Spark until the entire feature gets in, so this functionality will be there but only usable by tests for profiles other then the DefaultProfile.\r\n\r\nThe main changes here are simply tracking things on a ResourceProfile basis as well as sending the executor requests to the scheduler backend for all ResourceProfiles. \r\n\r\nI introduce a ResourceProfileManager in this PR that will track all the actual ResourceProfile objects so that we can keep them all in a single place and just pass around and use in datastructures the resource profile id. The resource profile id can be used with the ResourceProfileManager to get the actual ResourceProfile contents. \r\n\r\nThere are various places in the code that use executor \"slots\" for things.  The ResourceProfile adds functionality to keep that calculation in it.   This logic is more complex then it should due to standalone mode and mesos coarse grained not setting the executor cores config. They default to all cores on the worker, so calculating slots is harder there.  \r\nThis PR keeps the functionality to make the cores the limiting resource because the scheduler still uses that for \"slots\" for a few things.\r\n\r\nThis PR does also add the resource profile id to the Stage and stage info classes to be able to test things easier.   That full set of changes will come with the scheduler PR that will be after this one.\r\n\r\nThe PR stops at the scheduler backend pieces for the cluster manager and the real YARN support hasn't been added in this PR, that again will be in a separate PR, so this has a few of the API changes up to the cluster manager and then just uses the default profile requests to continue.\r\n\r\nThe code for the entire feature is here for reference: https://github.com/apache/spark/pull/27053/files although it needs to be upmerged again as well.\r\n\r\n### Why are the changes needed?\r\n<!--\r\nPlease clarify why the changes are needed. For instance,\r\n  1. If you propose a new API, clarify the use case for a new API.\r\n  2. If you fix a bug, you can clarify why it is a bug.\r\n-->\r\n\r\nNeeded for stage level scheduling feature.  \r\n\r\n### Does this PR introduce any user-facing change?\r\n<!--\r\nIf yes, please clarify the previous behavior and the change this PR proposes - provide the console output, description and/or an example to show the behavior difference if possible.\r\nIf no, write 'No'.\r\n-->\r\n\r\nNo user facing api changes added here.\r\n\r\n### How was this patch tested?\r\n<!--\r\nIf tests were added, say they were added here. Please make sure to add some test cases that check the changes thoroughly including negative and positive cases if possible.\r\nIf it was tested in a way different from regular unit tests, please clarify how you tested step by step, ideally copy and paste-able, so that other reviewers can test and check, and descendants can verify in the future.\r\nIf tests were not added, please describe why they were not added and/or why it was difficult to add.\r\n-->\r\n\r\nLots of unit tests and manually testing. I tested on yarn, k8s, standalone, local modes. Ran both failure and success cases.",
        "created_at": "2020-01-21T20:20:14Z",
        "updated_at": "2020-02-06T15:16:12Z",
        "closed_at": null,
        "merged_at": null,
        "merge_commit_sha": "a895d26d669cb0ae9ab5960d4399ade4c7a91917",
        "assignee": null,
        "assignees": [

        ],
        "requested_reviewers": [

        ],
        "requested_teams": [

        ],
        "labels": [
          {
            "id": 1406606875,
            "node_id": "MDU6TGFiZWwxNDA2NjA2ODc1",
            "url": "https://api.github.com/repos/apache/spark/labels/SCHEDULER",
            "name": "SCHEDULER",
            "color": "ededed",
            "default": false,
            "description": null
          }
        ],
        "milestone": null,
        "commits_url": "https://api.github.com/repos/apache/spark/pulls/27313/commits",
        "review_comments_url": "https://api.github.com/repos/apache/spark/pulls/27313/comments",
        "review_comment_url": "https://api.github.com/repos/apache/spark/pulls/comments{/number}",
        "comments_url": "https://api.github.com/repos/apache/spark/issues/27313/comments",
        "statuses_url": "https://api.github.com/repos/apache/spark/statuses/87aab301d533e4766149f340f92c1e28cfad046c",
        "head": {
          "label": "tgravescs:SPARK-29148",
          "ref": "SPARK-29148",
          "sha": "87aab301d533e4766149f340f92c1e28cfad046c",
          "user": {
            "login": "tgravescs",
            "id": 4563792,
            "node_id": "MDQ6VXNlcjQ1NjM3OTI=",
            "avatar_url": "https://avatars2.githubusercontent.com/u/4563792?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/tgravescs",
            "html_url": "https://github.com/tgravescs",
            "followers_url": "https://api.github.com/users/tgravescs/followers",
            "following_url": "https://api.github.com/users/tgravescs/following{/other_user}",
            "gists_url": "https://api.github.com/users/tgravescs/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/tgravescs/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/tgravescs/subscriptions",
            "organizations_url": "https://api.github.com/users/tgravescs/orgs",
            "repos_url": "https://api.github.com/users/tgravescs/repos",
            "events_url": "https://api.github.com/users/tgravescs/events{/privacy}",
            "received_events_url": "https://api.github.com/users/tgravescs/received_events",
            "type": "User",
            "site_admin": false
          },
          "repo": {
            "id": 17249522,
            "node_id": "MDEwOlJlcG9zaXRvcnkxNzI0OTUyMg==",
            "name": "spark",
            "full_name": "tgravescs/spark",
            "private": false,
            "owner": {
              "login": "tgravescs",
              "id": 4563792,
              "node_id": "MDQ6VXNlcjQ1NjM3OTI=",
              "avatar_url": "https://avatars2.githubusercontent.com/u/4563792?v=4",
              "gravatar_id": "",
              "url": "https://api.github.com/users/tgravescs",
              "html_url": "https://github.com/tgravescs",
              "followers_url": "https://api.github.com/users/tgravescs/followers",
              "following_url": "https://api.github.com/users/tgravescs/following{/other_user}",
              "gists_url": "https://api.github.com/users/tgravescs/gists{/gist_id}",
              "starred_url": "https://api.github.com/users/tgravescs/starred{/owner}{/repo}",
              "subscriptions_url": "https://api.github.com/users/tgravescs/subscriptions",
              "organizations_url": "https://api.github.com/users/tgravescs/orgs",
              "repos_url": "https://api.github.com/users/tgravescs/repos",
              "events_url": "https://api.github.com/users/tgravescs/events{/privacy}",
              "received_events_url": "https://api.github.com/users/tgravescs/received_events",
              "type": "User",
              "site_admin": false
            },
            "html_url": "https://github.com/tgravescs/spark",
            "description": "Mirror of Apache Spark",
            "fork": true,
            "url": "https://api.github.com/repos/tgravescs/spark",
            "forks_url": "https://api.github.com/repos/tgravescs/spark/forks",
            "keys_url": "https://api.github.com/repos/tgravescs/spark/keys{/key_id}",
            "collaborators_url": "https://api.github.com/repos/tgravescs/spark/collaborators{/collaborator}",
            "teams_url": "https://api.github.com/repos/tgravescs/spark/teams",
            "hooks_url": "https://api.github.com/repos/tgravescs/spark/hooks",
            "issue_events_url": "https://api.github.com/repos/tgravescs/spark/issues/events{/number}",
            "events_url": "https://api.github.com/repos/tgravescs/spark/events",
            "assignees_url": "https://api.github.com/repos/tgravescs/spark/assignees{/user}",
            "branches_url": "https://api.github.com/repos/tgravescs/spark/branches{/branch}",
            "tags_url": "https://api.github.com/repos/tgravescs/spark/tags",
            "blobs_url": "https://api.github.com/repos/tgravescs/spark/git/blobs{/sha}",
            "git_tags_url": "https://api.github.com/repos/tgravescs/spark/git/tags{/sha}",
            "git_refs_url": "https://api.github.com/repos/tgravescs/spark/git/refs{/sha}",
            "trees_url": "https://api.github.com/repos/tgravescs/spark/git/trees{/sha}",
            "statuses_url": "https://api.github.com/repos/tgravescs/spark/statuses/{sha}",
            "languages_url": "https://api.github.com/repos/tgravescs/spark/languages",
            "stargazers_url": "https://api.github.com/repos/tgravescs/spark/stargazers",
            "contributors_url": "https://api.github.com/repos/tgravescs/spark/contributors",
            "subscribers_url": "https://api.github.com/repos/tgravescs/spark/subscribers",
            "subscription_url": "https://api.github.com/repos/tgravescs/spark/subscription",
            "commits_url": "https://api.github.com/repos/tgravescs/spark/commits{/sha}",
            "git_commits_url": "https://api.github.com/repos/tgravescs/spark/git/commits{/sha}",
            "comments_url": "https://api.github.com/repos/tgravescs/spark/comments{/number}",
            "issue_comment_url": "https://api.github.com/repos/tgravescs/spark/issues/comments{/number}",
            "contents_url": "https://api.github.com/repos/tgravescs/spark/contents/{+path}",
            "compare_url": "https://api.github.com/repos/tgravescs/spark/compare/{base}...{head}",
            "merges_url": "https://api.github.com/repos/tgravescs/spark/merges",
            "archive_url": "https://api.github.com/repos/tgravescs/spark/{archive_format}{/ref}",
            "downloads_url": "https://api.github.com/repos/tgravescs/spark/downloads",
            "issues_url": "https://api.github.com/repos/tgravescs/spark/issues{/number}",
            "pulls_url": "https://api.github.com/repos/tgravescs/spark/pulls{/number}",
            "milestones_url": "https://api.github.com/repos/tgravescs/spark/milestones{/number}",
            "notifications_url": "https://api.github.com/repos/tgravescs/spark/notifications{?since,all,participating}",
            "labels_url": "https://api.github.com/repos/tgravescs/spark/labels{/name}",
            "releases_url": "https://api.github.com/repos/tgravescs/spark/releases{/id}",
            "deployments_url": "https://api.github.com/repos/tgravescs/spark/deployments",
            "created_at": "2014-02-27T13:26:24Z",
            "updated_at": "2019-12-12T03:01:23Z",
            "pushed_at": "2020-02-04T15:26:23Z",
            "git_url": "git://github.com/tgravescs/spark.git",
            "ssh_url": "git@github.com:tgravescs/spark.git",
            "clone_url": "https://github.com/tgravescs/spark.git",
            "svn_url": "https://github.com/tgravescs/spark",
            "homepage": null,
            "size": 296948,
            "stargazers_count": 1,
            "watchers_count": 1,
            "language": "Scala",
            "has_issues": false,
            "has_projects": true,
            "has_downloads": true,
            "has_wiki": false,
            "has_pages": false,
            "forks_count": 0,
            "mirror_url": null,
            "archived": false,
            "disabled": false,
            "open_issues_count": 2,
            "license": {
              "key": "apache-2.0",
              "name": "Apache License 2.0",
              "spdx_id": "Apache-2.0",
              "url": "https://api.github.com/licenses/apache-2.0",
              "node_id": "MDc6TGljZW5zZTI="
            },
            "forks": 0,
            "open_issues": 2,
            "watchers": 1,
            "default_branch": "master"
          }
        },
        "base": {
          "label": "apache:master",
          "ref": "master",
          "sha": "a4912cee615314e9578e6ab4eae25f147feacbd5",
          "user": {
            "login": "apache",
            "id": 47359,
            "node_id": "MDEyOk9yZ2FuaXphdGlvbjQ3MzU5",
            "avatar_url": "https://avatars0.githubusercontent.com/u/47359?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/apache",
            "html_url": "https://github.com/apache",
            "followers_url": "https://api.github.com/users/apache/followers",
            "following_url": "https://api.github.com/users/apache/following{/other_user}",
            "gists_url": "https://api.github.com/users/apache/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/apache/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/apache/subscriptions",
            "organizations_url": "https://api.github.com/users/apache/orgs",
            "repos_url": "https://api.github.com/users/apache/repos",
            "events_url": "https://api.github.com/users/apache/events{/privacy}",
            "received_events_url": "https://api.github.com/users/apache/received_events",
            "type": "Organization",
            "site_admin": false
          },
          "repo": {
            "id": 17165658,
            "node_id": "MDEwOlJlcG9zaXRvcnkxNzE2NTY1OA==",
            "name": "spark",
            "full_name": "apache/spark",
            "private": false,
            "owner": {
              "login": "apache",
              "id": 47359,
              "node_id": "MDEyOk9yZ2FuaXphdGlvbjQ3MzU5",
              "avatar_url": "https://avatars0.githubusercontent.com/u/47359?v=4",
              "gravatar_id": "",
              "url": "https://api.github.com/users/apache",
              "html_url": "https://github.com/apache",
              "followers_url": "https://api.github.com/users/apache/followers",
              "following_url": "https://api.github.com/users/apache/following{/other_user}",
              "gists_url": "https://api.github.com/users/apache/gists{/gist_id}",
              "starred_url": "https://api.github.com/users/apache/starred{/owner}{/repo}",
              "subscriptions_url": "https://api.github.com/users/apache/subscriptions",
              "organizations_url": "https://api.github.com/users/apache/orgs",
              "repos_url": "https://api.github.com/users/apache/repos",
              "events_url": "https://api.github.com/users/apache/events{/privacy}",
              "received_events_url": "https://api.github.com/users/apache/received_events",
              "type": "Organization",
              "site_admin": false
            },
            "html_url": "https://github.com/apache/spark",
            "description": "Apache Spark",
            "fork": false,
            "url": "https://api.github.com/repos/apache/spark",
            "forks_url": "https://api.github.com/repos/apache/spark/forks",
            "keys_url": "https://api.github.com/repos/apache/spark/keys{/key_id}",
            "collaborators_url": "https://api.github.com/repos/apache/spark/collaborators{/collaborator}",
            "teams_url": "https://api.github.com/repos/apache/spark/teams",
            "hooks_url": "https://api.github.com/repos/apache/spark/hooks",
            "issue_events_url": "https://api.github.com/repos/apache/spark/issues/events{/number}",
            "events_url": "https://api.github.com/repos/apache/spark/events",
            "assignees_url": "https://api.github.com/repos/apache/spark/assignees{/user}",
            "branches_url": "https://api.github.com/repos/apache/spark/branches{/branch}",
            "tags_url": "https://api.github.com/repos/apache/spark/tags",
            "blobs_url": "https://api.github.com/repos/apache/spark/git/blobs{/sha}",
            "git_tags_url": "https://api.github.com/repos/apache/spark/git/tags{/sha}",
            "git_refs_url": "https://api.github.com/repos/apache/spark/git/refs{/sha}",
            "trees_url": "https://api.github.com/repos/apache/spark/git/trees{/sha}",
            "statuses_url": "https://api.github.com/repos/apache/spark/statuses/{sha}",
            "languages_url": "https://api.github.com/repos/apache/spark/languages",
            "stargazers_url": "https://api.github.com/repos/apache/spark/stargazers",
            "contributors_url": "https://api.github.com/repos/apache/spark/contributors",
            "subscribers_url": "https://api.github.com/repos/apache/spark/subscribers",
            "subscription_url": "https://api.github.com/repos/apache/spark/subscription",
            "commits_url": "https://api.github.com/repos/apache/spark/commits{/sha}",
            "git_commits_url": "https://api.github.com/repos/apache/spark/git/commits{/sha}",
            "comments_url": "https://api.github.com/repos/apache/spark/comments{/number}",
            "issue_comment_url": "https://api.github.com/repos/apache/spark/issues/comments{/number}",
            "contents_url": "https://api.github.com/repos/apache/spark/contents/{+path}",
            "compare_url": "https://api.github.com/repos/apache/spark/compare/{base}...{head}",
            "merges_url": "https://api.github.com/repos/apache/spark/merges",
            "archive_url": "https://api.github.com/repos/apache/spark/{archive_format}{/ref}",
            "downloads_url": "https://api.github.com/repos/apache/spark/downloads",
            "issues_url": "https://api.github.com/repos/apache/spark/issues{/number}",
            "pulls_url": "https://api.github.com/repos/apache/spark/pulls{/number}",
            "milestones_url": "https://api.github.com/repos/apache/spark/milestones{/number}",
            "notifications_url": "https://api.github.com/repos/apache/spark/notifications{?since,all,participating}",
            "labels_url": "https://api.github.com/repos/apache/spark/labels{/name}",
            "releases_url": "https://api.github.com/repos/apache/spark/releases{/id}",
            "deployments_url": "https://api.github.com/repos/apache/spark/deployments",
            "created_at": "2014-02-25T08:00:08Z",
            "updated_at": "2020-02-06T12:54:19Z",
            "pushed_at": "2020-02-06T14:36:05Z",
            "git_url": "git://github.com/apache/spark.git",
            "ssh_url": "git@github.com:apache/spark.git",
            "clone_url": "https://github.com/apache/spark.git",
            "svn_url": "https://github.com/apache/spark",
            "homepage": "",
            "size": 320147,
            "stargazers_count": 25062,
            "watchers_count": 25062,
            "language": "Scala",
            "has_issues": false,
            "has_projects": true,
            "has_downloads": true,
            "has_wiki": false,
            "has_pages": false,
            "forks_count": 21084,
            "mirror_url": null,
            "archived": false,
            "disabled": false,
            "open_issues_count": 276,
            "license": {
              "key": "apache-2.0",
              "name": "Apache License 2.0",
              "spdx_id": "Apache-2.0",
              "url": "https://api.github.com/licenses/apache-2.0",
              "node_id": "MDc6TGljZW5zZTI="
            },
            "forks": 21084,
            "open_issues": 276,
            "watchers": 25062,
            "default_branch": "master"
          }
        },
        "_links": {
          "self": {
            "href": "https://api.github.com/repos/apache/spark/pulls/27313"
          },
          "html": {
            "href": "https://github.com/apache/spark/pull/27313"
          },
          "issue": {
            "href": "https://api.github.com/repos/apache/spark/issues/27313"
          },
          "comments": {
            "href": "https://api.github.com/repos/apache/spark/issues/27313/comments"
          },
          "review_comments": {
            "href": "https://api.github.com/repos/apache/spark/pulls/27313/comments"
          },
          "review_comment": {
            "href": "https://api.github.com/repos/apache/spark/pulls/comments{/number}"
          },
          "commits": {
            "href": "https://api.github.com/repos/apache/spark/pulls/27313/commits"
          },
          "statuses": {
            "href": "https://api.github.com/repos/apache/spark/statuses/87aab301d533e4766149f340f92c1e28cfad046c"
          }
        },
        "author_association": "CONTRIBUTOR"
      }
    },
    "public": true,
    "created_at": "2020-02-06T15:16:12Z",
    "org": {
      "id": 47359,
      "login": "apache",
      "gravatar_id": "",
      "url": "https://api.github.com/orgs/apache",
      "avatar_url": "https://avatars.githubusercontent.com/u/47359?"
    }
  },
  {
    "id": "11453169312",
    "type": "IssueCommentEvent",
    "actor": {
      "id": 4031291,
      "login": "AmplabJenkins",
      "display_login": "AmplabJenkins",
      "gravatar_id": "",
      "url": "https://api.github.com/users/AmplabJenkins",
      "avatar_url": "https://avatars.githubusercontent.com/u/4031291?"
    },
    "repo": {
      "id": 17165658,
      "name": "apache/spark",
      "url": "https://api.github.com/repos/apache/spark"
    },
    "payload": {
      "action": "created",
      "issue": {
        "url": "https://api.github.com/repos/apache/spark/issues/27321",
        "repository_url": "https://api.github.com/repos/apache/spark",
        "labels_url": "https://api.github.com/repos/apache/spark/issues/27321/labels{/name}",
        "comments_url": "https://api.github.com/repos/apache/spark/issues/27321/comments",
        "events_url": "https://api.github.com/repos/apache/spark/issues/27321/events",
        "html_url": "https://github.com/apache/spark/pull/27321",
        "id": 553693636,
        "node_id": "MDExOlB1bGxSZXF1ZXN0MzY1OTgwOTM1",
        "number": 27321,
        "title": "[SPARK-30049][SQL] SQL fails to parse when comment contains an unmatched quote character.",
        "user": {
          "login": "javierivanov",
          "id": 7876890,
          "node_id": "MDQ6VXNlcjc4NzY4OTA=",
          "avatar_url": "https://avatars1.githubusercontent.com/u/7876890?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/javierivanov",
          "html_url": "https://github.com/javierivanov",
          "followers_url": "https://api.github.com/users/javierivanov/followers",
          "following_url": "https://api.github.com/users/javierivanov/following{/other_user}",
          "gists_url": "https://api.github.com/users/javierivanov/gists{/gist_id}",
          "starred_url": "https://api.github.com/users/javierivanov/starred{/owner}{/repo}",
          "subscriptions_url": "https://api.github.com/users/javierivanov/subscriptions",
          "organizations_url": "https://api.github.com/users/javierivanov/orgs",
          "repos_url": "https://api.github.com/users/javierivanov/repos",
          "events_url": "https://api.github.com/users/javierivanov/events{/privacy}",
          "received_events_url": "https://api.github.com/users/javierivanov/received_events",
          "type": "User",
          "site_admin": false
        },
        "labels": [
          {
            "id": 1405794576,
            "node_id": "MDU6TGFiZWwxNDA1Nzk0NTc2",
            "url": "https://api.github.com/repos/apache/spark/labels/SQL",
            "name": "SQL",
            "color": "ededed",
            "default": false,
            "description": null
          }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [

        ],
        "milestone": null,
        "comments": 12,
        "created_at": "2020-01-22T17:41:06Z",
        "updated_at": "2020-02-06T14:57:41Z",
        "closed_at": null,
        "author_association": "NONE",
        "pull_request": {
          "url": "https://api.github.com/repos/apache/spark/pulls/27321",
          "html_url": "https://github.com/apache/spark/pull/27321",
          "diff_url": "https://github.com/apache/spark/pull/27321.diff",
          "patch_url": "https://github.com/apache/spark/pull/27321.patch"
        },
        "body": "<!--\r\nThanks for sending a pull request!  Here are some tips for you:\r\n  1. If this is your first time, please read our contributor guidelines: https://spark.apache.org/contributing.html\r\n  2. Ensure you have added or run the appropriate tests for your PR: https://spark.apache.org/developer-tools.html\r\n  3. If the PR is unfinished, add '[WIP]' in your PR title, e.g., '[WIP][SPARK-XXXX] Your PR title ...'.\r\n  4. Be sure to keep the PR description updated to reflect all changes.\r\n  5. Please write your PR title to summarize what this PR proposes.\r\n  6. If possible, provide a concise example to reproduce the issue for a faster review.\r\n-->\r\n\r\n### What changes were proposed in this pull request?\r\n<!--\r\nPlease clarify what changes you are proposing. The purpose of this section is to outline the changes and how this PR fixes the issue. \r\nIf possible, please consider writing useful notes for better and faster reviews in your PR. See the examples below.\r\n  1. If you refactor some codes with changing classes, showing the class hierarchy will help reviewers.\r\n  2. If you fix some SQL features, you can provide some references of other DBMSes.\r\n  3. If there is design documentation, please add the link.\r\n  4. If there is a discussion in the mailing list, please add the link.\r\n-->\r\nA SQL statement that contains a comment with an unmatched quote character can lead to a parse error:\r\n- Added a insideComment flag in the splitter method to avoid checking single and double quotes within a comment:\r\n```\r\nspark-sql> SELECT 1 -- someone's comment here\r\n         > ;\r\nError in query: \r\nextraneous input ';' expecting <EOF>(line 2, pos 0)\r\n\r\n== SQL ==\r\nSELECT 1 -- someone's comment here\r\n;\r\n^^^\r\n```\r\n\r\n### Why are the changes needed?\r\n<!--\r\nPlease clarify why the changes are needed. For instance,\r\n  1. If you propose a new API, clarify the use case for a new API.\r\n  2. If you fix a bug, you can clarify why it is a bug.\r\n-->\r\nThis misbehaviour was not present on previous spark versions.\r\n\r\n\r\n### Does this PR introduce any user-facing change?\r\n<!--\r\nIf yes, please clarify the previous behavior and the change this PR proposes - provide the console output, description and/or an example to show the behavior difference if possible.\r\nIf no, write 'No'.\r\n-->\r\n- No\r\n\r\n### How was this patch tested?\r\n<!--\r\nIf tests were added, say they were added here. Please make sure to add some test cases that check the changes thoroughly including negative and positive cases if possible.\r\nIf it was tested in a way different from regular unit tests, please clarify how you tested step by step, ideally copy and paste-able, so that other reviewers can test and check, and descendants can verify in the future.\r\nIf tests were not added, please describe why they were not added and/or why it was difficult to add.\r\n-->\r\n- New tests were added. "
      },
      "comment": {
        "url": "https://api.github.com/repos/apache/spark/issues/comments/582944034",
        "html_url": "https://github.com/apache/spark/pull/27321#issuecomment-582944034",
        "issue_url": "https://api.github.com/repos/apache/spark/issues/27321",
        "id": 582944034,
        "node_id": "MDEyOklzc3VlQ29tbWVudDU4Mjk0NDAzNA==",
        "user": {
          "login": "AmplabJenkins",
          "id": 4031291,
          "node_id": "MDQ6VXNlcjQwMzEyOTE=",
          "avatar_url": "https://avatars3.githubusercontent.com/u/4031291?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/AmplabJenkins",
          "html_url": "https://github.com/AmplabJenkins",
          "followers_url": "https://api.github.com/users/AmplabJenkins/followers",
          "following_url": "https://api.github.com/users/AmplabJenkins/following{/other_user}",
          "gists_url": "https://api.github.com/users/AmplabJenkins/gists{/gist_id}",
          "starred_url": "https://api.github.com/users/AmplabJenkins/starred{/owner}{/repo}",
          "subscriptions_url": "https://api.github.com/users/AmplabJenkins/subscriptions",
          "organizations_url": "https://api.github.com/users/AmplabJenkins/orgs",
          "repos_url": "https://api.github.com/users/AmplabJenkins/repos",
          "events_url": "https://api.github.com/users/AmplabJenkins/events{/privacy}",
          "received_events_url": "https://api.github.com/users/AmplabJenkins/received_events",
          "type": "User",
          "site_admin": false
        },
        "created_at": "2020-02-06T14:57:41Z",
        "updated_at": "2020-02-06T14:57:41Z",
        "author_association": "NONE",
        "body": "Test PASSed.\nRefer to this link for build results (access rights to CI server needed): \nhttps://amplab.cs.berkeley.edu/jenkins//job/SparkPullRequestBuilder/117997/\nTest PASSed."
      }
    },
    "public": true,
    "created_at": "2020-02-06T14:57:41Z",
    "org": {
      "id": 47359,
      "login": "apache",
      "gravatar_id": "",
      "url": "https://api.github.com/orgs/apache",
      "avatar_url": "https://avatars.githubusercontent.com/u/47359?"
    }
  },
  {
    "id": "11453169054",
    "type": "IssueCommentEvent",
    "actor": {
      "id": 4031291,
      "login": "AmplabJenkins",
      "display_login": "AmplabJenkins",
      "gravatar_id": "",
      "url": "https://api.github.com/users/AmplabJenkins",
      "avatar_url": "https://avatars.githubusercontent.com/u/4031291?"
    },
    "repo": {
      "id": 17165658,
      "name": "apache/spark",
      "url": "https://api.github.com/repos/apache/spark"
    },
    "payload": {
      "action": "created",
      "issue": {
        "url": "https://api.github.com/repos/apache/spark/issues/27321",
        "repository_url": "https://api.github.com/repos/apache/spark",
        "labels_url": "https://api.github.com/repos/apache/spark/issues/27321/labels{/name}",
        "comments_url": "https://api.github.com/repos/apache/spark/issues/27321/comments",
        "events_url": "https://api.github.com/repos/apache/spark/issues/27321/events",
        "html_url": "https://github.com/apache/spark/pull/27321",
        "id": 553693636,
        "node_id": "MDExOlB1bGxSZXF1ZXN0MzY1OTgwOTM1",
        "number": 27321,
        "title": "[SPARK-30049][SQL] SQL fails to parse when comment contains an unmatched quote character.",
        "user": {
          "login": "javierivanov",
          "id": 7876890,
          "node_id": "MDQ6VXNlcjc4NzY4OTA=",
          "avatar_url": "https://avatars1.githubusercontent.com/u/7876890?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/javierivanov",
          "html_url": "https://github.com/javierivanov",
          "followers_url": "https://api.github.com/users/javierivanov/followers",
          "following_url": "https://api.github.com/users/javierivanov/following{/other_user}",
          "gists_url": "https://api.github.com/users/javierivanov/gists{/gist_id}",
          "starred_url": "https://api.github.com/users/javierivanov/starred{/owner}{/repo}",
          "subscriptions_url": "https://api.github.com/users/javierivanov/subscriptions",
          "organizations_url": "https://api.github.com/users/javierivanov/orgs",
          "repos_url": "https://api.github.com/users/javierivanov/repos",
          "events_url": "https://api.github.com/users/javierivanov/events{/privacy}",
          "received_events_url": "https://api.github.com/users/javierivanov/received_events",
          "type": "User",
          "site_admin": false
        },
        "labels": [
          {
            "id": 1405794576,
            "node_id": "MDU6TGFiZWwxNDA1Nzk0NTc2",
            "url": "https://api.github.com/repos/apache/spark/labels/SQL",
            "name": "SQL",
            "color": "ededed",
            "default": false,
            "description": null
          }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [

        ],
        "milestone": null,
        "comments": 11,
        "created_at": "2020-01-22T17:41:06Z",
        "updated_at": "2020-02-06T14:57:39Z",
        "closed_at": null,
        "author_association": "NONE",
        "pull_request": {
          "url": "https://api.github.com/repos/apache/spark/pulls/27321",
          "html_url": "https://github.com/apache/spark/pull/27321",
          "diff_url": "https://github.com/apache/spark/pull/27321.diff",
          "patch_url": "https://github.com/apache/spark/pull/27321.patch"
        },
        "body": "<!--\r\nThanks for sending a pull request!  Here are some tips for you:\r\n  1. If this is your first time, please read our contributor guidelines: https://spark.apache.org/contributing.html\r\n  2. Ensure you have added or run the appropriate tests for your PR: https://spark.apache.org/developer-tools.html\r\n  3. If the PR is unfinished, add '[WIP]' in your PR title, e.g., '[WIP][SPARK-XXXX] Your PR title ...'.\r\n  4. Be sure to keep the PR description updated to reflect all changes.\r\n  5. Please write your PR title to summarize what this PR proposes.\r\n  6. If possible, provide a concise example to reproduce the issue for a faster review.\r\n-->\r\n\r\n### What changes were proposed in this pull request?\r\n<!--\r\nPlease clarify what changes you are proposing. The purpose of this section is to outline the changes and how this PR fixes the issue. \r\nIf possible, please consider writing useful notes for better and faster reviews in your PR. See the examples below.\r\n  1. If you refactor some codes with changing classes, showing the class hierarchy will help reviewers.\r\n  2. If you fix some SQL features, you can provide some references of other DBMSes.\r\n  3. If there is design documentation, please add the link.\r\n  4. If there is a discussion in the mailing list, please add the link.\r\n-->\r\nA SQL statement that contains a comment with an unmatched quote character can lead to a parse error:\r\n- Added a insideComment flag in the splitter method to avoid checking single and double quotes within a comment:\r\n```\r\nspark-sql> SELECT 1 -- someone's comment here\r\n         > ;\r\nError in query: \r\nextraneous input ';' expecting <EOF>(line 2, pos 0)\r\n\r\n== SQL ==\r\nSELECT 1 -- someone's comment here\r\n;\r\n^^^\r\n```\r\n\r\n### Why are the changes needed?\r\n<!--\r\nPlease clarify why the changes are needed. For instance,\r\n  1. If you propose a new API, clarify the use case for a new API.\r\n  2. If you fix a bug, you can clarify why it is a bug.\r\n-->\r\nThis misbehaviour was not present on previous spark versions.\r\n\r\n\r\n### Does this PR introduce any user-facing change?\r\n<!--\r\nIf yes, please clarify the previous behavior and the change this PR proposes - provide the console output, description and/or an example to show the behavior difference if possible.\r\nIf no, write 'No'.\r\n-->\r\n- No\r\n\r\n### How was this patch tested?\r\n<!--\r\nIf tests were added, say they were added here. Please make sure to add some test cases that check the changes thoroughly including negative and positive cases if possible.\r\nIf it was tested in a way different from regular unit tests, please clarify how you tested step by step, ideally copy and paste-able, so that other reviewers can test and check, and descendants can verify in the future.\r\nIf tests were not added, please describe why they were not added and/or why it was difficult to add.\r\n-->\r\n- New tests were added. "
      },
      "comment": {
        "url": "https://api.github.com/repos/apache/spark/issues/comments/582944019",
        "html_url": "https://github.com/apache/spark/pull/27321#issuecomment-582944019",
        "issue_url": "https://api.github.com/repos/apache/spark/issues/27321",
        "id": 582944019,
        "node_id": "MDEyOklzc3VlQ29tbWVudDU4Mjk0NDAxOQ==",
        "user": {
          "login": "AmplabJenkins",
          "id": 4031291,
          "node_id": "MDQ6VXNlcjQwMzEyOTE=",
          "avatar_url": "https://avatars3.githubusercontent.com/u/4031291?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/AmplabJenkins",
          "html_url": "https://github.com/AmplabJenkins",
          "followers_url": "https://api.github.com/users/AmplabJenkins/followers",
          "following_url": "https://api.github.com/users/AmplabJenkins/following{/other_user}",
          "gists_url": "https://api.github.com/users/AmplabJenkins/gists{/gist_id}",
          "starred_url": "https://api.github.com/users/AmplabJenkins/starred{/owner}{/repo}",
          "subscriptions_url": "https://api.github.com/users/AmplabJenkins/subscriptions",
          "organizations_url": "https://api.github.com/users/AmplabJenkins/orgs",
          "repos_url": "https://api.github.com/users/AmplabJenkins/repos",
          "events_url": "https://api.github.com/users/AmplabJenkins/events{/privacy}",
          "received_events_url": "https://api.github.com/users/AmplabJenkins/received_events",
          "type": "User",
          "site_admin": false
        },
        "created_at": "2020-02-06T14:57:39Z",
        "updated_at": "2020-02-06T14:57:39Z",
        "author_association": "NONE",
        "body": "Merged build finished. Test PASSed."
      }
    },
    "public": true,
    "created_at": "2020-02-06T14:57:40Z",
    "org": {
      "id": 47359,
      "login": "apache",
      "gravatar_id": "",
      "url": "https://api.github.com/orgs/apache",
      "avatar_url": "https://avatars.githubusercontent.com/u/47359?"
    }
  },
  {
    "id": "11453164104",
    "type": "IssueCommentEvent",
    "actor": {
      "id": 8108735,
      "login": "SparkQA",
      "display_login": "SparkQA",
      "gravatar_id": "",
      "url": "https://api.github.com/users/SparkQA",
      "avatar_url": "https://avatars.githubusercontent.com/u/8108735?"
    },
    "repo": {
      "id": 17165658,
      "name": "apache/spark",
      "url": "https://api.github.com/repos/apache/spark"
    },
    "payload": {
      "action": "created",
      "issue": {
        "url": "https://api.github.com/repos/apache/spark/issues/27321",
        "repository_url": "https://api.github.com/repos/apache/spark",
        "labels_url": "https://api.github.com/repos/apache/spark/issues/27321/labels{/name}",
        "comments_url": "https://api.github.com/repos/apache/spark/issues/27321/comments",
        "events_url": "https://api.github.com/repos/apache/spark/issues/27321/events",
        "html_url": "https://github.com/apache/spark/pull/27321",
        "id": 553693636,
        "node_id": "MDExOlB1bGxSZXF1ZXN0MzY1OTgwOTM1",
        "number": 27321,
        "title": "[SPARK-30049][SQL] SQL fails to parse when comment contains an unmatched quote character.",
        "user": {
          "login": "javierivanov",
          "id": 7876890,
          "node_id": "MDQ6VXNlcjc4NzY4OTA=",
          "avatar_url": "https://avatars1.githubusercontent.com/u/7876890?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/javierivanov",
          "html_url": "https://github.com/javierivanov",
          "followers_url": "https://api.github.com/users/javierivanov/followers",
          "following_url": "https://api.github.com/users/javierivanov/following{/other_user}",
          "gists_url": "https://api.github.com/users/javierivanov/gists{/gist_id}",
          "starred_url": "https://api.github.com/users/javierivanov/starred{/owner}{/repo}",
          "subscriptions_url": "https://api.github.com/users/javierivanov/subscriptions",
          "organizations_url": "https://api.github.com/users/javierivanov/orgs",
          "repos_url": "https://api.github.com/users/javierivanov/repos",
          "events_url": "https://api.github.com/users/javierivanov/events{/privacy}",
          "received_events_url": "https://api.github.com/users/javierivanov/received_events",
          "type": "User",
          "site_admin": false
        },
        "labels": [
          {
            "id": 1405794576,
            "node_id": "MDU6TGFiZWwxNDA1Nzk0NTc2",
            "url": "https://api.github.com/repos/apache/spark/labels/SQL",
            "name": "SQL",
            "color": "ededed",
            "default": false,
            "description": null
          }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [

        ],
        "milestone": null,
        "comments": 10,
        "created_at": "2020-01-22T17:41:06Z",
        "updated_at": "2020-02-06T14:57:11Z",
        "closed_at": null,
        "author_association": "NONE",
        "pull_request": {
          "url": "https://api.github.com/repos/apache/spark/pulls/27321",
          "html_url": "https://github.com/apache/spark/pull/27321",
          "diff_url": "https://github.com/apache/spark/pull/27321.diff",
          "patch_url": "https://github.com/apache/spark/pull/27321.patch"
        },
        "body": "<!--\r\nThanks for sending a pull request!  Here are some tips for you:\r\n  1. If this is your first time, please read our contributor guidelines: https://spark.apache.org/contributing.html\r\n  2. Ensure you have added or run the appropriate tests for your PR: https://spark.apache.org/developer-tools.html\r\n  3. If the PR is unfinished, add '[WIP]' in your PR title, e.g., '[WIP][SPARK-XXXX] Your PR title ...'.\r\n  4. Be sure to keep the PR description updated to reflect all changes.\r\n  5. Please write your PR title to summarize what this PR proposes.\r\n  6. If possible, provide a concise example to reproduce the issue for a faster review.\r\n-->\r\n\r\n### What changes were proposed in this pull request?\r\n<!--\r\nPlease clarify what changes you are proposing. The purpose of this section is to outline the changes and how this PR fixes the issue. \r\nIf possible, please consider writing useful notes for better and faster reviews in your PR. See the examples below.\r\n  1. If you refactor some codes with changing classes, showing the class hierarchy will help reviewers.\r\n  2. If you fix some SQL features, you can provide some references of other DBMSes.\r\n  3. If there is design documentation, please add the link.\r\n  4. If there is a discussion in the mailing list, please add the link.\r\n-->\r\nA SQL statement that contains a comment with an unmatched quote character can lead to a parse error:\r\n- Added a insideComment flag in the splitter method to avoid checking single and double quotes within a comment:\r\n```\r\nspark-sql> SELECT 1 -- someone's comment here\r\n         > ;\r\nError in query: \r\nextraneous input ';' expecting <EOF>(line 2, pos 0)\r\n\r\n== SQL ==\r\nSELECT 1 -- someone's comment here\r\n;\r\n^^^\r\n```\r\n\r\n### Why are the changes needed?\r\n<!--\r\nPlease clarify why the changes are needed. For instance,\r\n  1. If you propose a new API, clarify the use case for a new API.\r\n  2. If you fix a bug, you can clarify why it is a bug.\r\n-->\r\nThis misbehaviour was not present on previous spark versions.\r\n\r\n\r\n### Does this PR introduce any user-facing change?\r\n<!--\r\nIf yes, please clarify the previous behavior and the change this PR proposes - provide the console output, description and/or an example to show the behavior difference if possible.\r\nIf no, write 'No'.\r\n-->\r\n- No\r\n\r\n### How was this patch tested?\r\n<!--\r\nIf tests were added, say they were added here. Please make sure to add some test cases that check the changes thoroughly including negative and positive cases if possible.\r\nIf it was tested in a way different from regular unit tests, please clarify how you tested step by step, ideally copy and paste-able, so that other reviewers can test and check, and descendants can verify in the future.\r\nIf tests were not added, please describe why they were not added and/or why it was difficult to add.\r\n-->\r\n- New tests were added. "
      },
      "comment": {
        "url": "https://api.github.com/repos/apache/spark/issues/comments/582943804",
        "html_url": "https://github.com/apache/spark/pull/27321#issuecomment-582943804",
        "issue_url": "https://api.github.com/repos/apache/spark/issues/27321",
        "id": 582943804,
        "node_id": "MDEyOklzc3VlQ29tbWVudDU4Mjk0MzgwNA==",
        "user": {
          "login": "SparkQA",
          "id": 8108735,
          "node_id": "MDQ6VXNlcjgxMDg3MzU=",
          "avatar_url": "https://avatars1.githubusercontent.com/u/8108735?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/SparkQA",
          "html_url": "https://github.com/SparkQA",
          "followers_url": "https://api.github.com/users/SparkQA/followers",
          "following_url": "https://api.github.com/users/SparkQA/following{/other_user}",
          "gists_url": "https://api.github.com/users/SparkQA/gists{/gist_id}",
          "starred_url": "https://api.github.com/users/SparkQA/starred{/owner}{/repo}",
          "subscriptions_url": "https://api.github.com/users/SparkQA/subscriptions",
          "organizations_url": "https://api.github.com/users/SparkQA/orgs",
          "repos_url": "https://api.github.com/users/SparkQA/repos",
          "events_url": "https://api.github.com/users/SparkQA/events{/privacy}",
          "received_events_url": "https://api.github.com/users/SparkQA/received_events",
          "type": "User",
          "site_admin": false
        },
        "created_at": "2020-02-06T14:57:11Z",
        "updated_at": "2020-02-06T14:57:11Z",
        "author_association": "NONE",
        "body": "**[Test build #117997 has finished](https://amplab.cs.berkeley.edu/jenkins/job/SparkPullRequestBuilder/117997/testReport)** for PR 27321 at commit [`074a943`](https://github.com/apache/spark/commit/074a943b223aa36ab33ed270e6eb506a45c45180).\n * This patch passes all tests.\n * This patch merges cleanly.\n * This patch adds no public classes."
      }
    },
    "public": true,
    "created_at": "2020-02-06T14:57:11Z",
    "org": {
      "id": 47359,
      "login": "apache",
      "gravatar_id": "",
      "url": "https://api.github.com/orgs/apache",
      "avatar_url": "https://avatars.githubusercontent.com/u/47359?"
    }
  }
]
